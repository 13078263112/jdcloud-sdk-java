/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.jdro.model;


/**
 * PropertyTypeDefinition is the definition of a property
 */
public class PropertyTypeDefinition  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 注释
     */
    private String comment;

    /**
     * 说明文档地址
     */
    private String documentation;

    /**
     * 如果 Type 字段的值为 List，则指示 CloudFormation 是否允许重复值。true将忽略重复值，false将对重复值报错
     */
    private Boolean duplicatesAllowed;

    /**
     * 如果 Type 字段的值为 List 或 Map，则指示列表或映射的类型 (如果它们包含非基元类型)
     */
    private String itemType;

    /**
     * 如果 Type 字段的值为 List 或 Map，则指示列表或映射的类型 (如果它们包含基元类型)
     */
    private String primitiveItemType;

    /**
     * 基元类型
     */
    private String primitiveType;

    /**
     * 是否必填
     */
    private Boolean required;

    /**
     * type
     */
    private PropertyItemType type;

    /**
     * 更新行为类别
     */
    private String updateType;


    /**
     * get 注释
     *
     * @return
     */
    public String getComment() {
        return comment;
    }

    /**
     * set 注释
     *
     * @param comment
     */
    public void setComment(String comment) {
        this.comment = comment;
    }

    /**
     * get 说明文档地址
     *
     * @return
     */
    public String getDocumentation() {
        return documentation;
    }

    /**
     * set 说明文档地址
     *
     * @param documentation
     */
    public void setDocumentation(String documentation) {
        this.documentation = documentation;
    }

    /**
     * get 如果 Type 字段的值为 List，则指示 CloudFormation 是否允许重复值。true将忽略重复值，false将对重复值报错
     *
     * @return
     */
    public Boolean getDuplicatesAllowed() {
        return duplicatesAllowed;
    }

    /**
     * set 如果 Type 字段的值为 List，则指示 CloudFormation 是否允许重复值。true将忽略重复值，false将对重复值报错
     *
     * @param duplicatesAllowed
     */
    public void setDuplicatesAllowed(Boolean duplicatesAllowed) {
        this.duplicatesAllowed = duplicatesAllowed;
    }

    /**
     * get 如果 Type 字段的值为 List 或 Map，则指示列表或映射的类型 (如果它们包含非基元类型)
     *
     * @return
     */
    public String getItemType() {
        return itemType;
    }

    /**
     * set 如果 Type 字段的值为 List 或 Map，则指示列表或映射的类型 (如果它们包含非基元类型)
     *
     * @param itemType
     */
    public void setItemType(String itemType) {
        this.itemType = itemType;
    }

    /**
     * get 如果 Type 字段的值为 List 或 Map，则指示列表或映射的类型 (如果它们包含基元类型)
     *
     * @return
     */
    public String getPrimitiveItemType() {
        return primitiveItemType;
    }

    /**
     * set 如果 Type 字段的值为 List 或 Map，则指示列表或映射的类型 (如果它们包含基元类型)
     *
     * @param primitiveItemType
     */
    public void setPrimitiveItemType(String primitiveItemType) {
        this.primitiveItemType = primitiveItemType;
    }

    /**
     * get 基元类型
     *
     * @return
     */
    public String getPrimitiveType() {
        return primitiveType;
    }

    /**
     * set 基元类型
     *
     * @param primitiveType
     */
    public void setPrimitiveType(String primitiveType) {
        this.primitiveType = primitiveType;
    }

    /**
     * get 是否必填
     *
     * @return
     */
    public Boolean getRequired() {
        return required;
    }

    /**
     * set 是否必填
     *
     * @param required
     */
    public void setRequired(Boolean required) {
        this.required = required;
    }

    /**
     * get type
     *
     * @return
     */
    public PropertyItemType getType() {
        return type;
    }

    /**
     * set type
     *
     * @param type
     */
    public void setType(PropertyItemType type) {
        this.type = type;
    }

    /**
     * get 更新行为类别
     *
     * @return
     */
    public String getUpdateType() {
        return updateType;
    }

    /**
     * set 更新行为类别
     *
     * @param updateType
     */
    public void setUpdateType(String updateType) {
        this.updateType = updateType;
    }


    /**
     * set 注释
     *
     * @param comment
     */
    public PropertyTypeDefinition comment(String comment) {
        this.comment = comment;
        return this;
    }

    /**
     * set 说明文档地址
     *
     * @param documentation
     */
    public PropertyTypeDefinition documentation(String documentation) {
        this.documentation = documentation;
        return this;
    }

    /**
     * set 如果 Type 字段的值为 List，则指示 CloudFormation 是否允许重复值。true将忽略重复值，false将对重复值报错
     *
     * @param duplicatesAllowed
     */
    public PropertyTypeDefinition duplicatesAllowed(Boolean duplicatesAllowed) {
        this.duplicatesAllowed = duplicatesAllowed;
        return this;
    }

    /**
     * set 如果 Type 字段的值为 List 或 Map，则指示列表或映射的类型 (如果它们包含非基元类型)
     *
     * @param itemType
     */
    public PropertyTypeDefinition itemType(String itemType) {
        this.itemType = itemType;
        return this;
    }

    /**
     * set 如果 Type 字段的值为 List 或 Map，则指示列表或映射的类型 (如果它们包含基元类型)
     *
     * @param primitiveItemType
     */
    public PropertyTypeDefinition primitiveItemType(String primitiveItemType) {
        this.primitiveItemType = primitiveItemType;
        return this;
    }

    /**
     * set 基元类型
     *
     * @param primitiveType
     */
    public PropertyTypeDefinition primitiveType(String primitiveType) {
        this.primitiveType = primitiveType;
        return this;
    }

    /**
     * set 是否必填
     *
     * @param required
     */
    public PropertyTypeDefinition required(Boolean required) {
        this.required = required;
        return this;
    }

    /**
     * set type
     *
     * @param type
     */
    public PropertyTypeDefinition type(PropertyItemType type) {
        this.type = type;
        return this;
    }

    /**
     * set 更新行为类别
     *
     * @param updateType
     */
    public PropertyTypeDefinition updateType(String updateType) {
        this.updateType = updateType;
        return this;
    }


}