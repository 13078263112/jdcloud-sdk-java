/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.redis.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * configItem
 */
public class ConfigItem  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * configName目前只支持以下参数：
maxmemory-policy：内存剔除策略的最大使用内存限制
hash-max-ziplist-entries：用ziplist编码实现的哈希对象，ziplist中最多能存放entry个数的阈值
hash-max-ziplist-value：用ziplist编码实现的哈希对象，ziplist中能存放的value长度的最大值
list-max-ziplist-entries：用ziplist编码实现的列表对象，ziplist中最多能存放entry个数的阈值
list-max-ziplist-value：用ziplist编码实现的列表对象，ziplist中能存放的value长度的最大值
set-max-intset-entries：用intset编码实现的集合对象，intset中最多能存放entry个数的阈值
zset-max-ziplist-entries：用ziplist编码实现的有序集合对象，ziplist中最多能存放entry个数的阈值
zset-max-ziplist-value：用ziplist编码实现的有序集合对象，ziplist中能存放的value长度的最大值
slowlog-log-slower-than：慢查询日志超时时间，单位微秒，负数表示不开启
notify-keyspace-events：事件通知

     * Required:true
     */
    @Required
    private String configName;

    /**
     * 参数的配置值，参考值如下：
maxmemory-policy：[volatile-lru , allkeys-lru , volatile-random , allkeys-random , volatile-ttl , noeviction]
hash-max-ziplist-entries：[1-10000]
hash-max-ziplist-value：[1-10000]
list-max-ziplist-entries：[1-10000]
list-max-ziplist-value：[1-10000]
set-max-intset-entries：[1-10000]
zset-max-ziplist-entries：[1-10000]
zset-max-ziplist-value：[1-10000]
slowlog-log-slower-than：[1-10000]
notify-keyspace-events：[K , E , g , $ , l , s , h , z , x , e , A]

     * Required:true
     */
    @Required
    private String configValue;


    /**
     * get configName目前只支持以下参数：
maxmemory-policy：内存剔除策略的最大使用内存限制
hash-max-ziplist-entries：用ziplist编码实现的哈希对象，ziplist中最多能存放entry个数的阈值
hash-max-ziplist-value：用ziplist编码实现的哈希对象，ziplist中能存放的value长度的最大值
list-max-ziplist-entries：用ziplist编码实现的列表对象，ziplist中最多能存放entry个数的阈值
list-max-ziplist-value：用ziplist编码实现的列表对象，ziplist中能存放的value长度的最大值
set-max-intset-entries：用intset编码实现的集合对象，intset中最多能存放entry个数的阈值
zset-max-ziplist-entries：用ziplist编码实现的有序集合对象，ziplist中最多能存放entry个数的阈值
zset-max-ziplist-value：用ziplist编码实现的有序集合对象，ziplist中能存放的value长度的最大值
slowlog-log-slower-than：慢查询日志超时时间，单位微秒，负数表示不开启
notify-keyspace-events：事件通知

     *
     * @return
     */
    public String getConfigName() {
        return configName;
    }

    /**
     * set configName目前只支持以下参数：
maxmemory-policy：内存剔除策略的最大使用内存限制
hash-max-ziplist-entries：用ziplist编码实现的哈希对象，ziplist中最多能存放entry个数的阈值
hash-max-ziplist-value：用ziplist编码实现的哈希对象，ziplist中能存放的value长度的最大值
list-max-ziplist-entries：用ziplist编码实现的列表对象，ziplist中最多能存放entry个数的阈值
list-max-ziplist-value：用ziplist编码实现的列表对象，ziplist中能存放的value长度的最大值
set-max-intset-entries：用intset编码实现的集合对象，intset中最多能存放entry个数的阈值
zset-max-ziplist-entries：用ziplist编码实现的有序集合对象，ziplist中最多能存放entry个数的阈值
zset-max-ziplist-value：用ziplist编码实现的有序集合对象，ziplist中能存放的value长度的最大值
slowlog-log-slower-than：慢查询日志超时时间，单位微秒，负数表示不开启
notify-keyspace-events：事件通知

     *
     * @param configName
     */
    public void setConfigName(String configName) {
        this.configName = configName;
    }

    /**
     * get 参数的配置值，参考值如下：
maxmemory-policy：[volatile-lru , allkeys-lru , volatile-random , allkeys-random , volatile-ttl , noeviction]
hash-max-ziplist-entries：[1-10000]
hash-max-ziplist-value：[1-10000]
list-max-ziplist-entries：[1-10000]
list-max-ziplist-value：[1-10000]
set-max-intset-entries：[1-10000]
zset-max-ziplist-entries：[1-10000]
zset-max-ziplist-value：[1-10000]
slowlog-log-slower-than：[1-10000]
notify-keyspace-events：[K , E , g , $ , l , s , h , z , x , e , A]

     *
     * @return
     */
    public String getConfigValue() {
        return configValue;
    }

    /**
     * set 参数的配置值，参考值如下：
maxmemory-policy：[volatile-lru , allkeys-lru , volatile-random , allkeys-random , volatile-ttl , noeviction]
hash-max-ziplist-entries：[1-10000]
hash-max-ziplist-value：[1-10000]
list-max-ziplist-entries：[1-10000]
list-max-ziplist-value：[1-10000]
set-max-intset-entries：[1-10000]
zset-max-ziplist-entries：[1-10000]
zset-max-ziplist-value：[1-10000]
slowlog-log-slower-than：[1-10000]
notify-keyspace-events：[K , E , g , $ , l , s , h , z , x , e , A]

     *
     * @param configValue
     */
    public void setConfigValue(String configValue) {
        this.configValue = configValue;
    }


    /**
     * set configName目前只支持以下参数：
maxmemory-policy：内存剔除策略的最大使用内存限制
hash-max-ziplist-entries：用ziplist编码实现的哈希对象，ziplist中最多能存放entry个数的阈值
hash-max-ziplist-value：用ziplist编码实现的哈希对象，ziplist中能存放的value长度的最大值
list-max-ziplist-entries：用ziplist编码实现的列表对象，ziplist中最多能存放entry个数的阈值
list-max-ziplist-value：用ziplist编码实现的列表对象，ziplist中能存放的value长度的最大值
set-max-intset-entries：用intset编码实现的集合对象，intset中最多能存放entry个数的阈值
zset-max-ziplist-entries：用ziplist编码实现的有序集合对象，ziplist中最多能存放entry个数的阈值
zset-max-ziplist-value：用ziplist编码实现的有序集合对象，ziplist中能存放的value长度的最大值
slowlog-log-slower-than：慢查询日志超时时间，单位微秒，负数表示不开启
notify-keyspace-events：事件通知

     *
     * @param configName
     */
    public ConfigItem configName(String configName) {
        this.configName = configName;
        return this;
    }

    /**
     * set 参数的配置值，参考值如下：
maxmemory-policy：[volatile-lru , allkeys-lru , volatile-random , allkeys-random , volatile-ttl , noeviction]
hash-max-ziplist-entries：[1-10000]
hash-max-ziplist-value：[1-10000]
list-max-ziplist-entries：[1-10000]
list-max-ziplist-value：[1-10000]
set-max-intset-entries：[1-10000]
zset-max-ziplist-entries：[1-10000]
zset-max-ziplist-value：[1-10000]
slowlog-log-slower-than：[1-10000]
notify-keyspace-events：[K , E , g , $ , l , s , h , z , x , e , A]

     *
     * @param configValue
     */
    public ConfigItem configValue(String configValue) {
        this.configValue = configValue;
        return this;
    }


}