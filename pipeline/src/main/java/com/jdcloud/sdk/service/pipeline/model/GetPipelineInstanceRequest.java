/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * pipelineInstance
 * API OF Pipeline Create|Update|Read|Delete|Execute
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.pipeline.model;

import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 查询流水线执行结果及状态信息
 */
public class GetPipelineInstanceRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 流水线执行的状态，如果isSimple是true，只显示每个stage的状态, 而stage中的action状态将被忽略
     */
    private Boolean isSimple;

    /**
     * Region ID
     * Required:true
     */
    @Required
    private String regionId;

    /**
     * 流水线uuid
     * Required:true
     */
    @Required
    private String uuid;

    /**
     * 流水线uuid执行历史记录的uuid, 也可以用 latest 字符串代替uuid, 来取得最近的状态
     * Required:true
     */
    @Required
    private String instanceUuid;


    /**
     * get 流水线执行的状态，如果isSimple是true，只显示每个stage的状态, 而stage中的action状态将被忽略
     *
     * @return
     */
    public Boolean getIsSimple() {
        return isSimple;
    }

    /**
     * set 流水线执行的状态，如果isSimple是true，只显示每个stage的状态, 而stage中的action状态将被忽略
     *
     * @param isSimple
     */
    public void setIsSimple(Boolean isSimple) {
        this.isSimple = isSimple;
    }

    /**
     * get Region ID
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set Region ID
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }

    /**
     * get 流水线uuid
     *
     * @return
     */
    public String getUuid() {
        return uuid;
    }

    /**
     * set 流水线uuid
     *
     * @param uuid
     */
    public void setUuid(String uuid) {
        this.uuid = uuid;
    }

    /**
     * get 流水线uuid执行历史记录的uuid, 也可以用 latest 字符串代替uuid, 来取得最近的状态
     *
     * @return
     */
    public String getInstanceUuid() {
        return instanceUuid;
    }

    /**
     * set 流水线uuid执行历史记录的uuid, 也可以用 latest 字符串代替uuid, 来取得最近的状态
     *
     * @param instanceUuid
     */
    public void setInstanceUuid(String instanceUuid) {
        this.instanceUuid = instanceUuid;
    }


    /**
     * set 流水线执行的状态，如果isSimple是true，只显示每个stage的状态, 而stage中的action状态将被忽略
     *
     * @param isSimple
     */
    public GetPipelineInstanceRequest isSimple(Boolean isSimple) {
        this.isSimple = isSimple;
        return this;
    }

    /**
     * set Region ID
     *
     * @param regionId
     */
    public GetPipelineInstanceRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }

    /**
     * set 流水线uuid
     *
     * @param uuid
     */
    public GetPipelineInstanceRequest uuid(String uuid) {
        this.uuid = uuid;
        return this;
    }

    /**
     * set 流水线uuid执行历史记录的uuid, 也可以用 latest 字符串代替uuid, 来取得最近的状态
     *
     * @param instanceUuid
     */
    public GetPipelineInstanceRequest instanceUuid(String instanceUuid) {
        this.instanceUuid = instanceUuid;
        return this;
    }


}