/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.mps.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * 转码视频流配置
 */
public class VideoStreamSettings  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 视频编码。取值范围：h264、h265
     * Required:true
     */
    @Required
    private String codec;

    /**
     * 码率控制模式。取值范围：
  crf - 恒定码率系数模式。设置此模式时，rateFactor 生效，bitrate 会被忽略
  abr - 平均码率模式。设置此模式时，bitrate 生效，rateFactor 会被忽略
默认值为 abr

     */
    private String rcmode;

    /**
     * 码率控制因子。取值范围：[0, 51]，支持2位小数的浮点数
当 codec 为 h264 时，默认值为 23；当 codec 为 h265 时，默认值为 28

     */
    private String rateFactor;

    /**
     * 视频码率。取值范围：[128, 10000]，单位为 Kbps

     */
    private Integer bitrate;

    /**
     * 视频帧率。取值范围：[1, 60]，单位为 fps
未设置时，与源文件视频帧率保持一致

     */
    private Integer frameRate;

    /**
     * 视频输出宽度。取值范围：[128, 4096] 整数。单位为 px
未设置时，若 height 也未设置值，则 width 和 height 与原视频保持一致；若 height 设置值，则 width 按照原视频的分辨率等比缩放

     */
    private Integer width;

    /**
     * 视频输出高度。取值范围：[128, 4096] 整数。单位为 px
未设置时，若 width 也未设置值，则 width 和 height 与原视频保持一致；若 width 设置值，则 height 按照原视频的分辨率等比缩放

     */
    private Integer height;


    /**
     * get 视频编码。取值范围：h264、h265
     *
     * @return
     */
    public String getCodec() {
        return codec;
    }

    /**
     * set 视频编码。取值范围：h264、h265
     *
     * @param codec
     */
    public void setCodec(String codec) {
        this.codec = codec;
    }

    /**
     * get 码率控制模式。取值范围：
  crf - 恒定码率系数模式。设置此模式时，rateFactor 生效，bitrate 会被忽略
  abr - 平均码率模式。设置此模式时，bitrate 生效，rateFactor 会被忽略
默认值为 abr

     *
     * @return
     */
    public String getRcmode() {
        return rcmode;
    }

    /**
     * set 码率控制模式。取值范围：
  crf - 恒定码率系数模式。设置此模式时，rateFactor 生效，bitrate 会被忽略
  abr - 平均码率模式。设置此模式时，bitrate 生效，rateFactor 会被忽略
默认值为 abr

     *
     * @param rcmode
     */
    public void setRcmode(String rcmode) {
        this.rcmode = rcmode;
    }

    /**
     * get 码率控制因子。取值范围：[0, 51]，支持2位小数的浮点数
当 codec 为 h264 时，默认值为 23；当 codec 为 h265 时，默认值为 28

     *
     * @return
     */
    public String getRateFactor() {
        return rateFactor;
    }

    /**
     * set 码率控制因子。取值范围：[0, 51]，支持2位小数的浮点数
当 codec 为 h264 时，默认值为 23；当 codec 为 h265 时，默认值为 28

     *
     * @param rateFactor
     */
    public void setRateFactor(String rateFactor) {
        this.rateFactor = rateFactor;
    }

    /**
     * get 视频码率。取值范围：[128, 10000]，单位为 Kbps

     *
     * @return
     */
    public Integer getBitrate() {
        return bitrate;
    }

    /**
     * set 视频码率。取值范围：[128, 10000]，单位为 Kbps

     *
     * @param bitrate
     */
    public void setBitrate(Integer bitrate) {
        this.bitrate = bitrate;
    }

    /**
     * get 视频帧率。取值范围：[1, 60]，单位为 fps
未设置时，与源文件视频帧率保持一致

     *
     * @return
     */
    public Integer getFrameRate() {
        return frameRate;
    }

    /**
     * set 视频帧率。取值范围：[1, 60]，单位为 fps
未设置时，与源文件视频帧率保持一致

     *
     * @param frameRate
     */
    public void setFrameRate(Integer frameRate) {
        this.frameRate = frameRate;
    }

    /**
     * get 视频输出宽度。取值范围：[128, 4096] 整数。单位为 px
未设置时，若 height 也未设置值，则 width 和 height 与原视频保持一致；若 height 设置值，则 width 按照原视频的分辨率等比缩放

     *
     * @return
     */
    public Integer getWidth() {
        return width;
    }

    /**
     * set 视频输出宽度。取值范围：[128, 4096] 整数。单位为 px
未设置时，若 height 也未设置值，则 width 和 height 与原视频保持一致；若 height 设置值，则 width 按照原视频的分辨率等比缩放

     *
     * @param width
     */
    public void setWidth(Integer width) {
        this.width = width;
    }

    /**
     * get 视频输出高度。取值范围：[128, 4096] 整数。单位为 px
未设置时，若 width 也未设置值，则 width 和 height 与原视频保持一致；若 width 设置值，则 height 按照原视频的分辨率等比缩放

     *
     * @return
     */
    public Integer getHeight() {
        return height;
    }

    /**
     * set 视频输出高度。取值范围：[128, 4096] 整数。单位为 px
未设置时，若 width 也未设置值，则 width 和 height 与原视频保持一致；若 width 设置值，则 height 按照原视频的分辨率等比缩放

     *
     * @param height
     */
    public void setHeight(Integer height) {
        this.height = height;
    }


    /**
     * set 视频编码。取值范围：h264、h265
     *
     * @param codec
     */
    public VideoStreamSettings codec(String codec) {
        this.codec = codec;
        return this;
    }

    /**
     * set 码率控制模式。取值范围：
  crf - 恒定码率系数模式。设置此模式时，rateFactor 生效，bitrate 会被忽略
  abr - 平均码率模式。设置此模式时，bitrate 生效，rateFactor 会被忽略
默认值为 abr

     *
     * @param rcmode
     */
    public VideoStreamSettings rcmode(String rcmode) {
        this.rcmode = rcmode;
        return this;
    }

    /**
     * set 码率控制因子。取值范围：[0, 51]，支持2位小数的浮点数
当 codec 为 h264 时，默认值为 23；当 codec 为 h265 时，默认值为 28

     *
     * @param rateFactor
     */
    public VideoStreamSettings rateFactor(String rateFactor) {
        this.rateFactor = rateFactor;
        return this;
    }

    /**
     * set 视频码率。取值范围：[128, 10000]，单位为 Kbps

     *
     * @param bitrate
     */
    public VideoStreamSettings bitrate(Integer bitrate) {
        this.bitrate = bitrate;
        return this;
    }

    /**
     * set 视频帧率。取值范围：[1, 60]，单位为 fps
未设置时，与源文件视频帧率保持一致

     *
     * @param frameRate
     */
    public VideoStreamSettings frameRate(Integer frameRate) {
        this.frameRate = frameRate;
        return this;
    }

    /**
     * set 视频输出宽度。取值范围：[128, 4096] 整数。单位为 px
未设置时，若 height 也未设置值，则 width 和 height 与原视频保持一致；若 height 设置值，则 width 按照原视频的分辨率等比缩放

     *
     * @param width
     */
    public VideoStreamSettings width(Integer width) {
        this.width = width;
        return this;
    }

    /**
     * set 视频输出高度。取值范围：[128, 4096] 整数。单位为 px
未设置时，若 width 也未设置值，则 width 和 height 与原视频保持一致；若 width 设置值，则 height 按照原视频的分辨率等比缩放

     *
     * @param height
     */
    public VideoStreamSettings height(Integer height) {
        this.height = height;
        return this;
    }


}