/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.live.model;


/**
 * snapshotTemplate
 */
public class SnapshotTemplate  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 截图格式:
  - 取值: jpg, png
  - 不区分大小写

     */
    private String format;

    /**
     * 截图宽度:
  - 取值: [8,8192]
  - 等比: 如果只填写一个参数,则按参数比例等比缩放截图
  - 随源: 如果两个参数都不填写，则截取源流大小原图

     */
    private Integer width;

    /**
     * 截图高度:
  - 取值: [8,8192]
  - 等比: 如果只填写一个参数,则按参数比例等比缩放截图
  - 随源: 如果两个参数都不填写，则截取源流大小原图

     */
    private Integer height;

    /**
     * 截图与设定的宽高不匹配时的处理规则:
  - 1-拉伸
  - 2-留黑
  - 3-留白
  - 4-高斯模糊
  - 默认值1,2,3,4是等比例的缩放，1是按照设定宽高拉伸

     */
    private Integer fillType;

    /**
     * 截图周期:
  - MIN_INTEGER &#x3D; 5
  - MAX_INTEGER &#x3D; 3600;
  - 单位: 秒

     */
    private Integer snapshotInterval;

    /**
     * 存储模式:
  - 1-覆盖
  - 2-顺序编号存储

     */
    private Integer saveMode;

    /**
     * 存储桶
     */
    private String saveBucket;

    /**
     * 存储地址
     */
    private String saveEndpoint;

    /**
     * 截图模板自定义名称:
  - 标准质量模板：sd、hd、hsd
  - 自定义模板: 枚举类型校验，忽略大小写，自动删除空格,
              取值要求：数字、大小写字母或短横线(&quot;-&quot;),
              首尾不能有特殊字符(&quot;-&quot;)
  - &lt;b&gt;注意: 不能与标准的转码模板和已定义命名重复&lt;/b&gt;

     */
    private String template;


    /**
     * get 截图格式:
  - 取值: jpg, png
  - 不区分大小写

     *
     * @return
     */
    public String getFormat() {
        return format;
    }

    /**
     * set 截图格式:
  - 取值: jpg, png
  - 不区分大小写

     *
     * @param format
     */
    public void setFormat(String format) {
        this.format = format;
    }

    /**
     * get 截图宽度:
  - 取值: [8,8192]
  - 等比: 如果只填写一个参数,则按参数比例等比缩放截图
  - 随源: 如果两个参数都不填写，则截取源流大小原图

     *
     * @return
     */
    public Integer getWidth() {
        return width;
    }

    /**
     * set 截图宽度:
  - 取值: [8,8192]
  - 等比: 如果只填写一个参数,则按参数比例等比缩放截图
  - 随源: 如果两个参数都不填写，则截取源流大小原图

     *
     * @param width
     */
    public void setWidth(Integer width) {
        this.width = width;
    }

    /**
     * get 截图高度:
  - 取值: [8,8192]
  - 等比: 如果只填写一个参数,则按参数比例等比缩放截图
  - 随源: 如果两个参数都不填写，则截取源流大小原图

     *
     * @return
     */
    public Integer getHeight() {
        return height;
    }

    /**
     * set 截图高度:
  - 取值: [8,8192]
  - 等比: 如果只填写一个参数,则按参数比例等比缩放截图
  - 随源: 如果两个参数都不填写，则截取源流大小原图

     *
     * @param height
     */
    public void setHeight(Integer height) {
        this.height = height;
    }

    /**
     * get 截图与设定的宽高不匹配时的处理规则:
  - 1-拉伸
  - 2-留黑
  - 3-留白
  - 4-高斯模糊
  - 默认值1,2,3,4是等比例的缩放，1是按照设定宽高拉伸

     *
     * @return
     */
    public Integer getFillType() {
        return fillType;
    }

    /**
     * set 截图与设定的宽高不匹配时的处理规则:
  - 1-拉伸
  - 2-留黑
  - 3-留白
  - 4-高斯模糊
  - 默认值1,2,3,4是等比例的缩放，1是按照设定宽高拉伸

     *
     * @param fillType
     */
    public void setFillType(Integer fillType) {
        this.fillType = fillType;
    }

    /**
     * get 截图周期:
  - MIN_INTEGER &#x3D; 5
  - MAX_INTEGER &#x3D; 3600;
  - 单位: 秒

     *
     * @return
     */
    public Integer getSnapshotInterval() {
        return snapshotInterval;
    }

    /**
     * set 截图周期:
  - MIN_INTEGER &#x3D; 5
  - MAX_INTEGER &#x3D; 3600;
  - 单位: 秒

     *
     * @param snapshotInterval
     */
    public void setSnapshotInterval(Integer snapshotInterval) {
        this.snapshotInterval = snapshotInterval;
    }

    /**
     * get 存储模式:
  - 1-覆盖
  - 2-顺序编号存储

     *
     * @return
     */
    public Integer getSaveMode() {
        return saveMode;
    }

    /**
     * set 存储模式:
  - 1-覆盖
  - 2-顺序编号存储

     *
     * @param saveMode
     */
    public void setSaveMode(Integer saveMode) {
        this.saveMode = saveMode;
    }

    /**
     * get 存储桶
     *
     * @return
     */
    public String getSaveBucket() {
        return saveBucket;
    }

    /**
     * set 存储桶
     *
     * @param saveBucket
     */
    public void setSaveBucket(String saveBucket) {
        this.saveBucket = saveBucket;
    }

    /**
     * get 存储地址
     *
     * @return
     */
    public String getSaveEndpoint() {
        return saveEndpoint;
    }

    /**
     * set 存储地址
     *
     * @param saveEndpoint
     */
    public void setSaveEndpoint(String saveEndpoint) {
        this.saveEndpoint = saveEndpoint;
    }

    /**
     * get 截图模板自定义名称:
  - 标准质量模板：sd、hd、hsd
  - 自定义模板: 枚举类型校验，忽略大小写，自动删除空格,
              取值要求：数字、大小写字母或短横线(&quot;-&quot;),
              首尾不能有特殊字符(&quot;-&quot;)
  - &lt;b&gt;注意: 不能与标准的转码模板和已定义命名重复&lt;/b&gt;

     *
     * @return
     */
    public String getTemplate() {
        return template;
    }

    /**
     * set 截图模板自定义名称:
  - 标准质量模板：sd、hd、hsd
  - 自定义模板: 枚举类型校验，忽略大小写，自动删除空格,
              取值要求：数字、大小写字母或短横线(&quot;-&quot;),
              首尾不能有特殊字符(&quot;-&quot;)
  - &lt;b&gt;注意: 不能与标准的转码模板和已定义命名重复&lt;/b&gt;

     *
     * @param template
     */
    public void setTemplate(String template) {
        this.template = template;
    }


    /**
     * set 截图格式:
  - 取值: jpg, png
  - 不区分大小写

     *
     * @param format
     */
    public SnapshotTemplate format(String format) {
        this.format = format;
        return this;
    }

    /**
     * set 截图宽度:
  - 取值: [8,8192]
  - 等比: 如果只填写一个参数,则按参数比例等比缩放截图
  - 随源: 如果两个参数都不填写，则截取源流大小原图

     *
     * @param width
     */
    public SnapshotTemplate width(Integer width) {
        this.width = width;
        return this;
    }

    /**
     * set 截图高度:
  - 取值: [8,8192]
  - 等比: 如果只填写一个参数,则按参数比例等比缩放截图
  - 随源: 如果两个参数都不填写，则截取源流大小原图

     *
     * @param height
     */
    public SnapshotTemplate height(Integer height) {
        this.height = height;
        return this;
    }

    /**
     * set 截图与设定的宽高不匹配时的处理规则:
  - 1-拉伸
  - 2-留黑
  - 3-留白
  - 4-高斯模糊
  - 默认值1,2,3,4是等比例的缩放，1是按照设定宽高拉伸

     *
     * @param fillType
     */
    public SnapshotTemplate fillType(Integer fillType) {
        this.fillType = fillType;
        return this;
    }

    /**
     * set 截图周期:
  - MIN_INTEGER &#x3D; 5
  - MAX_INTEGER &#x3D; 3600;
  - 单位: 秒

     *
     * @param snapshotInterval
     */
    public SnapshotTemplate snapshotInterval(Integer snapshotInterval) {
        this.snapshotInterval = snapshotInterval;
        return this;
    }

    /**
     * set 存储模式:
  - 1-覆盖
  - 2-顺序编号存储

     *
     * @param saveMode
     */
    public SnapshotTemplate saveMode(Integer saveMode) {
        this.saveMode = saveMode;
        return this;
    }

    /**
     * set 存储桶
     *
     * @param saveBucket
     */
    public SnapshotTemplate saveBucket(String saveBucket) {
        this.saveBucket = saveBucket;
        return this;
    }

    /**
     * set 存储地址
     *
     * @param saveEndpoint
     */
    public SnapshotTemplate saveEndpoint(String saveEndpoint) {
        this.saveEndpoint = saveEndpoint;
        return this;
    }

    /**
     * set 截图模板自定义名称:
  - 标准质量模板：sd、hd、hsd
  - 自定义模板: 枚举类型校验，忽略大小写，自动删除空格,
              取值要求：数字、大小写字母或短横线(&quot;-&quot;),
              首尾不能有特殊字符(&quot;-&quot;)
  - &lt;b&gt;注意: 不能与标准的转码模板和已定义命名重复&lt;/b&gt;

     *
     * @param template
     */
    public SnapshotTemplate template(String template) {
        this.template = template;
        return this;
    }


}