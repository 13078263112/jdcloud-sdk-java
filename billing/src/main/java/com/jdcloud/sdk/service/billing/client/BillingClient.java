/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * JDCLOUD BILLING API
 * 计费系统API接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.billing.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.billing.model.QueryConsumptionOverViewRequest;
import com.jdcloud.sdk.service.billing.model.QueryConsumptionOverViewResponse;
import com.jdcloud.sdk.service.billing.client.QueryConsumptionOverViewExecutor;
import com.jdcloud.sdk.service.billing.model.QueryResourceBillsRequest;
import com.jdcloud.sdk.service.billing.model.QueryResourceBillsResponse;
import com.jdcloud.sdk.service.billing.client.QueryResourceBillsExecutor;
import com.jdcloud.sdk.service.billing.model.GetExpiringOrdersRequest;
import com.jdcloud.sdk.service.billing.model.GetExpiringOrdersResponse;
import com.jdcloud.sdk.service.billing.client.GetExpiringOrdersExecutor;
import com.jdcloud.sdk.service.billing.model.QueryConsumeRecordsRequest;
import com.jdcloud.sdk.service.billing.model.QueryConsumeRecordsResponse;
import com.jdcloud.sdk.service.billing.client.QueryConsumeRecordsExecutor;
import com.jdcloud.sdk.service.billing.model.CalculateCompensateFeeAndSendCouponsRequest;
import com.jdcloud.sdk.service.billing.model.CalculateCompensateFeeAndSendCouponsResponse;
import com.jdcloud.sdk.service.billing.client.CalculateCompensateFeeAndSendCouponsExecutor;
import com.jdcloud.sdk.service.billing.model.QueryConsumeBillsRequest;
import com.jdcloud.sdk.service.billing.model.QueryConsumeBillsResponse;
import com.jdcloud.sdk.service.billing.client.QueryConsumeBillsExecutor;
import com.jdcloud.sdk.service.billing.model.QueryBillStatisticsInfoRequest;
import com.jdcloud.sdk.service.billing.model.QueryBillStatisticsInfoResponse;
import com.jdcloud.sdk.service.billing.client.QueryBillStatisticsInfoExecutor;
import com.jdcloud.sdk.service.billing.model.AdminQueryBillStatisticsInfoRequest;
import com.jdcloud.sdk.service.billing.model.AdminQueryBillStatisticsInfoResponse;
import com.jdcloud.sdk.service.billing.client.AdminQueryBillStatisticsInfoExecutor;
import com.jdcloud.sdk.service.billing.model.CalculateTotalPriceRequest;
import com.jdcloud.sdk.service.billing.model.CalculateTotalPriceResponse;
import com.jdcloud.sdk.service.billing.client.CalculateTotalPriceExecutor;
import com.jdcloud.sdk.service.billing.model.GetBillDetailRequest;
import com.jdcloud.sdk.service.billing.model.GetBillDetailResponse;
import com.jdcloud.sdk.service.billing.client.GetBillDetailExecutor;
import com.jdcloud.sdk.service.billing.model.QueryPageByConditionRequest;
import com.jdcloud.sdk.service.billing.model.QueryPageByConditionResponse;
import com.jdcloud.sdk.service.billing.client.QueryPageByConditionExecutor;
import com.jdcloud.sdk.service.billing.model.IsArrearRequest;
import com.jdcloud.sdk.service.billing.model.IsArrearResponse;
import com.jdcloud.sdk.service.billing.client.IsArrearExecutor;
import com.jdcloud.sdk.service.billing.model.GetResourceNameRequest;
import com.jdcloud.sdk.service.billing.model.GetResourceNameResponse;
import com.jdcloud.sdk.service.billing.client.GetResourceNameExecutor;
import com.jdcloud.sdk.service.billing.model.SendResourceOrderStatusMessageRequest;
import com.jdcloud.sdk.service.billing.model.SendResourceOrderStatusMessageResponse;
import com.jdcloud.sdk.service.billing.client.SendResourceOrderStatusMessageExecutor;

/**
 * billingClient
 */
public class BillingClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.0.6";
    public final static String DefaultEndpoint = "billing.jdcloud-api.com";
    public final static String ServiceName = "billing";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private BillingClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 查询消费总览
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryConsumptionOverViewResponse queryConsumptionOverView(QueryConsumptionOverViewRequest request) throws JdcloudSdkException {
        return new QueryConsumptionOverViewExecutor().client(this).execute(request);
    }

    /**
     * 查询资源账单列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryResourceBillsResponse queryResourceBills(QueryResourceBillsRequest request) throws JdcloudSdkException {
        return new QueryResourceBillsExecutor().client(this).execute(request);
    }

    /**
     * 查询资源单列表接口，不含已删除资源
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetExpiringOrdersResponse getExpiringOrders(GetExpiringOrdersRequest request) throws JdcloudSdkException {
        return new GetExpiringOrdersExecutor().client(this).execute(request);
    }

    /**
     * 查询资源账单详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryConsumeRecordsResponse queryConsumeRecords(QueryConsumeRecordsRequest request) throws JdcloudSdkException {
        return new QueryConsumeRecordsExecutor().client(this).execute(request);
    }

    /**
     * 计算赔偿金额并发放代金券
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CalculateCompensateFeeAndSendCouponsResponse calculateCompensateFeeAndSendCoupons(CalculateCompensateFeeAndSendCouponsRequest request) throws JdcloudSdkException {
        return new CalculateCompensateFeeAndSendCouponsExecutor().client(this).execute(request);
    }

    /**
     * 查询消费记录列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryConsumeBillsResponse queryConsumeBills(QueryConsumeBillsRequest request) throws JdcloudSdkException {
        return new QueryConsumeBillsExecutor().client(this).execute(request);
    }

    /**
     * 查询资源账单，消费记录中的费用信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryBillStatisticsInfoResponse queryBillStatisticsInfo(QueryBillStatisticsInfoRequest request) throws JdcloudSdkException {
        return new QueryBillStatisticsInfoExecutor().client(this).execute(request);
    }

    /**
     * 查询消费统计信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AdminQueryBillStatisticsInfoResponse adminQueryBillStatisticsInfo(AdminQueryBillStatisticsInfoRequest request) throws JdcloudSdkException {
        return new AdminQueryBillStatisticsInfoExecutor().client(this).execute(request);
    }

    /**
     * 查询计费价格信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CalculateTotalPriceResponse calculateTotalPrice(CalculateTotalPriceRequest request) throws JdcloudSdkException {
        return new CalculateTotalPriceExecutor().client(this).execute(request);
    }

    /**
     * 查询消费记录详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetBillDetailResponse getBillDetail(GetBillDetailRequest request) throws JdcloudSdkException {
        return new GetBillDetailExecutor().client(this).execute(request);
    }

    /**
     * 查询资源单列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryPageByConditionResponse queryPageByCondition(QueryPageByConditionRequest request) throws JdcloudSdkException {
        return new QueryPageByConditionExecutor().client(this).execute(request);
    }

    /**
     * 查询用户是否欠费
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public IsArrearResponse isArrear(IsArrearRequest request) throws JdcloudSdkException {
        return new IsArrearExecutor().client(this).execute(request);
    }

    /**
     * 查询用于在账单展示的资源名称信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetResourceNameResponse getResourceName(GetResourceNameRequest request) throws JdcloudSdkException {
        return new GetResourceNameExecutor().client(this).execute(request);
    }

    /**
     * 删除资源
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SendResourceOrderStatusMessageResponse sendResourceOrderStatusMessage(SendResourceOrderStatusMessageRequest request) throws JdcloudSdkException {
        return new SendResourceOrderStatusMessageExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public BillingClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private BillingClient billingClient;

        public DefaultBuilder() {
            billingClient = new BillingClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            billingClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            billingClient.httpRequestConfig = config;
            return this;
        }

        public BillingClient build() throws JdcloudSdkException {

            if (billingClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                billingClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (billingClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("BillingClient build error: jdcloud credentials provider not set");
                }
            }
            if (billingClient.httpRequestConfig == null) {
                billingClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (billingClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("BillingClient build error: http request config not set");
                }
            }
            return billingClient;
        }

        public Builder environment(Environment environment) {
            billingClient.environment = environment;
            return this;
        }
    }
}
