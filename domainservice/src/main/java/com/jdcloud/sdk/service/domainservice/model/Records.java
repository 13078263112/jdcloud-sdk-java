/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.domainservice.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * records
 */
public class Records  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 解析记录值
     * Required:true
     */
    @Required
    private String record;

    /**
     * 权重，A/AAAA权重范围：0-100、CNAME/JNAME权重范围：1-100。
     */
    private Integer weight;

    /**
     * 这条解析记录的TTL
     */
    private Integer ttl;

    /**
     * 优先级，只存在于MX类型的解析记录
     */
    private Integer prior;

    /**
     * 端口，只存在于SRV类型解析记录
     */
    private Integer port;


    /**
     * get 解析记录值
     *
     * @return
     */
    public String getRecord() {
        return record;
    }

    /**
     * set 解析记录值
     *
     * @param record
     */
    public void setRecord(String record) {
        this.record = record;
    }

    /**
     * get 权重，A/AAAA权重范围：0-100、CNAME/JNAME权重范围：1-100。
     *
     * @return
     */
    public Integer getWeight() {
        return weight;
    }

    /**
     * set 权重，A/AAAA权重范围：0-100、CNAME/JNAME权重范围：1-100。
     *
     * @param weight
     */
    public void setWeight(Integer weight) {
        this.weight = weight;
    }

    /**
     * get 这条解析记录的TTL
     *
     * @return
     */
    public Integer getTtl() {
        return ttl;
    }

    /**
     * set 这条解析记录的TTL
     *
     * @param ttl
     */
    public void setTtl(Integer ttl) {
        this.ttl = ttl;
    }

    /**
     * get 优先级，只存在于MX类型的解析记录
     *
     * @return
     */
    public Integer getPrior() {
        return prior;
    }

    /**
     * set 优先级，只存在于MX类型的解析记录
     *
     * @param prior
     */
    public void setPrior(Integer prior) {
        this.prior = prior;
    }

    /**
     * get 端口，只存在于SRV类型解析记录
     *
     * @return
     */
    public Integer getPort() {
        return port;
    }

    /**
     * set 端口，只存在于SRV类型解析记录
     *
     * @param port
     */
    public void setPort(Integer port) {
        this.port = port;
    }


    /**
     * set 解析记录值
     *
     * @param record
     */
    public Records record(String record) {
        this.record = record;
        return this;
    }

    /**
     * set 权重，A/AAAA权重范围：0-100、CNAME/JNAME权重范围：1-100。
     *
     * @param weight
     */
    public Records weight(Integer weight) {
        this.weight = weight;
        return this;
    }

    /**
     * set 这条解析记录的TTL
     *
     * @param ttl
     */
    public Records ttl(Integer ttl) {
        this.ttl = ttl;
        return this;
    }

    /**
     * set 优先级，只存在于MX类型的解析记录
     *
     * @param prior
     */
    public Records prior(Integer prior) {
        this.prior = prior;
        return this;
    }

    /**
     * set 端口，只存在于SRV类型解析记录
     *
     * @param port
     */
    public Records port(Integer port) {
        this.port = port;
        return this;
    }


}