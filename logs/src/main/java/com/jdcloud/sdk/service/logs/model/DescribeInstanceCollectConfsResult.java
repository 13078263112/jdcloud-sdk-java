/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * ConfServer APIs
 * agent conf server
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.logs.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.logs.model.CollectConf;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查询当前实例的采集配置列表：此接口会生成agent心跳监控数据，用以表征agent的可用性。请求中若添加了X-Jdcloud-Logs-md5的header，将按照md5的方式处理返回值。
 */
public class DescribeInstanceCollectConfsResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * confs
     */
    private List<CollectConf> confs;


    /**
     * get confs
     *
     * @return
     */
    public List<CollectConf> getConfs() {
        return confs;
    }

    /**
     * set confs
     *
     * @param confs
     */
    public void setConfs(List<CollectConf> confs) {
        this.confs = confs;
    }


    /**
     * set confs
     *
     * @param confs
     */
    public DescribeInstanceCollectConfsResult confs(List<CollectConf> confs) {
        this.confs = confs;
        return this;
    }


    /**
     * add item to confs
     *
     * @param conf
     */
    public void addConf(CollectConf conf) {
        if (this.confs == null) {
            this.confs = new ArrayList<>();
        }
        this.confs.add(conf);
    }

}