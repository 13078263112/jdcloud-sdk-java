/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * LogSearch APIs
 * 日志搜索接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.logs.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 搜索日志上下文
 */
public class SearchLogContextRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 查询anchor,基于该值偏移进行上下文检索
     * Required:true
     */
    @Required
    private List<Object> anchor;

    /**
     * 搜索方向,默认both,可取值:up,down,both
     */
    private String direction;

    /**
     * 日志记录ID
     * Required:true
     */
    @Required
    private String id;

    /**
     * 查看上下文行数大小，最大支持200
     * Required:true
     */
    @Required
    private Long lineSize;

    /**
     * 查询日志时返回的时间戳
     * Required:true
     */
    @Required
    private Long time;

    /**
     * 地域 Id
     * Required:true
     */
    @Required
    private String regionId;

    /**
     * 日志集 UID
     * Required:true
     */
    @Required
    private String logsetUID;

    /**
     * 日志主题 UID
     * Required:true
     */
    @Required
    private String logtopicUID;


    /**
     * get 查询anchor,基于该值偏移进行上下文检索
     *
     * @return
     */
    public List<Object> getAnchor() {
        return anchor;
    }

    /**
     * set 查询anchor,基于该值偏移进行上下文检索
     *
     * @param anchor
     */
    public void setAnchor(List<Object> anchor) {
        this.anchor = anchor;
    }

    /**
     * get 搜索方向,默认both,可取值:up,down,both
     *
     * @return
     */
    public String getDirection() {
        return direction;
    }

    /**
     * set 搜索方向,默认both,可取值:up,down,both
     *
     * @param direction
     */
    public void setDirection(String direction) {
        this.direction = direction;
    }

    /**
     * get 日志记录ID
     *
     * @return
     */
    public String getId() {
        return id;
    }

    /**
     * set 日志记录ID
     *
     * @param id
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * get 查看上下文行数大小，最大支持200
     *
     * @return
     */
    public Long getLineSize() {
        return lineSize;
    }

    /**
     * set 查看上下文行数大小，最大支持200
     *
     * @param lineSize
     */
    public void setLineSize(Long lineSize) {
        this.lineSize = lineSize;
    }

    /**
     * get 查询日志时返回的时间戳
     *
     * @return
     */
    public Long getTime() {
        return time;
    }

    /**
     * set 查询日志时返回的时间戳
     *
     * @param time
     */
    public void setTime(Long time) {
        this.time = time;
    }

    /**
     * get 地域 Id
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域 Id
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }

    /**
     * get 日志集 UID
     *
     * @return
     */
    public String getLogsetUID() {
        return logsetUID;
    }

    /**
     * set 日志集 UID
     *
     * @param logsetUID
     */
    public void setLogsetUID(String logsetUID) {
        this.logsetUID = logsetUID;
    }

    /**
     * get 日志主题 UID
     *
     * @return
     */
    public String getLogtopicUID() {
        return logtopicUID;
    }

    /**
     * set 日志主题 UID
     *
     * @param logtopicUID
     */
    public void setLogtopicUID(String logtopicUID) {
        this.logtopicUID = logtopicUID;
    }


    /**
     * set 查询anchor,基于该值偏移进行上下文检索
     *
     * @param anchor
     */
    public SearchLogContextRequest anchor(List<Object> anchor) {
        this.anchor = anchor;
        return this;
    }

    /**
     * set 搜索方向,默认both,可取值:up,down,both
     *
     * @param direction
     */
    public SearchLogContextRequest direction(String direction) {
        this.direction = direction;
        return this;
    }

    /**
     * set 日志记录ID
     *
     * @param id
     */
    public SearchLogContextRequest id(String id) {
        this.id = id;
        return this;
    }

    /**
     * set 查看上下文行数大小，最大支持200
     *
     * @param lineSize
     */
    public SearchLogContextRequest lineSize(Long lineSize) {
        this.lineSize = lineSize;
        return this;
    }

    /**
     * set 查询日志时返回的时间戳
     *
     * @param time
     */
    public SearchLogContextRequest time(Long time) {
        this.time = time;
        return this;
    }

    /**
     * set 地域 Id
     *
     * @param regionId
     */
    public SearchLogContextRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }

    /**
     * set 日志集 UID
     *
     * @param logsetUID
     */
    public SearchLogContextRequest logsetUID(String logsetUID) {
        this.logsetUID = logsetUID;
        return this;
    }

    /**
     * set 日志主题 UID
     *
     * @param logtopicUID
     */
    public SearchLogContextRequest logtopicUID(String logtopicUID) {
        this.logtopicUID = logtopicUID;
        return this;
    }


    /**
     * add item to 查询anchor,基于该值偏移进行上下文检索
     *
     * @param anchor
     */
    public void addAnchor(Object anchor) {
        if (this.anchor == null) {
            this.anchor = new ArrayList<>();
        }
        this.anchor.add(anchor);
    }

}