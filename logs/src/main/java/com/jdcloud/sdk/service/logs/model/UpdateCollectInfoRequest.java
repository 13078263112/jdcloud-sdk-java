/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * CollectInfo APIs
 * 采集配置的管理控制接口，采集实例的管理控制接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.logs.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.logs.model.Resource;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 更新采集配置。若传入的实例列表不为空，将覆盖之前的所有实例，而非新增。
 */
public class UpdateCollectInfoRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 采集状态，0-禁用，1-启用
     * Required:true
     */
    @Required
    private Boolean enabled;

    /**
     * 采集实例类型, 只能是 all/part  当选择all时，传入的实例列表无效
     * Required:true
     */
    @Required
    private String resourceType;

    /**
     * 采集实例列表（存在上限限制20）
     */
    private List<Resource> resources;

    /**
     * 日志路径。当appcode为custom时为必填。目前仅支持对 Linux 云主机上的日志进行采集，路径支持通配符“*”和“？”，文件路径应符合 Linux 的文件路径规则
     */
    private String logPath;

    /**
     * 日志文件名。当appcode为custom时为必填。日志文件名支持正则表达式。
     */
    private String logFile;

    /**
     * 过滤器。设置过滤器后可根据用户设定的关键词采集部分日志，如仅采集 Error 的日志。目前最大允许5个。
     */
    private List<String> logFilters;

    /**
     * 过滤器是否启用。当appcode为custom时必填
     */
    private Boolean filterEnabled;

    /**
     * 地域 Id
     * Required:true
     */
    @Required
    private String regionId;

    /**
     * 采集配置 UID
     * Required:true
     */
    @Required
    private String collectInfoUID;


    /**
     * get 采集状态，0-禁用，1-启用
     *
     * @return
     */
    public Boolean getEnabled() {
        return enabled;
    }

    /**
     * set 采集状态，0-禁用，1-启用
     *
     * @param enabled
     */
    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    /**
     * get 采集实例类型, 只能是 all/part  当选择all时，传入的实例列表无效
     *
     * @return
     */
    public String getResourceType() {
        return resourceType;
    }

    /**
     * set 采集实例类型, 只能是 all/part  当选择all时，传入的实例列表无效
     *
     * @param resourceType
     */
    public void setResourceType(String resourceType) {
        this.resourceType = resourceType;
    }

    /**
     * get 采集实例列表（存在上限限制20）
     *
     * @return
     */
    public List<Resource> getResources() {
        return resources;
    }

    /**
     * set 采集实例列表（存在上限限制20）
     *
     * @param resources
     */
    public void setResources(List<Resource> resources) {
        this.resources = resources;
    }

    /**
     * get 日志路径。当appcode为custom时为必填。目前仅支持对 Linux 云主机上的日志进行采集，路径支持通配符“*”和“？”，文件路径应符合 Linux 的文件路径规则
     *
     * @return
     */
    public String getLogPath() {
        return logPath;
    }

    /**
     * set 日志路径。当appcode为custom时为必填。目前仅支持对 Linux 云主机上的日志进行采集，路径支持通配符“*”和“？”，文件路径应符合 Linux 的文件路径规则
     *
     * @param logPath
     */
    public void setLogPath(String logPath) {
        this.logPath = logPath;
    }

    /**
     * get 日志文件名。当appcode为custom时为必填。日志文件名支持正则表达式。
     *
     * @return
     */
    public String getLogFile() {
        return logFile;
    }

    /**
     * set 日志文件名。当appcode为custom时为必填。日志文件名支持正则表达式。
     *
     * @param logFile
     */
    public void setLogFile(String logFile) {
        this.logFile = logFile;
    }

    /**
     * get 过滤器。设置过滤器后可根据用户设定的关键词采集部分日志，如仅采集 Error 的日志。目前最大允许5个。
     *
     * @return
     */
    public List<String> getLogFilters() {
        return logFilters;
    }

    /**
     * set 过滤器。设置过滤器后可根据用户设定的关键词采集部分日志，如仅采集 Error 的日志。目前最大允许5个。
     *
     * @param logFilters
     */
    public void setLogFilters(List<String> logFilters) {
        this.logFilters = logFilters;
    }

    /**
     * get 过滤器是否启用。当appcode为custom时必填
     *
     * @return
     */
    public Boolean getFilterEnabled() {
        return filterEnabled;
    }

    /**
     * set 过滤器是否启用。当appcode为custom时必填
     *
     * @param filterEnabled
     */
    public void setFilterEnabled(Boolean filterEnabled) {
        this.filterEnabled = filterEnabled;
    }

    /**
     * get 地域 Id
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域 Id
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }

    /**
     * get 采集配置 UID
     *
     * @return
     */
    public String getCollectInfoUID() {
        return collectInfoUID;
    }

    /**
     * set 采集配置 UID
     *
     * @param collectInfoUID
     */
    public void setCollectInfoUID(String collectInfoUID) {
        this.collectInfoUID = collectInfoUID;
    }


    /**
     * set 采集状态，0-禁用，1-启用
     *
     * @param enabled
     */
    public UpdateCollectInfoRequest enabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * set 采集实例类型, 只能是 all/part  当选择all时，传入的实例列表无效
     *
     * @param resourceType
     */
    public UpdateCollectInfoRequest resourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }

    /**
     * set 采集实例列表（存在上限限制20）
     *
     * @param resources
     */
    public UpdateCollectInfoRequest resources(List<Resource> resources) {
        this.resources = resources;
        return this;
    }

    /**
     * set 日志路径。当appcode为custom时为必填。目前仅支持对 Linux 云主机上的日志进行采集，路径支持通配符“*”和“？”，文件路径应符合 Linux 的文件路径规则
     *
     * @param logPath
     */
    public UpdateCollectInfoRequest logPath(String logPath) {
        this.logPath = logPath;
        return this;
    }

    /**
     * set 日志文件名。当appcode为custom时为必填。日志文件名支持正则表达式。
     *
     * @param logFile
     */
    public UpdateCollectInfoRequest logFile(String logFile) {
        this.logFile = logFile;
        return this;
    }

    /**
     * set 过滤器。设置过滤器后可根据用户设定的关键词采集部分日志，如仅采集 Error 的日志。目前最大允许5个。
     *
     * @param logFilters
     */
    public UpdateCollectInfoRequest logFilters(List<String> logFilters) {
        this.logFilters = logFilters;
        return this;
    }

    /**
     * set 过滤器是否启用。当appcode为custom时必填
     *
     * @param filterEnabled
     */
    public UpdateCollectInfoRequest filterEnabled(Boolean filterEnabled) {
        this.filterEnabled = filterEnabled;
        return this;
    }

    /**
     * set 地域 Id
     *
     * @param regionId
     */
    public UpdateCollectInfoRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }

    /**
     * set 采集配置 UID
     *
     * @param collectInfoUID
     */
    public UpdateCollectInfoRequest collectInfoUID(String collectInfoUID) {
        this.collectInfoUID = collectInfoUID;
        return this;
    }


    /**
     * add item to 采集实例列表（存在上限限制20）
     *
     * @param resource
     */
    public void addResource(Resource resource) {
        if (this.resources == null) {
            this.resources = new ArrayList<>();
        }
        this.resources.add(resource);
    }

    /**
     * add item to 过滤器。设置过滤器后可根据用户设定的关键词采集部分日志，如仅采集 Error 的日志。目前最大允许5个。
     *
     * @param logFilter
     */
    public void addLogFilter(String logFilter) {
        if (this.logFilters == null) {
            this.logFilters = new ArrayList<>();
        }
        this.logFilters.add(logFilter);
    }

}