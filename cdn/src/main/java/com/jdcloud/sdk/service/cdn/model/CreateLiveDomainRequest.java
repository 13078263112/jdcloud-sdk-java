/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 直播域名操作类接口
 * Openapi For JCLOUD cdn
 *
 * OpenAPI spec version: v1
 * Contact: pid-cdn@jd.com
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.cdn.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 创建直播域名V2
 */
public class CreateLiveDomainRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 播放域名（仅siteType&#x3D;1且publishDomain不为空时可为空）
     */
    private String playDomain;

    /**
     * 推流域名（siteType&#x3D;push时playDomain与publishDomain不能同时传入）
     */
    private String publishDomain;

    /**
     * 回源类型只能是[ips,domain]中的一种
     */
    private String sourceType;

    /**
     * backHttpType
     */
    private String backHttpType;

    /**
     * 默认回源host
     */
    private String defaultSourceHost;

    /**
     * 站点类型1:push(推流模式),2:pull(拉流模式),3:mix(混合模式)
     */
    private String siteType;

    /**
     * 回源类型，支持rtmp, http-flv, https-flv, http-hls,https-hls，默认rtmp
     */
    private String backSourceType;

    /**
     * 播放协议，默认为rtmp,hdl,hls全选
     */
    private List<String> playProtocol;

    /**
     * 转推地址
     */
    private String forwardCustomVhost;

    /**
     * 回源IP信息
     */
    private List<IpSourceInfo> ipSource;

    /**
     * 回源域名信息
     */
    private List<DomainSourceInfo> domainSource;

    /**
     * 默认为H.264
     */
    private String videoType;

    /**
     * 默认为AAC
     */
    private String audioType;


    /**
     * get 播放域名（仅siteType&#x3D;1且publishDomain不为空时可为空）
     *
     * @return
     */
    public String getPlayDomain() {
        return playDomain;
    }

    /**
     * set 播放域名（仅siteType&#x3D;1且publishDomain不为空时可为空）
     *
     * @param playDomain
     */
    public void setPlayDomain(String playDomain) {
        this.playDomain = playDomain;
    }

    /**
     * get 推流域名（siteType&#x3D;push时playDomain与publishDomain不能同时传入）
     *
     * @return
     */
    public String getPublishDomain() {
        return publishDomain;
    }

    /**
     * set 推流域名（siteType&#x3D;push时playDomain与publishDomain不能同时传入）
     *
     * @param publishDomain
     */
    public void setPublishDomain(String publishDomain) {
        this.publishDomain = publishDomain;
    }

    /**
     * get 回源类型只能是[ips,domain]中的一种
     *
     * @return
     */
    public String getSourceType() {
        return sourceType;
    }

    /**
     * set 回源类型只能是[ips,domain]中的一种
     *
     * @param sourceType
     */
    public void setSourceType(String sourceType) {
        this.sourceType = sourceType;
    }

    /**
     * get backHttpType
     *
     * @return
     */
    public String getBackHttpType() {
        return backHttpType;
    }

    /**
     * set backHttpType
     *
     * @param backHttpType
     */
    public void setBackHttpType(String backHttpType) {
        this.backHttpType = backHttpType;
    }

    /**
     * get 默认回源host
     *
     * @return
     */
    public String getDefaultSourceHost() {
        return defaultSourceHost;
    }

    /**
     * set 默认回源host
     *
     * @param defaultSourceHost
     */
    public void setDefaultSourceHost(String defaultSourceHost) {
        this.defaultSourceHost = defaultSourceHost;
    }

    /**
     * get 站点类型1:push(推流模式),2:pull(拉流模式),3:mix(混合模式)
     *
     * @return
     */
    public String getSiteType() {
        return siteType;
    }

    /**
     * set 站点类型1:push(推流模式),2:pull(拉流模式),3:mix(混合模式)
     *
     * @param siteType
     */
    public void setSiteType(String siteType) {
        this.siteType = siteType;
    }

    /**
     * get 回源类型，支持rtmp, http-flv, https-flv, http-hls,https-hls，默认rtmp
     *
     * @return
     */
    public String getBackSourceType() {
        return backSourceType;
    }

    /**
     * set 回源类型，支持rtmp, http-flv, https-flv, http-hls,https-hls，默认rtmp
     *
     * @param backSourceType
     */
    public void setBackSourceType(String backSourceType) {
        this.backSourceType = backSourceType;
    }

    /**
     * get 播放协议，默认为rtmp,hdl,hls全选
     *
     * @return
     */
    public List<String> getPlayProtocol() {
        return playProtocol;
    }

    /**
     * set 播放协议，默认为rtmp,hdl,hls全选
     *
     * @param playProtocol
     */
    public void setPlayProtocol(List<String> playProtocol) {
        this.playProtocol = playProtocol;
    }

    /**
     * get 转推地址
     *
     * @return
     */
    public String getForwardCustomVhost() {
        return forwardCustomVhost;
    }

    /**
     * set 转推地址
     *
     * @param forwardCustomVhost
     */
    public void setForwardCustomVhost(String forwardCustomVhost) {
        this.forwardCustomVhost = forwardCustomVhost;
    }

    /**
     * get 回源IP信息
     *
     * @return
     */
    public List<IpSourceInfo> getIpSource() {
        return ipSource;
    }

    /**
     * set 回源IP信息
     *
     * @param ipSource
     */
    public void setIpSource(List<IpSourceInfo> ipSource) {
        this.ipSource = ipSource;
    }

    /**
     * get 回源域名信息
     *
     * @return
     */
    public List<DomainSourceInfo> getDomainSource() {
        return domainSource;
    }

    /**
     * set 回源域名信息
     *
     * @param domainSource
     */
    public void setDomainSource(List<DomainSourceInfo> domainSource) {
        this.domainSource = domainSource;
    }

    /**
     * get 默认为H.264
     *
     * @return
     */
    public String getVideoType() {
        return videoType;
    }

    /**
     * set 默认为H.264
     *
     * @param videoType
     */
    public void setVideoType(String videoType) {
        this.videoType = videoType;
    }

    /**
     * get 默认为AAC
     *
     * @return
     */
    public String getAudioType() {
        return audioType;
    }

    /**
     * set 默认为AAC
     *
     * @param audioType
     */
    public void setAudioType(String audioType) {
        this.audioType = audioType;
    }


    /**
     * set 播放域名（仅siteType&#x3D;1且publishDomain不为空时可为空）
     *
     * @param playDomain
     */
    public CreateLiveDomainRequest playDomain(String playDomain) {
        this.playDomain = playDomain;
        return this;
    }

    /**
     * set 推流域名（siteType&#x3D;push时playDomain与publishDomain不能同时传入）
     *
     * @param publishDomain
     */
    public CreateLiveDomainRequest publishDomain(String publishDomain) {
        this.publishDomain = publishDomain;
        return this;
    }

    /**
     * set 回源类型只能是[ips,domain]中的一种
     *
     * @param sourceType
     */
    public CreateLiveDomainRequest sourceType(String sourceType) {
        this.sourceType = sourceType;
        return this;
    }

    /**
     * set backHttpType
     *
     * @param backHttpType
     */
    public CreateLiveDomainRequest backHttpType(String backHttpType) {
        this.backHttpType = backHttpType;
        return this;
    }

    /**
     * set 默认回源host
     *
     * @param defaultSourceHost
     */
    public CreateLiveDomainRequest defaultSourceHost(String defaultSourceHost) {
        this.defaultSourceHost = defaultSourceHost;
        return this;
    }

    /**
     * set 站点类型1:push(推流模式),2:pull(拉流模式),3:mix(混合模式)
     *
     * @param siteType
     */
    public CreateLiveDomainRequest siteType(String siteType) {
        this.siteType = siteType;
        return this;
    }

    /**
     * set 回源类型，支持rtmp, http-flv, https-flv, http-hls,https-hls，默认rtmp
     *
     * @param backSourceType
     */
    public CreateLiveDomainRequest backSourceType(String backSourceType) {
        this.backSourceType = backSourceType;
        return this;
    }

    /**
     * set 播放协议，默认为rtmp,hdl,hls全选
     *
     * @param playProtocol
     */
    public CreateLiveDomainRequest playProtocol(List<String> playProtocol) {
        this.playProtocol = playProtocol;
        return this;
    }

    /**
     * set 转推地址
     *
     * @param forwardCustomVhost
     */
    public CreateLiveDomainRequest forwardCustomVhost(String forwardCustomVhost) {
        this.forwardCustomVhost = forwardCustomVhost;
        return this;
    }

    /**
     * set 回源IP信息
     *
     * @param ipSource
     */
    public CreateLiveDomainRequest ipSource(List<IpSourceInfo> ipSource) {
        this.ipSource = ipSource;
        return this;
    }

    /**
     * set 回源域名信息
     *
     * @param domainSource
     */
    public CreateLiveDomainRequest domainSource(List<DomainSourceInfo> domainSource) {
        this.domainSource = domainSource;
        return this;
    }

    /**
     * set 默认为H.264
     *
     * @param videoType
     */
    public CreateLiveDomainRequest videoType(String videoType) {
        this.videoType = videoType;
        return this;
    }

    /**
     * set 默认为AAC
     *
     * @param audioType
     */
    public CreateLiveDomainRequest audioType(String audioType) {
        this.audioType = audioType;
        return this;
    }


    /**
     * add item to 播放协议，默认为rtmp,hdl,hls全选
     *
     * @param playProtocol
     */
    public void addPlayProtocol(String playProtocol) {
        if (this.playProtocol == null) {
            this.playProtocol = new ArrayList<>();
        }
        this.playProtocol.add(playProtocol);
    }

    /**
     * add item to 回源IP信息
     *
     * @param ipSource
     */
    public void addIpSource(IpSourceInfo ipSource) {
        if (this.ipSource == null) {
            this.ipSource = new ArrayList<>();
        }
        this.ipSource.add(ipSource);
    }

    /**
     * add item to 回源域名信息
     *
     * @param domainSource
     */
    public void addDomainSource(DomainSourceInfo domainSource) {
        if (this.domainSource == null) {
            this.domainSource = new ArrayList<>();
        }
        this.domainSource.add(domainSource);
    }

}