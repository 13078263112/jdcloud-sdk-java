/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 直播域名操作类接口
 * Openapi For JCLOUD cdn
 *
 * OpenAPI spec version: v1
 * Contact: pid-cdn@jd.com
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.cdn.model;

import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 设置回源鉴权信息
 */
public class SetOriginAuthenticationResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 是否忽略参数
     */
    private String ignoreQueryString;

    /**
     * 推流IP白名单（用逗号分隔）
     */
    private String pushIpWhiteList;

    /**
     * 推流超时时间
     */
    private Integer publishNormalTimeout;

    /**
     * 推断流时，通知客户系统的URL
     */
    private String notifyCustomUrl;

    /**
     * 通知客户系统的鉴权key
     */
    private String notifyCustomAuthKey;

    /**
     * 转推鉴权类型（0：不鉴权，1：参数鉴权，2：URL鉴权）
     */
    private Integer forwardAccessKeyType;

    /**
     * 转推的鉴权key
     */
    private String forwardPrivateKey;

    /**
     * 回源鉴权类型（0：不鉴权，1：参数鉴权，2：URL鉴权）
     */
    private Integer originAccessKeyType;

    /**
     * 回源的鉴权key
     */
    private String originPrivateKey;


    /**
     * get 是否忽略参数
     *
     * @return
     */
    public String getIgnoreQueryString() {
        return ignoreQueryString;
    }

    /**
     * set 是否忽略参数
     *
     * @param ignoreQueryString
     */
    public void setIgnoreQueryString(String ignoreQueryString) {
        this.ignoreQueryString = ignoreQueryString;
    }

    /**
     * get 推流IP白名单（用逗号分隔）
     *
     * @return
     */
    public String getPushIpWhiteList() {
        return pushIpWhiteList;
    }

    /**
     * set 推流IP白名单（用逗号分隔）
     *
     * @param pushIpWhiteList
     */
    public void setPushIpWhiteList(String pushIpWhiteList) {
        this.pushIpWhiteList = pushIpWhiteList;
    }

    /**
     * get 推流超时时间
     *
     * @return
     */
    public Integer getPublishNormalTimeout() {
        return publishNormalTimeout;
    }

    /**
     * set 推流超时时间
     *
     * @param publishNormalTimeout
     */
    public void setPublishNormalTimeout(Integer publishNormalTimeout) {
        this.publishNormalTimeout = publishNormalTimeout;
    }

    /**
     * get 推断流时，通知客户系统的URL
     *
     * @return
     */
    public String getNotifyCustomUrl() {
        return notifyCustomUrl;
    }

    /**
     * set 推断流时，通知客户系统的URL
     *
     * @param notifyCustomUrl
     */
    public void setNotifyCustomUrl(String notifyCustomUrl) {
        this.notifyCustomUrl = notifyCustomUrl;
    }

    /**
     * get 通知客户系统的鉴权key
     *
     * @return
     */
    public String getNotifyCustomAuthKey() {
        return notifyCustomAuthKey;
    }

    /**
     * set 通知客户系统的鉴权key
     *
     * @param notifyCustomAuthKey
     */
    public void setNotifyCustomAuthKey(String notifyCustomAuthKey) {
        this.notifyCustomAuthKey = notifyCustomAuthKey;
    }

    /**
     * get 转推鉴权类型（0：不鉴权，1：参数鉴权，2：URL鉴权）
     *
     * @return
     */
    public Integer getForwardAccessKeyType() {
        return forwardAccessKeyType;
    }

    /**
     * set 转推鉴权类型（0：不鉴权，1：参数鉴权，2：URL鉴权）
     *
     * @param forwardAccessKeyType
     */
    public void setForwardAccessKeyType(Integer forwardAccessKeyType) {
        this.forwardAccessKeyType = forwardAccessKeyType;
    }

    /**
     * get 转推的鉴权key
     *
     * @return
     */
    public String getForwardPrivateKey() {
        return forwardPrivateKey;
    }

    /**
     * set 转推的鉴权key
     *
     * @param forwardPrivateKey
     */
    public void setForwardPrivateKey(String forwardPrivateKey) {
        this.forwardPrivateKey = forwardPrivateKey;
    }

    /**
     * get 回源鉴权类型（0：不鉴权，1：参数鉴权，2：URL鉴权）
     *
     * @return
     */
    public Integer getOriginAccessKeyType() {
        return originAccessKeyType;
    }

    /**
     * set 回源鉴权类型（0：不鉴权，1：参数鉴权，2：URL鉴权）
     *
     * @param originAccessKeyType
     */
    public void setOriginAccessKeyType(Integer originAccessKeyType) {
        this.originAccessKeyType = originAccessKeyType;
    }

    /**
     * get 回源的鉴权key
     *
     * @return
     */
    public String getOriginPrivateKey() {
        return originPrivateKey;
    }

    /**
     * set 回源的鉴权key
     *
     * @param originPrivateKey
     */
    public void setOriginPrivateKey(String originPrivateKey) {
        this.originPrivateKey = originPrivateKey;
    }


    /**
     * set 是否忽略参数
     *
     * @param ignoreQueryString
     */
    public SetOriginAuthenticationResult ignoreQueryString(String ignoreQueryString) {
        this.ignoreQueryString = ignoreQueryString;
        return this;
    }

    /**
     * set 推流IP白名单（用逗号分隔）
     *
     * @param pushIpWhiteList
     */
    public SetOriginAuthenticationResult pushIpWhiteList(String pushIpWhiteList) {
        this.pushIpWhiteList = pushIpWhiteList;
        return this;
    }

    /**
     * set 推流超时时间
     *
     * @param publishNormalTimeout
     */
    public SetOriginAuthenticationResult publishNormalTimeout(Integer publishNormalTimeout) {
        this.publishNormalTimeout = publishNormalTimeout;
        return this;
    }

    /**
     * set 推断流时，通知客户系统的URL
     *
     * @param notifyCustomUrl
     */
    public SetOriginAuthenticationResult notifyCustomUrl(String notifyCustomUrl) {
        this.notifyCustomUrl = notifyCustomUrl;
        return this;
    }

    /**
     * set 通知客户系统的鉴权key
     *
     * @param notifyCustomAuthKey
     */
    public SetOriginAuthenticationResult notifyCustomAuthKey(String notifyCustomAuthKey) {
        this.notifyCustomAuthKey = notifyCustomAuthKey;
        return this;
    }

    /**
     * set 转推鉴权类型（0：不鉴权，1：参数鉴权，2：URL鉴权）
     *
     * @param forwardAccessKeyType
     */
    public SetOriginAuthenticationResult forwardAccessKeyType(Integer forwardAccessKeyType) {
        this.forwardAccessKeyType = forwardAccessKeyType;
        return this;
    }

    /**
     * set 转推的鉴权key
     *
     * @param forwardPrivateKey
     */
    public SetOriginAuthenticationResult forwardPrivateKey(String forwardPrivateKey) {
        this.forwardPrivateKey = forwardPrivateKey;
        return this;
    }

    /**
     * set 回源鉴权类型（0：不鉴权，1：参数鉴权，2：URL鉴权）
     *
     * @param originAccessKeyType
     */
    public SetOriginAuthenticationResult originAccessKeyType(Integer originAccessKeyType) {
        this.originAccessKeyType = originAccessKeyType;
        return this;
    }

    /**
     * set 回源的鉴权key
     *
     * @param originPrivateKey
     */
    public SetOriginAuthenticationResult originPrivateKey(String originPrivateKey) {
        this.originPrivateKey = originPrivateKey;
        return this;
    }


}