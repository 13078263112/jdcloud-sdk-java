/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.censor.model;

import java.util.List;
import java.util.ArrayList;

/**
 * textResultDetail
 */
public class TextResultDetail  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 检测场景，和调用请求中的场景对应
     */
    private String scene;

    /**
     * 检测结果的分类，与具体的scene对应。取值范围参考scene 和 label说明
     */
    private String label;

    /**
     * 结果为该分类的概率，取值范围为0.00-100.00。值越高，表示越有可能属于该分类subLabel
     */
    private Float score;

    /**
     * 建议用户执行的操作，取值范围pass：文本正常，无需进行其余操作，或者未识别出目标对象review：检测结果不确定，需要进行人工审核，或识别出目标对象block：图片违规，建议执行进一步操作（如直接删除或做限制处理）
     */
    private String suggestion;

    /**
     * 命中该风险的上下文信息。具体结构描述见hintWordsInfo
     */
    private List<HintWordsInfo> hintWordsInfos;


    /**
     * get 检测场景，和调用请求中的场景对应
     *
     * @return
     */
    public String getScene() {
        return scene;
    }

    /**
     * set 检测场景，和调用请求中的场景对应
     *
     * @param scene
     */
    public void setScene(String scene) {
        this.scene = scene;
    }

    /**
     * get 检测结果的分类，与具体的scene对应。取值范围参考scene 和 label说明
     *
     * @return
     */
    public String getLabel() {
        return label;
    }

    /**
     * set 检测结果的分类，与具体的scene对应。取值范围参考scene 和 label说明
     *
     * @param label
     */
    public void setLabel(String label) {
        this.label = label;
    }

    /**
     * get 结果为该分类的概率，取值范围为0.00-100.00。值越高，表示越有可能属于该分类subLabel
     *
     * @return
     */
    public Float getScore() {
        return score;
    }

    /**
     * set 结果为该分类的概率，取值范围为0.00-100.00。值越高，表示越有可能属于该分类subLabel
     *
     * @param score
     */
    public void setScore(Float score) {
        this.score = score;
    }

    /**
     * get 建议用户执行的操作，取值范围pass：文本正常，无需进行其余操作，或者未识别出目标对象review：检测结果不确定，需要进行人工审核，或识别出目标对象block：图片违规，建议执行进一步操作（如直接删除或做限制处理）
     *
     * @return
     */
    public String getSuggestion() {
        return suggestion;
    }

    /**
     * set 建议用户执行的操作，取值范围pass：文本正常，无需进行其余操作，或者未识别出目标对象review：检测结果不确定，需要进行人工审核，或识别出目标对象block：图片违规，建议执行进一步操作（如直接删除或做限制处理）
     *
     * @param suggestion
     */
    public void setSuggestion(String suggestion) {
        this.suggestion = suggestion;
    }

    /**
     * get 命中该风险的上下文信息。具体结构描述见hintWordsInfo
     *
     * @return
     */
    public List<HintWordsInfo> getHintWordsInfos() {
        return hintWordsInfos;
    }

    /**
     * set 命中该风险的上下文信息。具体结构描述见hintWordsInfo
     *
     * @param hintWordsInfos
     */
    public void setHintWordsInfos(List<HintWordsInfo> hintWordsInfos) {
        this.hintWordsInfos = hintWordsInfos;
    }


    /**
     * set 检测场景，和调用请求中的场景对应
     *
     * @param scene
     */
    public TextResultDetail scene(String scene) {
        this.scene = scene;
        return this;
    }

    /**
     * set 检测结果的分类，与具体的scene对应。取值范围参考scene 和 label说明
     *
     * @param label
     */
    public TextResultDetail label(String label) {
        this.label = label;
        return this;
    }

    /**
     * set 结果为该分类的概率，取值范围为0.00-100.00。值越高，表示越有可能属于该分类subLabel
     *
     * @param score
     */
    public TextResultDetail score(Float score) {
        this.score = score;
        return this;
    }

    /**
     * set 建议用户执行的操作，取值范围pass：文本正常，无需进行其余操作，或者未识别出目标对象review：检测结果不确定，需要进行人工审核，或识别出目标对象block：图片违规，建议执行进一步操作（如直接删除或做限制处理）
     *
     * @param suggestion
     */
    public TextResultDetail suggestion(String suggestion) {
        this.suggestion = suggestion;
        return this;
    }

    /**
     * set 命中该风险的上下文信息。具体结构描述见hintWordsInfo
     *
     * @param hintWordsInfos
     */
    public TextResultDetail hintWordsInfos(List<HintWordsInfo> hintWordsInfos) {
        this.hintWordsInfos = hintWordsInfos;
        return this;
    }


    /**
     * add item to 命中该风险的上下文信息。具体结构描述见hintWordsInfo
     *
     * @param hintWordsInfo
     */
    public void addHintWordsInfo(HintWordsInfo hintWordsInfo) {
        if (this.hintWordsInfos == null) {
            this.hintWordsInfos = new ArrayList<>();
        }
        this.hintWordsInfos.add(hintWordsInfo);
    }

}