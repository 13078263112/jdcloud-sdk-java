/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.censor.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * ossCallbackReq
 */
public class OssCallbackReq  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 回调地址，完整的url
     * Required:true
     */
    @Required
    private String callback;

    /**
     * 增量回调，0-不开启，1-开启
     * Required:true
     */
    @Required
    private Integer incrementCall;

    /**
     * 存量回调，0-不开启，1-开启
     * Required:true
     */
    @Required
    private Integer stockCall;

    /**
     * 扫描回调，0-不开启，1-开启
     * Required:true
     */
    @Required
    private Integer scanCall;

    /**
     * 审核回调，0-不开启，1-开启
     * Required:true
     */
    @Required
    private Integer reviewCall;

    /**
     * 校验seed，不传或传入空字符串则生成新的seed并返回
     */
    private String seed;


    /**
     * get 回调地址，完整的url
     *
     * @return
     */
    public String getCallback() {
        return callback;
    }

    /**
     * set 回调地址，完整的url
     *
     * @param callback
     */
    public void setCallback(String callback) {
        this.callback = callback;
    }

    /**
     * get 增量回调，0-不开启，1-开启
     *
     * @return
     */
    public Integer getIncrementCall() {
        return incrementCall;
    }

    /**
     * set 增量回调，0-不开启，1-开启
     *
     * @param incrementCall
     */
    public void setIncrementCall(Integer incrementCall) {
        this.incrementCall = incrementCall;
    }

    /**
     * get 存量回调，0-不开启，1-开启
     *
     * @return
     */
    public Integer getStockCall() {
        return stockCall;
    }

    /**
     * set 存量回调，0-不开启，1-开启
     *
     * @param stockCall
     */
    public void setStockCall(Integer stockCall) {
        this.stockCall = stockCall;
    }

    /**
     * get 扫描回调，0-不开启，1-开启
     *
     * @return
     */
    public Integer getScanCall() {
        return scanCall;
    }

    /**
     * set 扫描回调，0-不开启，1-开启
     *
     * @param scanCall
     */
    public void setScanCall(Integer scanCall) {
        this.scanCall = scanCall;
    }

    /**
     * get 审核回调，0-不开启，1-开启
     *
     * @return
     */
    public Integer getReviewCall() {
        return reviewCall;
    }

    /**
     * set 审核回调，0-不开启，1-开启
     *
     * @param reviewCall
     */
    public void setReviewCall(Integer reviewCall) {
        this.reviewCall = reviewCall;
    }

    /**
     * get 校验seed，不传或传入空字符串则生成新的seed并返回
     *
     * @return
     */
    public String getSeed() {
        return seed;
    }

    /**
     * set 校验seed，不传或传入空字符串则生成新的seed并返回
     *
     * @param seed
     */
    public void setSeed(String seed) {
        this.seed = seed;
    }


    /**
     * set 回调地址，完整的url
     *
     * @param callback
     */
    public OssCallbackReq callback(String callback) {
        this.callback = callback;
        return this;
    }

    /**
     * set 增量回调，0-不开启，1-开启
     *
     * @param incrementCall
     */
    public OssCallbackReq incrementCall(Integer incrementCall) {
        this.incrementCall = incrementCall;
        return this;
    }

    /**
     * set 存量回调，0-不开启，1-开启
     *
     * @param stockCall
     */
    public OssCallbackReq stockCall(Integer stockCall) {
        this.stockCall = stockCall;
        return this;
    }

    /**
     * set 扫描回调，0-不开启，1-开启
     *
     * @param scanCall
     */
    public OssCallbackReq scanCall(Integer scanCall) {
        this.scanCall = scanCall;
        return this;
    }

    /**
     * set 审核回调，0-不开启，1-开启
     *
     * @param reviewCall
     */
    public OssCallbackReq reviewCall(Integer reviewCall) {
        this.reviewCall = reviewCall;
        return this;
    }

    /**
     * set 校验seed，不传或传入空字符串则生成新的seed并返回
     *
     * @param seed
     */
    public OssCallbackReq seed(String seed) {
        this.seed = seed;
        return this;
    }


}