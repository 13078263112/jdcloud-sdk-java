/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;

/**
 * queryOptionCreate
 */
public class QueryOptionCreate  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 聚合方式，默认等于downSampleType(若downSampleType为last，AggrType取max)或avg，可选值参考:sum、avg、min、max
     */
    private String aggrType;

    /**
     * 监控指标数据的维度信息,根据维度来指定查询的监控数据维度，至少指定一个查询维度
     * Required:true
     */
    @Required
    private List<DimensionsParam> dimensions;

    /**
     * 采样方式，默认等于aggrType或avg，可选值参考：sum、avg、last、min、max
     */
    private String downSampleType;

    /**
     * metric
     * Required:true
     */
    @Required
    private String metric;


    /**
     * get 聚合方式，默认等于downSampleType(若downSampleType为last，AggrType取max)或avg，可选值参考:sum、avg、min、max
     *
     * @return
     */
    public String getAggrType() {
        return aggrType;
    }

    /**
     * set 聚合方式，默认等于downSampleType(若downSampleType为last，AggrType取max)或avg，可选值参考:sum、avg、min、max
     *
     * @param aggrType
     */
    public void setAggrType(String aggrType) {
        this.aggrType = aggrType;
    }

    /**
     * get 监控指标数据的维度信息,根据维度来指定查询的监控数据维度，至少指定一个查询维度
     *
     * @return
     */
    public List<DimensionsParam> getDimensions() {
        return dimensions;
    }

    /**
     * set 监控指标数据的维度信息,根据维度来指定查询的监控数据维度，至少指定一个查询维度
     *
     * @param dimensions
     */
    public void setDimensions(List<DimensionsParam> dimensions) {
        this.dimensions = dimensions;
    }

    /**
     * get 采样方式，默认等于aggrType或avg，可选值参考：sum、avg、last、min、max
     *
     * @return
     */
    public String getDownSampleType() {
        return downSampleType;
    }

    /**
     * set 采样方式，默认等于aggrType或avg，可选值参考：sum、avg、last、min、max
     *
     * @param downSampleType
     */
    public void setDownSampleType(String downSampleType) {
        this.downSampleType = downSampleType;
    }

    /**
     * get metric
     *
     * @return
     */
    public String getMetric() {
        return metric;
    }

    /**
     * set metric
     *
     * @param metric
     */
    public void setMetric(String metric) {
        this.metric = metric;
    }


    /**
     * set 聚合方式，默认等于downSampleType(若downSampleType为last，AggrType取max)或avg，可选值参考:sum、avg、min、max
     *
     * @param aggrType
     */
    public QueryOptionCreate aggrType(String aggrType) {
        this.aggrType = aggrType;
        return this;
    }

    /**
     * set 监控指标数据的维度信息,根据维度来指定查询的监控数据维度，至少指定一个查询维度
     *
     * @param dimensions
     */
    public QueryOptionCreate dimensions(List<DimensionsParam> dimensions) {
        this.dimensions = dimensions;
        return this;
    }

    /**
     * set 采样方式，默认等于aggrType或avg，可选值参考：sum、avg、last、min、max
     *
     * @param downSampleType
     */
    public QueryOptionCreate downSampleType(String downSampleType) {
        this.downSampleType = downSampleType;
        return this;
    }

    /**
     * set metric
     *
     * @param metric
     */
    public QueryOptionCreate metric(String metric) {
        this.metric = metric;
        return this;
    }


    /**
     * add item to 监控指标数据的维度信息,根据维度来指定查询的监控数据维度，至少指定一个查询维度
     *
     * @param dimension
     */
    public void addDimension(DimensionsParam dimension) {
        if (this.dimensions == null) {
            this.dimensions = new ArrayList<>();
        }
        this.dimensions.add(dimension);
    }

}