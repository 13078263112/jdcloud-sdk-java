/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import java.util.List;
import java.util.ArrayList;

/**
 * chartDimensionDetail
 */
public class ChartDimensionDetail  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 监控图的展示方式
     */
    private List<ChartDetail> charts;

    /**
     * 维度dimension
     */
    private String dimension;

    /**
     * 分组名称
     */
    private String dimensionName;

    /**
     * 产品线
     */
    private String serviceCode;

    /**
     * 分组名称
     */
    private String serviceName;

    /**
     * 分组下metric对应的tags
     */
    private Object tags;


    /**
     * get 监控图的展示方式
     *
     * @return
     */
    public List<ChartDetail> getCharts() {
        return charts;
    }

    /**
     * set 监控图的展示方式
     *
     * @param charts
     */
    public void setCharts(List<ChartDetail> charts) {
        this.charts = charts;
    }

    /**
     * get 维度dimension
     *
     * @return
     */
    public String getDimension() {
        return dimension;
    }

    /**
     * set 维度dimension
     *
     * @param dimension
     */
    public void setDimension(String dimension) {
        this.dimension = dimension;
    }

    /**
     * get 分组名称
     *
     * @return
     */
    public String getDimensionName() {
        return dimensionName;
    }

    /**
     * set 分组名称
     *
     * @param dimensionName
     */
    public void setDimensionName(String dimensionName) {
        this.dimensionName = dimensionName;
    }

    /**
     * get 产品线
     *
     * @return
     */
    public String getServiceCode() {
        return serviceCode;
    }

    /**
     * set 产品线
     *
     * @param serviceCode
     */
    public void setServiceCode(String serviceCode) {
        this.serviceCode = serviceCode;
    }

    /**
     * get 分组名称
     *
     * @return
     */
    public String getServiceName() {
        return serviceName;
    }

    /**
     * set 分组名称
     *
     * @param serviceName
     */
    public void setServiceName(String serviceName) {
        this.serviceName = serviceName;
    }

    /**
     * get 分组下metric对应的tags
     *
     * @return
     */
    public Object getTags() {
        return tags;
    }

    /**
     * set 分组下metric对应的tags
     *
     * @param tags
     */
    public void setTags(Object tags) {
        this.tags = tags;
    }


    /**
     * set 监控图的展示方式
     *
     * @param charts
     */
    public ChartDimensionDetail charts(List<ChartDetail> charts) {
        this.charts = charts;
        return this;
    }

    /**
     * set 维度dimension
     *
     * @param dimension
     */
    public ChartDimensionDetail dimension(String dimension) {
        this.dimension = dimension;
        return this;
    }

    /**
     * set 分组名称
     *
     * @param dimensionName
     */
    public ChartDimensionDetail dimensionName(String dimensionName) {
        this.dimensionName = dimensionName;
        return this;
    }

    /**
     * set 产品线
     *
     * @param serviceCode
     */
    public ChartDimensionDetail serviceCode(String serviceCode) {
        this.serviceCode = serviceCode;
        return this;
    }

    /**
     * set 分组名称
     *
     * @param serviceName
     */
    public ChartDimensionDetail serviceName(String serviceName) {
        this.serviceName = serviceName;
        return this;
    }

    /**
     * set 分组下metric对应的tags
     *
     * @param tags
     */
    public ChartDimensionDetail tags(Object tags) {
        this.tags = tags;
        return this;
    }


    /**
     * add item to 监控图的展示方式
     *
     * @param chart
     */
    public void addChart(ChartDetail chart) {
        if (this.charts == null) {
            this.charts = new ArrayList<>();
        }
        this.charts.add(chart);
    }

}