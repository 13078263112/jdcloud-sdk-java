/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;

/**
 * createProbeTaskParam
 */
public class CreateProbeTaskParam  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 探测地址，探测类型为http：内容为url（校验http或https头）；探测类型为telnet：内容为ip或域名（只允许中英文 、数字、中划线（-）、小数点（.）、开头及结尾均不能含有“-”）
     * Required:true
     */
    @Required
    private String address;

    /**
     * 探测间隔（单位：秒）：默认值：300，取值范围[60,1200]
     */
    private Long frequency;

    /**
     * http body：选择探测类型为1&#x3D;http时有效，最长不超过1024字节
in: query
     */
    private String httpBody;

    /**
     * http cookie：选择探测类型为1&#x3D;http时有效，最大允许20个key、value对，最长不超过1024字节
     */
    private List<KeyValue> httpCookie;

    /**
     * http header：选择探测类型为1&#x3D;http时有效，最大允许20个key、value对，最长不超过1024字节
     */
    private List<KeyValue> httpHeader;

    /**
     * http探测方法：选择探测类型为1&#x3D;http时有效，默认值为1&#x3D;get，可选值：1:get、2:post、3:head
     */
    private Long httpType;

    /**
     * task名称，不允许重复，长度不超过32字符，只允许中英文、数字、下划线_、中划线-, [0-9][a-z] [A-Z] [- _ ]
     * Required:true
     */
    @Required
    private String name;

    /**
     * 探测端口，探测类型为telnet时必填，取值范围 [1-65535]，http类型忽略该参数
in: query
     */
    private Long port;

    /**
     * 探测类型：1&#x3D;http、2&#x3D;telnet
     * Required:true
     */
    @Required
    private Long probeType;

    /**
     * 探测源（发起对探测目标探测的云主机，需安装相应的agent才能探测）
     * Required:true
     */
    @Required
    private List<Probe> probes;

    /**
     * 探测目标id：该探测对象的uuid，任务类型为2：rds、3：redis时必填，
     */
    private String targetId;

    /**
     * 探测目标region：该探测对象所在region，任务类型为2：rds、3：redis时必填
in: query
     */
    private String targetRegion;

    /**
     * task类型：1&#x3D;url/ip、2&#x3D;RDS、3&#x3D;redis
     * Required:true
     */
    @Required
    private Long taskType;

    /**
     * 探测超时时间（单位：秒）：默认值:5，取值范围 [1,300]
     */
    private Long timeout;


    /**
     * get 探测地址，探测类型为http：内容为url（校验http或https头）；探测类型为telnet：内容为ip或域名（只允许中英文 、数字、中划线（-）、小数点（.）、开头及结尾均不能含有“-”）
     *
     * @return
     */
    public String getAddress() {
        return address;
    }

    /**
     * set 探测地址，探测类型为http：内容为url（校验http或https头）；探测类型为telnet：内容为ip或域名（只允许中英文 、数字、中划线（-）、小数点（.）、开头及结尾均不能含有“-”）
     *
     * @param address
     */
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * get 探测间隔（单位：秒）：默认值：300，取值范围[60,1200]
     *
     * @return
     */
    public Long getFrequency() {
        return frequency;
    }

    /**
     * set 探测间隔（单位：秒）：默认值：300，取值范围[60,1200]
     *
     * @param frequency
     */
    public void setFrequency(Long frequency) {
        this.frequency = frequency;
    }

    /**
     * get http body：选择探测类型为1&#x3D;http时有效，最长不超过1024字节
in: query
     *
     * @return
     */
    public String getHttpBody() {
        return httpBody;
    }

    /**
     * set http body：选择探测类型为1&#x3D;http时有效，最长不超过1024字节
in: query
     *
     * @param httpBody
     */
    public void setHttpBody(String httpBody) {
        this.httpBody = httpBody;
    }

    /**
     * get http cookie：选择探测类型为1&#x3D;http时有效，最大允许20个key、value对，最长不超过1024字节
     *
     * @return
     */
    public List<KeyValue> getHttpCookie() {
        return httpCookie;
    }

    /**
     * set http cookie：选择探测类型为1&#x3D;http时有效，最大允许20个key、value对，最长不超过1024字节
     *
     * @param httpCookie
     */
    public void setHttpCookie(List<KeyValue> httpCookie) {
        this.httpCookie = httpCookie;
    }

    /**
     * get http header：选择探测类型为1&#x3D;http时有效，最大允许20个key、value对，最长不超过1024字节
     *
     * @return
     */
    public List<KeyValue> getHttpHeader() {
        return httpHeader;
    }

    /**
     * set http header：选择探测类型为1&#x3D;http时有效，最大允许20个key、value对，最长不超过1024字节
     *
     * @param httpHeader
     */
    public void setHttpHeader(List<KeyValue> httpHeader) {
        this.httpHeader = httpHeader;
    }

    /**
     * get http探测方法：选择探测类型为1&#x3D;http时有效，默认值为1&#x3D;get，可选值：1:get、2:post、3:head
     *
     * @return
     */
    public Long getHttpType() {
        return httpType;
    }

    /**
     * set http探测方法：选择探测类型为1&#x3D;http时有效，默认值为1&#x3D;get，可选值：1:get、2:post、3:head
     *
     * @param httpType
     */
    public void setHttpType(Long httpType) {
        this.httpType = httpType;
    }

    /**
     * get task名称，不允许重复，长度不超过32字符，只允许中英文、数字、下划线_、中划线-, [0-9][a-z] [A-Z] [- _ ]
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set task名称，不允许重复，长度不超过32字符，只允许中英文、数字、下划线_、中划线-, [0-9][a-z] [A-Z] [- _ ]
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * get 探测端口，探测类型为telnet时必填，取值范围 [1-65535]，http类型忽略该参数
in: query
     *
     * @return
     */
    public Long getPort() {
        return port;
    }

    /**
     * set 探测端口，探测类型为telnet时必填，取值范围 [1-65535]，http类型忽略该参数
in: query
     *
     * @param port
     */
    public void setPort(Long port) {
        this.port = port;
    }

    /**
     * get 探测类型：1&#x3D;http、2&#x3D;telnet
     *
     * @return
     */
    public Long getProbeType() {
        return probeType;
    }

    /**
     * set 探测类型：1&#x3D;http、2&#x3D;telnet
     *
     * @param probeType
     */
    public void setProbeType(Long probeType) {
        this.probeType = probeType;
    }

    /**
     * get 探测源（发起对探测目标探测的云主机，需安装相应的agent才能探测）
     *
     * @return
     */
    public List<Probe> getProbes() {
        return probes;
    }

    /**
     * set 探测源（发起对探测目标探测的云主机，需安装相应的agent才能探测）
     *
     * @param probes
     */
    public void setProbes(List<Probe> probes) {
        this.probes = probes;
    }

    /**
     * get 探测目标id：该探测对象的uuid，任务类型为2：rds、3：redis时必填，
     *
     * @return
     */
    public String getTargetId() {
        return targetId;
    }

    /**
     * set 探测目标id：该探测对象的uuid，任务类型为2：rds、3：redis时必填，
     *
     * @param targetId
     */
    public void setTargetId(String targetId) {
        this.targetId = targetId;
    }

    /**
     * get 探测目标region：该探测对象所在region，任务类型为2：rds、3：redis时必填
in: query
     *
     * @return
     */
    public String getTargetRegion() {
        return targetRegion;
    }

    /**
     * set 探测目标region：该探测对象所在region，任务类型为2：rds、3：redis时必填
in: query
     *
     * @param targetRegion
     */
    public void setTargetRegion(String targetRegion) {
        this.targetRegion = targetRegion;
    }

    /**
     * get task类型：1&#x3D;url/ip、2&#x3D;RDS、3&#x3D;redis
     *
     * @return
     */
    public Long getTaskType() {
        return taskType;
    }

    /**
     * set task类型：1&#x3D;url/ip、2&#x3D;RDS、3&#x3D;redis
     *
     * @param taskType
     */
    public void setTaskType(Long taskType) {
        this.taskType = taskType;
    }

    /**
     * get 探测超时时间（单位：秒）：默认值:5，取值范围 [1,300]
     *
     * @return
     */
    public Long getTimeout() {
        return timeout;
    }

    /**
     * set 探测超时时间（单位：秒）：默认值:5，取值范围 [1,300]
     *
     * @param timeout
     */
    public void setTimeout(Long timeout) {
        this.timeout = timeout;
    }


    /**
     * set 探测地址，探测类型为http：内容为url（校验http或https头）；探测类型为telnet：内容为ip或域名（只允许中英文 、数字、中划线（-）、小数点（.）、开头及结尾均不能含有“-”）
     *
     * @param address
     */
    public CreateProbeTaskParam address(String address) {
        this.address = address;
        return this;
    }

    /**
     * set 探测间隔（单位：秒）：默认值：300，取值范围[60,1200]
     *
     * @param frequency
     */
    public CreateProbeTaskParam frequency(Long frequency) {
        this.frequency = frequency;
        return this;
    }

    /**
     * set http body：选择探测类型为1&#x3D;http时有效，最长不超过1024字节
in: query
     *
     * @param httpBody
     */
    public CreateProbeTaskParam httpBody(String httpBody) {
        this.httpBody = httpBody;
        return this;
    }

    /**
     * set http cookie：选择探测类型为1&#x3D;http时有效，最大允许20个key、value对，最长不超过1024字节
     *
     * @param httpCookie
     */
    public CreateProbeTaskParam httpCookie(List<KeyValue> httpCookie) {
        this.httpCookie = httpCookie;
        return this;
    }

    /**
     * set http header：选择探测类型为1&#x3D;http时有效，最大允许20个key、value对，最长不超过1024字节
     *
     * @param httpHeader
     */
    public CreateProbeTaskParam httpHeader(List<KeyValue> httpHeader) {
        this.httpHeader = httpHeader;
        return this;
    }

    /**
     * set http探测方法：选择探测类型为1&#x3D;http时有效，默认值为1&#x3D;get，可选值：1:get、2:post、3:head
     *
     * @param httpType
     */
    public CreateProbeTaskParam httpType(Long httpType) {
        this.httpType = httpType;
        return this;
    }

    /**
     * set task名称，不允许重复，长度不超过32字符，只允许中英文、数字、下划线_、中划线-, [0-9][a-z] [A-Z] [- _ ]
     *
     * @param name
     */
    public CreateProbeTaskParam name(String name) {
        this.name = name;
        return this;
    }

    /**
     * set 探测端口，探测类型为telnet时必填，取值范围 [1-65535]，http类型忽略该参数
in: query
     *
     * @param port
     */
    public CreateProbeTaskParam port(Long port) {
        this.port = port;
        return this;
    }

    /**
     * set 探测类型：1&#x3D;http、2&#x3D;telnet
     *
     * @param probeType
     */
    public CreateProbeTaskParam probeType(Long probeType) {
        this.probeType = probeType;
        return this;
    }

    /**
     * set 探测源（发起对探测目标探测的云主机，需安装相应的agent才能探测）
     *
     * @param probes
     */
    public CreateProbeTaskParam probes(List<Probe> probes) {
        this.probes = probes;
        return this;
    }

    /**
     * set 探测目标id：该探测对象的uuid，任务类型为2：rds、3：redis时必填，
     *
     * @param targetId
     */
    public CreateProbeTaskParam targetId(String targetId) {
        this.targetId = targetId;
        return this;
    }

    /**
     * set 探测目标region：该探测对象所在region，任务类型为2：rds、3：redis时必填
in: query
     *
     * @param targetRegion
     */
    public CreateProbeTaskParam targetRegion(String targetRegion) {
        this.targetRegion = targetRegion;
        return this;
    }

    /**
     * set task类型：1&#x3D;url/ip、2&#x3D;RDS、3&#x3D;redis
     *
     * @param taskType
     */
    public CreateProbeTaskParam taskType(Long taskType) {
        this.taskType = taskType;
        return this;
    }

    /**
     * set 探测超时时间（单位：秒）：默认值:5，取值范围 [1,300]
     *
     * @param timeout
     */
    public CreateProbeTaskParam timeout(Long timeout) {
        this.timeout = timeout;
        return this;
    }


    /**
     * add item to http cookie：选择探测类型为1&#x3D;http时有效，最大允许20个key、value对，最长不超过1024字节
     *
     * @param httpCookie
     */
    public void addHttpCookie(KeyValue httpCookie) {
        if (this.httpCookie == null) {
            this.httpCookie = new ArrayList<>();
        }
        this.httpCookie.add(httpCookie);
    }

    /**
     * add item to http header：选择探测类型为1&#x3D;http时有效，最大允许20个key、value对，最长不超过1024字节
     *
     * @param httpHeader
     */
    public void addHttpHeader(KeyValue httpHeader) {
        if (this.httpHeader == null) {
            this.httpHeader = new ArrayList<>();
        }
        this.httpHeader.add(httpHeader);
    }

    /**
     * add item to 探测源（发起对探测目标探测的云主机，需安装相应的agent才能探测）
     *
     * @param probe
     */
    public void addProbe(Probe probe) {
        if (this.probes == null) {
            this.probes = new ArrayList<>();
        }
        this.probes.add(probe);
    }

}