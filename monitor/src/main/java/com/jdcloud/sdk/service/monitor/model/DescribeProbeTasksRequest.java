/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Availability Monitoring APIs
 * 可用性监控相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 查询可用性监控任务列表
 */
public class DescribeProbeTasksRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 当前所在页，默认为1
     */
    private Long pageNumber;

    /**
     * 页面大小，默认为20；取值范围[1, 100]
     */
    private Long pageSize;

    /**
     * 根据探测任务的名称查询，支持模糊查询
     */
    private String name;

    /**
     * 根据探测任务的类型查询，1、http 2、telnet
     */
    private Long type;

    /**
     * 探测任务的task_id
     * Required:true
     */
    @Required
    private String probeTaskID;


    /**
     * get 当前所在页，默认为1
     *
     * @return
     */
    public Long getPageNumber() {
        return pageNumber;
    }

    /**
     * set 当前所在页，默认为1
     *
     * @param pageNumber
     */
    public void setPageNumber(Long pageNumber) {
        this.pageNumber = pageNumber;
    }

    /**
     * get 页面大小，默认为20；取值范围[1, 100]
     *
     * @return
     */
    public Long getPageSize() {
        return pageSize;
    }

    /**
     * set 页面大小，默认为20；取值范围[1, 100]
     *
     * @param pageSize
     */
    public void setPageSize(Long pageSize) {
        this.pageSize = pageSize;
    }

    /**
     * get 根据探测任务的名称查询，支持模糊查询
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 根据探测任务的名称查询，支持模糊查询
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * get 根据探测任务的类型查询，1、http 2、telnet
     *
     * @return
     */
    public Long getType() {
        return type;
    }

    /**
     * set 根据探测任务的类型查询，1、http 2、telnet
     *
     * @param type
     */
    public void setType(Long type) {
        this.type = type;
    }

    /**
     * get 探测任务的task_id
     *
     * @return
     */
    public String getProbeTaskID() {
        return probeTaskID;
    }

    /**
     * set 探测任务的task_id
     *
     * @param probeTaskID
     */
    public void setProbeTaskID(String probeTaskID) {
        this.probeTaskID = probeTaskID;
    }


    /**
     * set 当前所在页，默认为1
     *
     * @param pageNumber
     */
    public DescribeProbeTasksRequest pageNumber(Long pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }

    /**
     * set 页面大小，默认为20；取值范围[1, 100]
     *
     * @param pageSize
     */
    public DescribeProbeTasksRequest pageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }

    /**
     * set 根据探测任务的名称查询，支持模糊查询
     *
     * @param name
     */
    public DescribeProbeTasksRequest name(String name) {
        this.name = name;
        return this;
    }

    /**
     * set 根据探测任务的类型查询，1、http 2、telnet
     *
     * @param type
     */
    public DescribeProbeTasksRequest type(Long type) {
        this.type = type;
        return this;
    }

    /**
     * set 探测任务的task_id
     *
     * @param probeTaskID
     */
    public DescribeProbeTasksRequest probeTaskID(String probeTaskID) {
        this.probeTaskID = probeTaskID;
        return this;
    }


}