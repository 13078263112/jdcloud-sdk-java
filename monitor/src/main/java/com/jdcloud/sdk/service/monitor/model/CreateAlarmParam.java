/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;

/**
 * 创建监控规则
创建监控规则
 */
public class CreateAlarmParam  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 单位
     * Required:true
     */
    @Required
    private String calculateUnit;

    /**
     * 统计方法，必须与定义的metric一致，可选值列表：avg,sum,max,min
     * Required:true
     */
    @Required
    private String calculation;

    /**
     * 报警规则通知的联系组，必须在控制台上已创建，例如&quot; [&#39;联系组1&#39;,&#39;联系组2&#39;]&quot;
     */
    private List<String> contactGroups;

    /**
     * 报警规则通知的联系人，必须在控制台上已创建，例如 [“联系人1”,”联系人2”]
     */
    private List<String> contactPersons;

    /**
     * 降采样函数
     * Required:true
     */
    @Required
    private String downSample;

    /**
     * 根据产品线查询可用监控项列表 接口 返回的Metric字段
     * Required:true
     */
    @Required
    private String metric;

    /**
     * noticeLevel
     */
    private NoticeLevel noticeLevel;

    /**
     * 通知周期 单位：小时
     */
    private Long noticePeriod;

    /**
     * 报警比较符，只能为以下几种lte(&lt;&#x3D;),lt(&lt;),gt(&gt;),gte(&gt;&#x3D;),eq(&#x3D;&#x3D;),ne(!&#x3D;)
     * Required:true
     */
    @Required
    private String operation;

    /**
     * 查询指标的周期，单位为分钟,目前支持的取值：1，2，5，15，30，60
     * Required:true
     */
    @Required
    private Long period;

    /**
     * 报警规则对应实例列表，每次最多100个，例如&quot;[&#39;resourceId1&#39;,&#39;resourceId2&#39;]&quot;
     * Required:true
     */
    @Required
    private List<String> resourceIds;

    /**
     * 产品名称
     * Required:true
     */
    @Required
    private String serviceCode;

    /**
     * 多值标签
     */
    private Object tags;

    /**
     * 报警阈值，目前只开放数值类型功能
     * Required:true
     */
    @Required
    private Double threshold;

    /**
     * 连续探测几次都满足阈值条件时报警，可选值:1,2,3,5,10,15,30,60
     * Required:true
     */
    @Required
    private Long times;

    /**
     * 回调content 注：仅webHookUrl和webHookContent均不为空时，才会创建webHook
     */
    private String webHookContent;

    /**
     * webHook协议
     */
    private String webHookProtocol;

    /**
     * 回调secret，用户请求签名，防伪造
     */
    private String webHookSecret;

    /**
     * 回调url
     */
    private String webHookUrl;


    /**
     * get 单位
     *
     * @return
     */
    public String getCalculateUnit() {
        return calculateUnit;
    }

    /**
     * set 单位
     *
     * @param calculateUnit
     */
    public void setCalculateUnit(String calculateUnit) {
        this.calculateUnit = calculateUnit;
    }

    /**
     * get 统计方法，必须与定义的metric一致，可选值列表：avg,sum,max,min
     *
     * @return
     */
    public String getCalculation() {
        return calculation;
    }

    /**
     * set 统计方法，必须与定义的metric一致，可选值列表：avg,sum,max,min
     *
     * @param calculation
     */
    public void setCalculation(String calculation) {
        this.calculation = calculation;
    }

    /**
     * get 报警规则通知的联系组，必须在控制台上已创建，例如&quot; [&#39;联系组1&#39;,&#39;联系组2&#39;]&quot;
     *
     * @return
     */
    public List<String> getContactGroups() {
        return contactGroups;
    }

    /**
     * set 报警规则通知的联系组，必须在控制台上已创建，例如&quot; [&#39;联系组1&#39;,&#39;联系组2&#39;]&quot;
     *
     * @param contactGroups
     */
    public void setContactGroups(List<String> contactGroups) {
        this.contactGroups = contactGroups;
    }

    /**
     * get 报警规则通知的联系人，必须在控制台上已创建，例如 [“联系人1”,”联系人2”]
     *
     * @return
     */
    public List<String> getContactPersons() {
        return contactPersons;
    }

    /**
     * set 报警规则通知的联系人，必须在控制台上已创建，例如 [“联系人1”,”联系人2”]
     *
     * @param contactPersons
     */
    public void setContactPersons(List<String> contactPersons) {
        this.contactPersons = contactPersons;
    }

    /**
     * get 降采样函数
     *
     * @return
     */
    public String getDownSample() {
        return downSample;
    }

    /**
     * set 降采样函数
     *
     * @param downSample
     */
    public void setDownSample(String downSample) {
        this.downSample = downSample;
    }

    /**
     * get 根据产品线查询可用监控项列表 接口 返回的Metric字段
     *
     * @return
     */
    public String getMetric() {
        return metric;
    }

    /**
     * set 根据产品线查询可用监控项列表 接口 返回的Metric字段
     *
     * @param metric
     */
    public void setMetric(String metric) {
        this.metric = metric;
    }

    /**
     * get noticeLevel
     *
     * @return
     */
    public NoticeLevel getNoticeLevel() {
        return noticeLevel;
    }

    /**
     * set noticeLevel
     *
     * @param noticeLevel
     */
    public void setNoticeLevel(NoticeLevel noticeLevel) {
        this.noticeLevel = noticeLevel;
    }

    /**
     * get 通知周期 单位：小时
     *
     * @return
     */
    public Long getNoticePeriod() {
        return noticePeriod;
    }

    /**
     * set 通知周期 单位：小时
     *
     * @param noticePeriod
     */
    public void setNoticePeriod(Long noticePeriod) {
        this.noticePeriod = noticePeriod;
    }

    /**
     * get 报警比较符，只能为以下几种lte(&lt;&#x3D;),lt(&lt;),gt(&gt;),gte(&gt;&#x3D;),eq(&#x3D;&#x3D;),ne(!&#x3D;)
     *
     * @return
     */
    public String getOperation() {
        return operation;
    }

    /**
     * set 报警比较符，只能为以下几种lte(&lt;&#x3D;),lt(&lt;),gt(&gt;),gte(&gt;&#x3D;),eq(&#x3D;&#x3D;),ne(!&#x3D;)
     *
     * @param operation
     */
    public void setOperation(String operation) {
        this.operation = operation;
    }

    /**
     * get 查询指标的周期，单位为分钟,目前支持的取值：1，2，5，15，30，60
     *
     * @return
     */
    public Long getPeriod() {
        return period;
    }

    /**
     * set 查询指标的周期，单位为分钟,目前支持的取值：1，2，5，15，30，60
     *
     * @param period
     */
    public void setPeriod(Long period) {
        this.period = period;
    }

    /**
     * get 报警规则对应实例列表，每次最多100个，例如&quot;[&#39;resourceId1&#39;,&#39;resourceId2&#39;]&quot;
     *
     * @return
     */
    public List<String> getResourceIds() {
        return resourceIds;
    }

    /**
     * set 报警规则对应实例列表，每次最多100个，例如&quot;[&#39;resourceId1&#39;,&#39;resourceId2&#39;]&quot;
     *
     * @param resourceIds
     */
    public void setResourceIds(List<String> resourceIds) {
        this.resourceIds = resourceIds;
    }

    /**
     * get 产品名称
     *
     * @return
     */
    public String getServiceCode() {
        return serviceCode;
    }

    /**
     * set 产品名称
     *
     * @param serviceCode
     */
    public void setServiceCode(String serviceCode) {
        this.serviceCode = serviceCode;
    }

    /**
     * get 多值标签
     *
     * @return
     */
    public Object getTags() {
        return tags;
    }

    /**
     * set 多值标签
     *
     * @param tags
     */
    public void setTags(Object tags) {
        this.tags = tags;
    }

    /**
     * get 报警阈值，目前只开放数值类型功能
     *
     * @return
     */
    public Double getThreshold() {
        return threshold;
    }

    /**
     * set 报警阈值，目前只开放数值类型功能
     *
     * @param threshold
     */
    public void setThreshold(Double threshold) {
        this.threshold = threshold;
    }

    /**
     * get 连续探测几次都满足阈值条件时报警，可选值:1,2,3,5,10,15,30,60
     *
     * @return
     */
    public Long getTimes() {
        return times;
    }

    /**
     * set 连续探测几次都满足阈值条件时报警，可选值:1,2,3,5,10,15,30,60
     *
     * @param times
     */
    public void setTimes(Long times) {
        this.times = times;
    }

    /**
     * get 回调content 注：仅webHookUrl和webHookContent均不为空时，才会创建webHook
     *
     * @return
     */
    public String getWebHookContent() {
        return webHookContent;
    }

    /**
     * set 回调content 注：仅webHookUrl和webHookContent均不为空时，才会创建webHook
     *
     * @param webHookContent
     */
    public void setWebHookContent(String webHookContent) {
        this.webHookContent = webHookContent;
    }

    /**
     * get webHook协议
     *
     * @return
     */
    public String getWebHookProtocol() {
        return webHookProtocol;
    }

    /**
     * set webHook协议
     *
     * @param webHookProtocol
     */
    public void setWebHookProtocol(String webHookProtocol) {
        this.webHookProtocol = webHookProtocol;
    }

    /**
     * get 回调secret，用户请求签名，防伪造
     *
     * @return
     */
    public String getWebHookSecret() {
        return webHookSecret;
    }

    /**
     * set 回调secret，用户请求签名，防伪造
     *
     * @param webHookSecret
     */
    public void setWebHookSecret(String webHookSecret) {
        this.webHookSecret = webHookSecret;
    }

    /**
     * get 回调url
     *
     * @return
     */
    public String getWebHookUrl() {
        return webHookUrl;
    }

    /**
     * set 回调url
     *
     * @param webHookUrl
     */
    public void setWebHookUrl(String webHookUrl) {
        this.webHookUrl = webHookUrl;
    }


    /**
     * set 单位
     *
     * @param calculateUnit
     */
    public CreateAlarmParam calculateUnit(String calculateUnit) {
        this.calculateUnit = calculateUnit;
        return this;
    }

    /**
     * set 统计方法，必须与定义的metric一致，可选值列表：avg,sum,max,min
     *
     * @param calculation
     */
    public CreateAlarmParam calculation(String calculation) {
        this.calculation = calculation;
        return this;
    }

    /**
     * set 报警规则通知的联系组，必须在控制台上已创建，例如&quot; [&#39;联系组1&#39;,&#39;联系组2&#39;]&quot;
     *
     * @param contactGroups
     */
    public CreateAlarmParam contactGroups(List<String> contactGroups) {
        this.contactGroups = contactGroups;
        return this;
    }

    /**
     * set 报警规则通知的联系人，必须在控制台上已创建，例如 [“联系人1”,”联系人2”]
     *
     * @param contactPersons
     */
    public CreateAlarmParam contactPersons(List<String> contactPersons) {
        this.contactPersons = contactPersons;
        return this;
    }

    /**
     * set 降采样函数
     *
     * @param downSample
     */
    public CreateAlarmParam downSample(String downSample) {
        this.downSample = downSample;
        return this;
    }

    /**
     * set 根据产品线查询可用监控项列表 接口 返回的Metric字段
     *
     * @param metric
     */
    public CreateAlarmParam metric(String metric) {
        this.metric = metric;
        return this;
    }

    /**
     * set noticeLevel
     *
     * @param noticeLevel
     */
    public CreateAlarmParam noticeLevel(NoticeLevel noticeLevel) {
        this.noticeLevel = noticeLevel;
        return this;
    }

    /**
     * set 通知周期 单位：小时
     *
     * @param noticePeriod
     */
    public CreateAlarmParam noticePeriod(Long noticePeriod) {
        this.noticePeriod = noticePeriod;
        return this;
    }

    /**
     * set 报警比较符，只能为以下几种lte(&lt;&#x3D;),lt(&lt;),gt(&gt;),gte(&gt;&#x3D;),eq(&#x3D;&#x3D;),ne(!&#x3D;)
     *
     * @param operation
     */
    public CreateAlarmParam operation(String operation) {
        this.operation = operation;
        return this;
    }

    /**
     * set 查询指标的周期，单位为分钟,目前支持的取值：1，2，5，15，30，60
     *
     * @param period
     */
    public CreateAlarmParam period(Long period) {
        this.period = period;
        return this;
    }

    /**
     * set 报警规则对应实例列表，每次最多100个，例如&quot;[&#39;resourceId1&#39;,&#39;resourceId2&#39;]&quot;
     *
     * @param resourceIds
     */
    public CreateAlarmParam resourceIds(List<String> resourceIds) {
        this.resourceIds = resourceIds;
        return this;
    }

    /**
     * set 产品名称
     *
     * @param serviceCode
     */
    public CreateAlarmParam serviceCode(String serviceCode) {
        this.serviceCode = serviceCode;
        return this;
    }

    /**
     * set 多值标签
     *
     * @param tags
     */
    public CreateAlarmParam tags(Object tags) {
        this.tags = tags;
        return this;
    }

    /**
     * set 报警阈值，目前只开放数值类型功能
     *
     * @param threshold
     */
    public CreateAlarmParam threshold(Double threshold) {
        this.threshold = threshold;
        return this;
    }

    /**
     * set 连续探测几次都满足阈值条件时报警，可选值:1,2,3,5,10,15,30,60
     *
     * @param times
     */
    public CreateAlarmParam times(Long times) {
        this.times = times;
        return this;
    }

    /**
     * set 回调content 注：仅webHookUrl和webHookContent均不为空时，才会创建webHook
     *
     * @param webHookContent
     */
    public CreateAlarmParam webHookContent(String webHookContent) {
        this.webHookContent = webHookContent;
        return this;
    }

    /**
     * set webHook协议
     *
     * @param webHookProtocol
     */
    public CreateAlarmParam webHookProtocol(String webHookProtocol) {
        this.webHookProtocol = webHookProtocol;
        return this;
    }

    /**
     * set 回调secret，用户请求签名，防伪造
     *
     * @param webHookSecret
     */
    public CreateAlarmParam webHookSecret(String webHookSecret) {
        this.webHookSecret = webHookSecret;
        return this;
    }

    /**
     * set 回调url
     *
     * @param webHookUrl
     */
    public CreateAlarmParam webHookUrl(String webHookUrl) {
        this.webHookUrl = webHookUrl;
        return this;
    }


    /**
     * add item to 报警规则通知的联系组，必须在控制台上已创建，例如&quot; [&#39;联系组1&#39;,&#39;联系组2&#39;]&quot;
     *
     * @param contactGroup
     */
    public void addContactGroup(String contactGroup) {
        if (this.contactGroups == null) {
            this.contactGroups = new ArrayList<>();
        }
        this.contactGroups.add(contactGroup);
    }

    /**
     * add item to 报警规则通知的联系人，必须在控制台上已创建，例如 [“联系人1”,”联系人2”]
     *
     * @param contactPerson
     */
    public void addContactPerson(String contactPerson) {
        if (this.contactPersons == null) {
            this.contactPersons = new ArrayList<>();
        }
        this.contactPersons.add(contactPerson);
    }

    /**
     * add item to 报警规则对应实例列表，每次最多100个，例如&quot;[&#39;resourceId1&#39;,&#39;resourceId2&#39;]&quot;
     *
     * @param resourceId
     */
    public void addResourceId(String resourceId) {
        if (this.resourceIds == null) {
            this.resourceIds = new ArrayList<>();
        }
        this.resourceIds.add(resourceId);
    }

}