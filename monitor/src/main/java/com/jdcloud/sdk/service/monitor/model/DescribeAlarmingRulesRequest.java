/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Overview APIs
 * 概览页相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.monitor.model.Filter;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 尚未恢复的告警查询接口
 */
public class DescribeAlarmingRulesRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 当前所在页，默认为1
     */
    private Long pageNumber;

    /**
     * 页面大小，默认为20；取值范围[1, 100]
     */
    private Long pageSize;

    /**
     * 服务码列表
filter name 为serviceCodes表示查询多个产品线的规则
     */
    private List<Filter> filters;

    /**
     * 要查询的地域，为空则查询所有的
     */
    private String datacenter;


    /**
     * get 当前所在页，默认为1
     *
     * @return
     */
    public Long getPageNumber() {
        return pageNumber;
    }

    /**
     * set 当前所在页，默认为1
     *
     * @param pageNumber
     */
    public void setPageNumber(Long pageNumber) {
        this.pageNumber = pageNumber;
    }

    /**
     * get 页面大小，默认为20；取值范围[1, 100]
     *
     * @return
     */
    public Long getPageSize() {
        return pageSize;
    }

    /**
     * set 页面大小，默认为20；取值范围[1, 100]
     *
     * @param pageSize
     */
    public void setPageSize(Long pageSize) {
        this.pageSize = pageSize;
    }

    /**
     * get 服务码列表
filter name 为serviceCodes表示查询多个产品线的规则
     *
     * @return
     */
    public List<Filter> getFilters() {
        return filters;
    }

    /**
     * set 服务码列表
filter name 为serviceCodes表示查询多个产品线的规则
     *
     * @param filters
     */
    public void setFilters(List<Filter> filters) {
        this.filters = filters;
    }

    /**
     * get 要查询的地域，为空则查询所有的
     *
     * @return
     */
    public String getDatacenter() {
        return datacenter;
    }

    /**
     * set 要查询的地域，为空则查询所有的
     *
     * @param datacenter
     */
    public void setDatacenter(String datacenter) {
        this.datacenter = datacenter;
    }


    /**
     * set 当前所在页，默认为1
     *
     * @param pageNumber
     */
    public DescribeAlarmingRulesRequest pageNumber(Long pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }

    /**
     * set 页面大小，默认为20；取值范围[1, 100]
     *
     * @param pageSize
     */
    public DescribeAlarmingRulesRequest pageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }

    /**
     * set 服务码列表
filter name 为serviceCodes表示查询多个产品线的规则
     *
     * @param filters
     */
    public DescribeAlarmingRulesRequest filters(List<Filter> filters) {
        this.filters = filters;
        return this;
    }

    /**
     * set 要查询的地域，为空则查询所有的
     *
     * @param datacenter
     */
    public DescribeAlarmingRulesRequest datacenter(String datacenter) {
        this.datacenter = datacenter;
        return this;
    }


    /**
     * add item to 服务码列表
filter name 为serviceCodes表示查询多个产品线的规则
     *
     * @param filter
     */
    public void addFilter(Filter filter) {
        if (this.filters == null) {
            this.filters = new ArrayList<>();
        }
        this.filters.add(filter);
    }

}