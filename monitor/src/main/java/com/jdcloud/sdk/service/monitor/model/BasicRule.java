/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * 规则触发条件
 */
public class BasicRule  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 统计方法，必须与定义的metric一致，可选值列表：avg,sum,max,min
     * Required:true
     */
    @Required
    private String calculation;

    /**
     * 降采样函数
     */
    private String downSample;

    /**
     * 监控项唯一标识，可根据DescribeMetricsForCreateAlarm接口查询各产品线可用的监控项（创建规则时使用Metric字段）。格式：metric:downsample
     * Required:true
     */
    @Required
    private String metric;

    /**
     * noticeLevel
     */
    private NoticeLevel noticeLevel;

    /**
     * 报警比较符，只能为以下几种lte(&lt;&#x3D;),lt(&lt;),gt(&gt;),gte(&gt;&#x3D;),eq(&#x3D;&#x3D;),ne(!&#x3D;)
     * Required:true
     */
    @Required
    private String operation;

    /**
     * 查询指标的周期，单位为分钟,目前支持的取值：1,2，5，10,15，30，60
     * Required:true
     */
    @Required
    private Long period;

    /**
     * 报警阈值，目前只开放数值类型功能
     * Required:true
     */
    @Required
    private Double threshold;

    /**
     * 连续探测几次都满足阈值条件时报警，可选值:1,2,3,5,10,15,30,60
     * Required:true
     */
    @Required
    private Long times;


    /**
     * get 统计方法，必须与定义的metric一致，可选值列表：avg,sum,max,min
     *
     * @return
     */
    public String getCalculation() {
        return calculation;
    }

    /**
     * set 统计方法，必须与定义的metric一致，可选值列表：avg,sum,max,min
     *
     * @param calculation
     */
    public void setCalculation(String calculation) {
        this.calculation = calculation;
    }

    /**
     * get 降采样函数
     *
     * @return
     */
    public String getDownSample() {
        return downSample;
    }

    /**
     * set 降采样函数
     *
     * @param downSample
     */
    public void setDownSample(String downSample) {
        this.downSample = downSample;
    }

    /**
     * get 监控项唯一标识，可根据DescribeMetricsForCreateAlarm接口查询各产品线可用的监控项（创建规则时使用Metric字段）。格式：metric:downsample
     *
     * @return
     */
    public String getMetric() {
        return metric;
    }

    /**
     * set 监控项唯一标识，可根据DescribeMetricsForCreateAlarm接口查询各产品线可用的监控项（创建规则时使用Metric字段）。格式：metric:downsample
     *
     * @param metric
     */
    public void setMetric(String metric) {
        this.metric = metric;
    }

    /**
     * get noticeLevel
     *
     * @return
     */
    public NoticeLevel getNoticeLevel() {
        return noticeLevel;
    }

    /**
     * set noticeLevel
     *
     * @param noticeLevel
     */
    public void setNoticeLevel(NoticeLevel noticeLevel) {
        this.noticeLevel = noticeLevel;
    }

    /**
     * get 报警比较符，只能为以下几种lte(&lt;&#x3D;),lt(&lt;),gt(&gt;),gte(&gt;&#x3D;),eq(&#x3D;&#x3D;),ne(!&#x3D;)
     *
     * @return
     */
    public String getOperation() {
        return operation;
    }

    /**
     * set 报警比较符，只能为以下几种lte(&lt;&#x3D;),lt(&lt;),gt(&gt;),gte(&gt;&#x3D;),eq(&#x3D;&#x3D;),ne(!&#x3D;)
     *
     * @param operation
     */
    public void setOperation(String operation) {
        this.operation = operation;
    }

    /**
     * get 查询指标的周期，单位为分钟,目前支持的取值：1,2，5，10,15，30，60
     *
     * @return
     */
    public Long getPeriod() {
        return period;
    }

    /**
     * set 查询指标的周期，单位为分钟,目前支持的取值：1,2，5，10,15，30，60
     *
     * @param period
     */
    public void setPeriod(Long period) {
        this.period = period;
    }

    /**
     * get 报警阈值，目前只开放数值类型功能
     *
     * @return
     */
    public Double getThreshold() {
        return threshold;
    }

    /**
     * set 报警阈值，目前只开放数值类型功能
     *
     * @param threshold
     */
    public void setThreshold(Double threshold) {
        this.threshold = threshold;
    }

    /**
     * get 连续探测几次都满足阈值条件时报警，可选值:1,2,3,5,10,15,30,60
     *
     * @return
     */
    public Long getTimes() {
        return times;
    }

    /**
     * set 连续探测几次都满足阈值条件时报警，可选值:1,2,3,5,10,15,30,60
     *
     * @param times
     */
    public void setTimes(Long times) {
        this.times = times;
    }


    /**
     * set 统计方法，必须与定义的metric一致，可选值列表：avg,sum,max,min
     *
     * @param calculation
     */
    public BasicRule calculation(String calculation) {
        this.calculation = calculation;
        return this;
    }

    /**
     * set 降采样函数
     *
     * @param downSample
     */
    public BasicRule downSample(String downSample) {
        this.downSample = downSample;
        return this;
    }

    /**
     * set 监控项唯一标识，可根据DescribeMetricsForCreateAlarm接口查询各产品线可用的监控项（创建规则时使用Metric字段）。格式：metric:downsample
     *
     * @param metric
     */
    public BasicRule metric(String metric) {
        this.metric = metric;
        return this;
    }

    /**
     * set noticeLevel
     *
     * @param noticeLevel
     */
    public BasicRule noticeLevel(NoticeLevel noticeLevel) {
        this.noticeLevel = noticeLevel;
        return this;
    }

    /**
     * set 报警比较符，只能为以下几种lte(&lt;&#x3D;),lt(&lt;),gt(&gt;),gte(&gt;&#x3D;),eq(&#x3D;&#x3D;),ne(!&#x3D;)
     *
     * @param operation
     */
    public BasicRule operation(String operation) {
        this.operation = operation;
        return this;
    }

    /**
     * set 查询指标的周期，单位为分钟,目前支持的取值：1,2，5，10,15，30，60
     *
     * @param period
     */
    public BasicRule period(Long period) {
        this.period = period;
        return this;
    }

    /**
     * set 报警阈值，目前只开放数值类型功能
     *
     * @param threshold
     */
    public BasicRule threshold(Double threshold) {
        this.threshold = threshold;
        return this;
    }

    /**
     * set 连续探测几次都满足阈值条件时报警，可选值:1,2,3,5,10,15,30,60
     *
     * @param times
     */
    public BasicRule times(Long times) {
        this.times = times;
        return this;
    }


}