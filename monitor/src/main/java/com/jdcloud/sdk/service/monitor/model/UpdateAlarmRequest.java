/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 云监控规则相关接口
 * 云监控规则相关接口，提供创建、查询、修改、删除监控规则等功能
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.monitor.model.BaseContact;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.monitor.model.BaseRule;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 修改已创建的报警规则
 */
public class UpdateAlarmRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 通知联系人
     */
    private List<BaseContact> contacts;

    /**
     * rule
     * Required:true
     */
    @Required
    private BaseRule rule;

    /**
     * 回调content 注：仅webHookUrl和webHookContent均不为空时，才会创建webHook
     */
    private String webHookContent;

    /**
     * webHook协议
     */
    private String webHookProtocol;

    /**
     * 回调secret，用户请求签名，防伪造
     */
    private String webHookSecret;

    /**
     * 回调url
     */
    private String webHookUrl;

    /**
     * 地域 Id
     * Required:true
     */
    @Required
    private String regionId;

    /**
     * 规则id
     * Required:true
     */
    @Required
    private String alarmId;


    /**
     * get 通知联系人
     *
     * @return
     */
    public List<BaseContact> getContacts() {
        return contacts;
    }

    /**
     * set 通知联系人
     *
     * @param contacts
     */
    public void setContacts(List<BaseContact> contacts) {
        this.contacts = contacts;
    }

    /**
     * get rule
     *
     * @return
     */
    public BaseRule getRule() {
        return rule;
    }

    /**
     * set rule
     *
     * @param rule
     */
    public void setRule(BaseRule rule) {
        this.rule = rule;
    }

    /**
     * get 回调content 注：仅webHookUrl和webHookContent均不为空时，才会创建webHook
     *
     * @return
     */
    public String getWebHookContent() {
        return webHookContent;
    }

    /**
     * set 回调content 注：仅webHookUrl和webHookContent均不为空时，才会创建webHook
     *
     * @param webHookContent
     */
    public void setWebHookContent(String webHookContent) {
        this.webHookContent = webHookContent;
    }

    /**
     * get webHook协议
     *
     * @return
     */
    public String getWebHookProtocol() {
        return webHookProtocol;
    }

    /**
     * set webHook协议
     *
     * @param webHookProtocol
     */
    public void setWebHookProtocol(String webHookProtocol) {
        this.webHookProtocol = webHookProtocol;
    }

    /**
     * get 回调secret，用户请求签名，防伪造
     *
     * @return
     */
    public String getWebHookSecret() {
        return webHookSecret;
    }

    /**
     * set 回调secret，用户请求签名，防伪造
     *
     * @param webHookSecret
     */
    public void setWebHookSecret(String webHookSecret) {
        this.webHookSecret = webHookSecret;
    }

    /**
     * get 回调url
     *
     * @return
     */
    public String getWebHookUrl() {
        return webHookUrl;
    }

    /**
     * set 回调url
     *
     * @param webHookUrl
     */
    public void setWebHookUrl(String webHookUrl) {
        this.webHookUrl = webHookUrl;
    }

    /**
     * get 地域 Id
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域 Id
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }

    /**
     * get 规则id
     *
     * @return
     */
    public String getAlarmId() {
        return alarmId;
    }

    /**
     * set 规则id
     *
     * @param alarmId
     */
    public void setAlarmId(String alarmId) {
        this.alarmId = alarmId;
    }


    /**
     * set 通知联系人
     *
     * @param contacts
     */
    public UpdateAlarmRequest contacts(List<BaseContact> contacts) {
        this.contacts = contacts;
        return this;
    }

    /**
     * set rule
     *
     * @param rule
     */
    public UpdateAlarmRequest rule(BaseRule rule) {
        this.rule = rule;
        return this;
    }

    /**
     * set 回调content 注：仅webHookUrl和webHookContent均不为空时，才会创建webHook
     *
     * @param webHookContent
     */
    public UpdateAlarmRequest webHookContent(String webHookContent) {
        this.webHookContent = webHookContent;
        return this;
    }

    /**
     * set webHook协议
     *
     * @param webHookProtocol
     */
    public UpdateAlarmRequest webHookProtocol(String webHookProtocol) {
        this.webHookProtocol = webHookProtocol;
        return this;
    }

    /**
     * set 回调secret，用户请求签名，防伪造
     *
     * @param webHookSecret
     */
    public UpdateAlarmRequest webHookSecret(String webHookSecret) {
        this.webHookSecret = webHookSecret;
        return this;
    }

    /**
     * set 回调url
     *
     * @param webHookUrl
     */
    public UpdateAlarmRequest webHookUrl(String webHookUrl) {
        this.webHookUrl = webHookUrl;
        return this;
    }

    /**
     * set 地域 Id
     *
     * @param regionId
     */
    public UpdateAlarmRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }

    /**
     * set 规则id
     *
     * @param alarmId
     */
    public UpdateAlarmRequest alarmId(String alarmId) {
        this.alarmId = alarmId;
        return this;
    }


    /**
     * add item to 通知联系人
     *
     * @param contact
     */
    public void addContact(BaseContact contact) {
        if (this.contacts == null) {
            this.contacts = new ArrayList<>();
        }
        this.contacts.add(contact);
    }

}