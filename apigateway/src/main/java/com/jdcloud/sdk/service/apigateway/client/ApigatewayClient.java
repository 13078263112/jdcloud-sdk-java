/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * API网关
 * API网关相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.apigateway.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.apigateway.model.CreateUserDomainRequest;
import com.jdcloud.sdk.service.apigateway.model.CreateUserDomainResponse;
import com.jdcloud.sdk.service.apigateway.client.CreateUserDomainExecutor;
import com.jdcloud.sdk.service.apigateway.model.CheckGroupNameExistRequest;
import com.jdcloud.sdk.service.apigateway.model.CheckGroupNameExistResponse;
import com.jdcloud.sdk.service.apigateway.client.CheckGroupNameExistExecutor;
import com.jdcloud.sdk.service.apigateway.model.DeleteAccessKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.DeleteAccessKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.DeleteAccessKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.DeleteApiByNameRequest;
import com.jdcloud.sdk.service.apigateway.model.DeleteApiByNameResponse;
import com.jdcloud.sdk.service.apigateway.client.DeleteApiByNameExecutor;
import com.jdcloud.sdk.service.apigateway.model.DescribeIsDeployApiGroupsRequest;
import com.jdcloud.sdk.service.apigateway.model.DescribeIsDeployApiGroupsResponse;
import com.jdcloud.sdk.service.apigateway.client.DescribeIsDeployApiGroupsExecutor;
import com.jdcloud.sdk.service.apigateway.model.DeleteSubscriptionKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.DeleteSubscriptionKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.DeleteSubscriptionKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.BindGroupKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.BindGroupKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.BindGroupKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.CreateApisRequest;
import com.jdcloud.sdk.service.apigateway.model.CreateApisResponse;
import com.jdcloud.sdk.service.apigateway.client.CreateApisExecutor;
import com.jdcloud.sdk.service.apigateway.model.UpdateRateLimitPolicyRequest;
import com.jdcloud.sdk.service.apigateway.model.UpdateRateLimitPolicyResponse;
import com.jdcloud.sdk.service.apigateway.client.UpdateRateLimitPolicyExecutor;
import com.jdcloud.sdk.service.apigateway.model.CheckAuthExistRequest;
import com.jdcloud.sdk.service.apigateway.model.CheckAuthExistResponse;
import com.jdcloud.sdk.service.apigateway.client.CheckAuthExistExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryAccessKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryAccessKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryAccessKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.OfflineRequest;
import com.jdcloud.sdk.service.apigateway.model.OfflineResponse;
import com.jdcloud.sdk.service.apigateway.client.OfflineExecutor;
import com.jdcloud.sdk.service.apigateway.model.BindGroupAuthRequest;
import com.jdcloud.sdk.service.apigateway.model.BindGroupAuthResponse;
import com.jdcloud.sdk.service.apigateway.client.BindGroupAuthExecutor;
import com.jdcloud.sdk.service.apigateway.model.GetRevisionIdsRequest;
import com.jdcloud.sdk.service.apigateway.model.GetRevisionIdsResponse;
import com.jdcloud.sdk.service.apigateway.client.GetRevisionIdsExecutor;
import com.jdcloud.sdk.service.apigateway.model.CheckKeyExistRequest;
import com.jdcloud.sdk.service.apigateway.model.CheckKeyExistResponse;
import com.jdcloud.sdk.service.apigateway.client.CheckKeyExistExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryAccessAuthsRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryAccessAuthsResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryAccessAuthsExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryRevisionRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryRevisionResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryRevisionExecutor;
import com.jdcloud.sdk.service.apigateway.model.CreateBackendConfigRequest;
import com.jdcloud.sdk.service.apigateway.model.CreateBackendConfigResponse;
import com.jdcloud.sdk.service.apigateway.client.CreateBackendConfigExecutor;
import com.jdcloud.sdk.service.apigateway.model.QuerySubscriptionKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.QuerySubscriptionKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.QuerySubscriptionKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.ModifyApiGroupAttributeRequest;
import com.jdcloud.sdk.service.apigateway.model.ModifyApiGroupAttributeResponse;
import com.jdcloud.sdk.service.apigateway.client.ModifyApiGroupAttributeExecutor;
import com.jdcloud.sdk.service.apigateway.model.CheckPinRequest;
import com.jdcloud.sdk.service.apigateway.model.CheckPinResponse;
import com.jdcloud.sdk.service.apigateway.client.CheckPinExecutor;
import com.jdcloud.sdk.service.apigateway.model.CheckPolicyNameRequest;
import com.jdcloud.sdk.service.apigateway.model.CheckPolicyNameResponse;
import com.jdcloud.sdk.service.apigateway.client.CheckPolicyNameExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryRateLimitPolicyRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryRateLimitPolicyResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryRateLimitPolicyExecutor;
import com.jdcloud.sdk.service.apigateway.model.UpdateApiRequest;
import com.jdcloud.sdk.service.apigateway.model.UpdateApiResponse;
import com.jdcloud.sdk.service.apigateway.client.UpdateApiExecutor;
import com.jdcloud.sdk.service.apigateway.model.CreateApiGroupRequest;
import com.jdcloud.sdk.service.apigateway.model.CreateApiGroupResponse;
import com.jdcloud.sdk.service.apigateway.client.CreateApiGroupExecutor;
import com.jdcloud.sdk.service.apigateway.model.DescribeRevisionsRequest;
import com.jdcloud.sdk.service.apigateway.model.DescribeRevisionsResponse;
import com.jdcloud.sdk.service.apigateway.client.DescribeRevisionsExecutor;
import com.jdcloud.sdk.service.apigateway.model.UpdateAccessKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.UpdateAccessKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.UpdateAccessKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryAccessAuthRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryAccessAuthResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryAccessAuthExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryKeyGroupListRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryKeyGroupListResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryKeyGroupListExecutor;
import com.jdcloud.sdk.service.apigateway.model.AuthorizedApiGroupListRequest;
import com.jdcloud.sdk.service.apigateway.model.AuthorizedApiGroupListResponse;
import com.jdcloud.sdk.service.apigateway.client.AuthorizedApiGroupListExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryUserDomainsRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryUserDomainsResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryUserDomainsExecutor;
import com.jdcloud.sdk.service.apigateway.model.QuerySubscriptionKeysRequest;
import com.jdcloud.sdk.service.apigateway.model.QuerySubscriptionKeysResponse;
import com.jdcloud.sdk.service.apigateway.client.QuerySubscriptionKeysExecutor;
import com.jdcloud.sdk.service.apigateway.model.UpdateSubscriptionKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.UpdateSubscriptionKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.UpdateSubscriptionKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryBindGroupKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryBindGroupKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryBindGroupKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.ModifyRevisionRequest;
import com.jdcloud.sdk.service.apigateway.model.ModifyRevisionResponse;
import com.jdcloud.sdk.service.apigateway.client.ModifyRevisionExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryBindGroupPolicyRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryBindGroupPolicyResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryBindGroupPolicyExecutor;
import com.jdcloud.sdk.service.apigateway.model.DeleteApiRequest;
import com.jdcloud.sdk.service.apigateway.model.DeleteApiResponse;
import com.jdcloud.sdk.service.apigateway.client.DeleteApiExecutor;
import com.jdcloud.sdk.service.apigateway.model.DescribeDeploymentRequest;
import com.jdcloud.sdk.service.apigateway.model.DescribeDeploymentResponse;
import com.jdcloud.sdk.service.apigateway.client.DescribeDeploymentExecutor;
import com.jdcloud.sdk.service.apigateway.model.DescribeBackendConfigRequest;
import com.jdcloud.sdk.service.apigateway.model.DescribeBackendConfigResponse;
import com.jdcloud.sdk.service.apigateway.client.DescribeBackendConfigExecutor;
import com.jdcloud.sdk.service.apigateway.model.CreateAccessAuthRequest;
import com.jdcloud.sdk.service.apigateway.model.CreateAccessAuthResponse;
import com.jdcloud.sdk.service.apigateway.client.CreateAccessAuthExecutor;
import com.jdcloud.sdk.service.apigateway.model.BatchOfflineRequest;
import com.jdcloud.sdk.service.apigateway.model.BatchOfflineResponse;
import com.jdcloud.sdk.service.apigateway.client.BatchOfflineExecutor;
import com.jdcloud.sdk.service.apigateway.model.DescribeApiGroupRequest;
import com.jdcloud.sdk.service.apigateway.model.DescribeApiGroupResponse;
import com.jdcloud.sdk.service.apigateway.client.DescribeApiGroupExecutor;
import com.jdcloud.sdk.service.apigateway.model.DescribeBackendConfigsRequest;
import com.jdcloud.sdk.service.apigateway.model.DescribeBackendConfigsResponse;
import com.jdcloud.sdk.service.apigateway.client.DescribeBackendConfigsExecutor;
import com.jdcloud.sdk.service.apigateway.model.CreateAccessKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.CreateAccessKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.CreateAccessKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.DeleteAccessAuthRequest;
import com.jdcloud.sdk.service.apigateway.model.DeleteAccessAuthResponse;
import com.jdcloud.sdk.service.apigateway.client.DeleteAccessAuthExecutor;
import com.jdcloud.sdk.service.apigateway.model.UpdateKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.UpdateKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.UpdateKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.UpdateAccessAuthRequest;
import com.jdcloud.sdk.service.apigateway.model.UpdateAccessAuthResponse;
import com.jdcloud.sdk.service.apigateway.client.UpdateAccessAuthExecutor;
import com.jdcloud.sdk.service.apigateway.model.CheckRevisionExistRequest;
import com.jdcloud.sdk.service.apigateway.model.CheckRevisionExistResponse;
import com.jdcloud.sdk.service.apigateway.client.CheckRevisionExistExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryKeyInfoRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryKeyInfoResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryKeyInfoExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryUcAccessKeysRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryUcAccessKeysResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryUcAccessKeysExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryKeysRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryKeysResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryKeysExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryPolicyGroupListRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryPolicyGroupListResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryPolicyGroupListExecutor;
import com.jdcloud.sdk.service.apigateway.model.UpdateBackendConfigRequest;
import com.jdcloud.sdk.service.apigateway.model.UpdateBackendConfigResponse;
import com.jdcloud.sdk.service.apigateway.client.UpdateBackendConfigExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryBindGroupAuthRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryBindGroupAuthResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryBindGroupAuthExecutor;
import com.jdcloud.sdk.service.apigateway.model.DescribeApiGroupsRequest;
import com.jdcloud.sdk.service.apigateway.model.DescribeApiGroupsResponse;
import com.jdcloud.sdk.service.apigateway.client.DescribeApiGroupsExecutor;
import com.jdcloud.sdk.service.apigateway.model.CreateKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.CreateKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.CreateKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.CreateRateLimitPolicyRequest;
import com.jdcloud.sdk.service.apigateway.model.CreateRateLimitPolicyResponse;
import com.jdcloud.sdk.service.apigateway.client.CreateRateLimitPolicyExecutor;
import com.jdcloud.sdk.service.apigateway.model.CreateRevisionRequest;
import com.jdcloud.sdk.service.apigateway.model.CreateRevisionResponse;
import com.jdcloud.sdk.service.apigateway.client.CreateRevisionExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryAuthGroupListRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryAuthGroupListResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryAuthGroupListExecutor;
import com.jdcloud.sdk.service.apigateway.model.DeleteRateLimitPolicyRequest;
import com.jdcloud.sdk.service.apigateway.model.DeleteRateLimitPolicyResponse;
import com.jdcloud.sdk.service.apigateway.client.DeleteRateLimitPolicyExecutor;
import com.jdcloud.sdk.service.apigateway.model.BindGroupPolicyRequest;
import com.jdcloud.sdk.service.apigateway.model.BindGroupPolicyResponse;
import com.jdcloud.sdk.service.apigateway.client.BindGroupPolicyExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryAccessKeysRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryAccessKeysResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryAccessKeysExecutor;
import com.jdcloud.sdk.service.apigateway.model.DeployRequest;
import com.jdcloud.sdk.service.apigateway.model.DeployResponse;
import com.jdcloud.sdk.service.apigateway.client.DeployExecutor;
import com.jdcloud.sdk.service.apigateway.model.UpdateApiByNameRequest;
import com.jdcloud.sdk.service.apigateway.model.UpdateApiByNameResponse;
import com.jdcloud.sdk.service.apigateway.client.UpdateApiByNameExecutor;
import com.jdcloud.sdk.service.apigateway.model.CreateSubscriptionKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.CreateSubscriptionKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.CreateSubscriptionKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.DeleteUserDomainRequest;
import com.jdcloud.sdk.service.apigateway.model.DeleteUserDomainResponse;
import com.jdcloud.sdk.service.apigateway.client.DeleteUserDomainExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryRateLimitPoliciesRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryRateLimitPoliciesResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryRateLimitPoliciesExecutor;
import com.jdcloud.sdk.service.apigateway.model.DescribeDeploymentsRequest;
import com.jdcloud.sdk.service.apigateway.model.DescribeDeploymentsResponse;
import com.jdcloud.sdk.service.apigateway.client.DescribeDeploymentsExecutor;
import com.jdcloud.sdk.service.apigateway.model.DeleteRevisionRequest;
import com.jdcloud.sdk.service.apigateway.model.DeleteRevisionResponse;
import com.jdcloud.sdk.service.apigateway.client.DeleteRevisionExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryApiRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryApiResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryApiExecutor;
import com.jdcloud.sdk.service.apigateway.model.CheckApiNameExistRequest;
import com.jdcloud.sdk.service.apigateway.model.CheckApiNameExistResponse;
import com.jdcloud.sdk.service.apigateway.client.CheckApiNameExistExecutor;
import com.jdcloud.sdk.service.apigateway.model.QueryApisRequest;
import com.jdcloud.sdk.service.apigateway.model.QueryApisResponse;
import com.jdcloud.sdk.service.apigateway.client.QueryApisExecutor;
import com.jdcloud.sdk.service.apigateway.model.ResetKeyRequest;
import com.jdcloud.sdk.service.apigateway.model.ResetKeyResponse;
import com.jdcloud.sdk.service.apigateway.client.ResetKeyExecutor;
import com.jdcloud.sdk.service.apigateway.model.DeleteBackendConfigRequest;
import com.jdcloud.sdk.service.apigateway.model.DeleteBackendConfigResponse;
import com.jdcloud.sdk.service.apigateway.client.DeleteBackendConfigExecutor;
import com.jdcloud.sdk.service.apigateway.model.DeleteApiGroupRequest;
import com.jdcloud.sdk.service.apigateway.model.DeleteApiGroupResponse;
import com.jdcloud.sdk.service.apigateway.client.DeleteApiGroupExecutor;

/**
 * apigatewayClient
 */
public class ApigatewayClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.0";
    public final static String DefaultEndpoint = "apigateway.jdcloud-api.com";
    public final static String ServiceName = "apigateway";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private ApigatewayClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 添加用户域名
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateUserDomainResponse createUserDomain(CreateUserDomainRequest request) throws JdcloudSdkException {
        return new CreateUserDomainExecutor().client(this).execute(request);
    }

    /**
     * 检查分组名称是否重复,返回重复的apiGroupId,如果没有返回空
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckGroupNameExistResponse checkGroupNameExist(CheckGroupNameExistRequest request) throws JdcloudSdkException {
        return new CheckGroupNameExistExecutor().client(this).execute(request);
    }

    /**
     * 删除密钥
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteAccessKeyResponse deleteAccessKey(DeleteAccessKeyRequest request) throws JdcloudSdkException {
        return new DeleteAccessKeyExecutor().client(this).execute(request);
    }

    /**
     * 删除api
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteApiByNameResponse deleteApiByName(DeleteApiByNameRequest request) throws JdcloudSdkException {
        return new DeleteApiByNameExecutor().client(this).execute(request);
    }

    /**
     * 查询分组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeIsDeployApiGroupsResponse describeIsDeployApiGroups(DescribeIsDeployApiGroupsRequest request) throws JdcloudSdkException {
        return new DescribeIsDeployApiGroupsExecutor().client(this).execute(request);
    }

    /**
     * 删除密钥
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteSubscriptionKeyResponse deleteSubscriptionKey(DeleteSubscriptionKeyRequest request) throws JdcloudSdkException {
        return new DeleteSubscriptionKeyExecutor().client(this).execute(request);
    }

    /**
     * 绑定分组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public BindGroupKeyResponse bindGroupKey(BindGroupKeyRequest request) throws JdcloudSdkException {
        return new BindGroupKeyExecutor().client(this).execute(request);
    }

    /**
     * 创建api
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateApisResponse createApis(CreateApisRequest request) throws JdcloudSdkException {
        return new CreateApisExecutor().client(this).execute(request);
    }

    /**
     * 修改流控策略
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateRateLimitPolicyResponse updateRateLimitPolicy(UpdateRateLimitPolicyRequest request) throws JdcloudSdkException {
        return new UpdateRateLimitPolicyExecutor().client(this).execute(request);
    }

    /**
     * 检查accessAuth是否重复
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckAuthExistResponse checkAuthExist(CheckAuthExistRequest request) throws JdcloudSdkException {
        return new CheckAuthExistExecutor().client(this).execute(request);
    }

    /**
     * 查询单个密钥
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryAccessKeyResponse queryAccessKey(QueryAccessKeyRequest request) throws JdcloudSdkException {
        return new QueryAccessKeyExecutor().client(this).execute(request);
    }

    /**
     * 下线
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OfflineResponse offline(OfflineRequest request) throws JdcloudSdkException {
        return new OfflineExecutor().client(this).execute(request);
    }

    /**
     * 绑定分组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public BindGroupAuthResponse bindGroupAuth(BindGroupAuthRequest request) throws JdcloudSdkException {
        return new BindGroupAuthExecutor().client(this).execute(request);
    }

    /**
     * 查询分组内全部修订版本号
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetRevisionIdsResponse getRevisionIds(GetRevisionIdsRequest request) throws JdcloudSdkException {
        return new GetRevisionIdsExecutor().client(this).execute(request);
    }

    /**
     * 检查AccessKey是否重复
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckKeyExistResponse checkKeyExist(CheckKeyExistRequest request) throws JdcloudSdkException {
        return new CheckKeyExistExecutor().client(this).execute(request);
    }

    /**
     * 查询访问授权列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryAccessAuthsResponse queryAccessAuths(QueryAccessAuthsRequest request) throws JdcloudSdkException {
        return new QueryAccessAuthsExecutor().client(this).execute(request);
    }

    /**
     * 查询某版本对应的api
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryRevisionResponse queryRevision(QueryRevisionRequest request) throws JdcloudSdkException {
        return new QueryRevisionExecutor().client(this).execute(request);
    }

    /**
     * 开通后端配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateBackendConfigResponse createBackendConfig(CreateBackendConfigRequest request) throws JdcloudSdkException {
        return new CreateBackendConfigExecutor().client(this).execute(request);
    }

    /**
     * 查询单个密钥
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QuerySubscriptionKeyResponse querySubscriptionKey(QuerySubscriptionKeyRequest request) throws JdcloudSdkException {
        return new QuerySubscriptionKeyExecutor().client(this).execute(request);
    }

    /**
     * 修改API分组信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyApiGroupAttributeResponse modifyApiGroupAttribute(ModifyApiGroupAttributeRequest request) throws JdcloudSdkException {
        return new ModifyApiGroupAttributeExecutor().client(this).execute(request);
    }

    /**
     * 校验pin是否存在
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckPinResponse checkPin(CheckPinRequest request) throws JdcloudSdkException {
        return new CheckPinExecutor().client(this).execute(request);
    }

    /**
     * 检查策略名是否重复
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckPolicyNameResponse checkPolicyName(CheckPolicyNameRequest request) throws JdcloudSdkException {
        return new CheckPolicyNameExecutor().client(this).execute(request);
    }

    /**
     * 查询单个流控策略
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryRateLimitPolicyResponse queryRateLimitPolicy(QueryRateLimitPolicyRequest request) throws JdcloudSdkException {
        return new QueryRateLimitPolicyExecutor().client(this).execute(request);
    }

    /**
     * 修改api
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateApiResponse updateApi(UpdateApiRequest request) throws JdcloudSdkException {
        return new UpdateApiExecutor().client(this).execute(request);
    }

    /**
     * 创建API分组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateApiGroupResponse createApiGroup(CreateApiGroupRequest request) throws JdcloudSdkException {
        return new CreateApiGroupExecutor().client(this).execute(request);
    }

    /**
     * 查询修订版本列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeRevisionsResponse describeRevisions(DescribeRevisionsRequest request) throws JdcloudSdkException {
        return new DescribeRevisionsExecutor().client(this).execute(request);
    }

    /**
     * 更新密钥
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateAccessKeyResponse updateAccessKey(UpdateAccessKeyRequest request) throws JdcloudSdkException {
        return new UpdateAccessKeyExecutor().client(this).execute(request);
    }

    /**
     * 查询单个访问授权
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryAccessAuthResponse queryAccessAuth(QueryAccessAuthRequest request) throws JdcloudSdkException {
        return new QueryAccessAuthExecutor().client(this).execute(request);
    }

    /**
     * 查询可绑定部署列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryKeyGroupListResponse queryKeyGroupList(QueryKeyGroupListRequest request) throws JdcloudSdkException {
        return new QueryKeyGroupListExecutor().client(this).execute(request);
    }

    /**
     * 查询所有已授权api分组列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AuthorizedApiGroupListResponse authorizedApiGroupList(AuthorizedApiGroupListRequest request) throws JdcloudSdkException {
        return new AuthorizedApiGroupListExecutor().client(this).execute(request);
    }

    /**
     * 查询domian列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryUserDomainsResponse queryUserDomains(QueryUserDomainsRequest request) throws JdcloudSdkException {
        return new QueryUserDomainsExecutor().client(this).execute(request);
    }

    /**
     * 查询密钥列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QuerySubscriptionKeysResponse querySubscriptionKeys(QuerySubscriptionKeysRequest request) throws JdcloudSdkException {
        return new QuerySubscriptionKeysExecutor().client(this).execute(request);
    }

    /**
     * 更新密钥
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateSubscriptionKeyResponse updateSubscriptionKey(UpdateSubscriptionKeyRequest request) throws JdcloudSdkException {
        return new UpdateSubscriptionKeyExecutor().client(this).execute(request);
    }

    /**
     * 查询绑定分组详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryBindGroupKeyResponse queryBindGroupKey(QueryBindGroupKeyRequest request) throws JdcloudSdkException {
        return new QueryBindGroupKeyExecutor().client(this).execute(request);
    }

    /**
     * 修改单个修订版本
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyRevisionResponse modifyRevision(ModifyRevisionRequest request) throws JdcloudSdkException {
        return new ModifyRevisionExecutor().client(this).execute(request);
    }

    /**
     * 查询绑定部署详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryBindGroupPolicyResponse queryBindGroupPolicy(QueryBindGroupPolicyRequest request) throws JdcloudSdkException {
        return new QueryBindGroupPolicyExecutor().client(this).execute(request);
    }

    /**
     * 删除api
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteApiResponse deleteApi(DeleteApiRequest request) throws JdcloudSdkException {
        return new DeleteApiExecutor().client(this).execute(request);
    }

    /**
     * 查询该版本的部署详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDeploymentResponse describeDeployment(DescribeDeploymentRequest request) throws JdcloudSdkException {
        return new DescribeDeploymentExecutor().client(this).execute(request);
    }

    /**
     * 查询backendConfig
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBackendConfigResponse describeBackendConfig(DescribeBackendConfigRequest request) throws JdcloudSdkException {
        return new DescribeBackendConfigExecutor().client(this).execute(request);
    }

    /**
     * 创建访问授权
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateAccessAuthResponse createAccessAuth(CreateAccessAuthRequest request) throws JdcloudSdkException {
        return new CreateAccessAuthExecutor().client(this).execute(request);
    }

    /**
     * 批量下线
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public BatchOfflineResponse batchOffline(BatchOfflineRequest request) throws JdcloudSdkException {
        return new BatchOfflineExecutor().client(this).execute(request);
    }

    /**
     * 查询API分组详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeApiGroupResponse describeApiGroup(DescribeApiGroupRequest request) throws JdcloudSdkException {
        return new DescribeApiGroupExecutor().client(this).execute(request);
    }

    /**
     * 查询指定环境下的所有后端配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBackendConfigsResponse describeBackendConfigs(DescribeBackendConfigsRequest request) throws JdcloudSdkException {
        return new DescribeBackendConfigsExecutor().client(this).execute(request);
    }

    /**
     * 创建密钥
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateAccessKeyResponse createAccessKey(CreateAccessKeyRequest request) throws JdcloudSdkException {
        return new CreateAccessKeyExecutor().client(this).execute(request);
    }

    /**
     * 删除访问授权
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteAccessAuthResponse deleteAccessAuth(DeleteAccessAuthRequest request) throws JdcloudSdkException {
        return new DeleteAccessAuthExecutor().client(this).execute(request);
    }

    /**
     * 修改key信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateKeyResponse updateKey(UpdateKeyRequest request) throws JdcloudSdkException {
        return new UpdateKeyExecutor().client(this).execute(request);
    }

    /**
     * 更新访问授权
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateAccessAuthResponse updateAccessAuth(UpdateAccessAuthRequest request) throws JdcloudSdkException {
        return new UpdateAccessAuthExecutor().client(this).execute(request);
    }

    /**
     * 检查版本号是否重复,返回重复的版本号,如果没有返回空
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckRevisionExistResponse checkRevisionExist(CheckRevisionExistRequest request) throws JdcloudSdkException {
        return new CheckRevisionExistExecutor().client(this).execute(request);
    }

    /**
     * 查询key详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryKeyInfoResponse queryKeyInfo(QueryKeyInfoRequest request) throws JdcloudSdkException {
        return new QueryKeyInfoExecutor().client(this).execute(request);
    }

    /**
     * 查询密钥列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryUcAccessKeysResponse queryUcAccessKeys(QueryUcAccessKeysRequest request) throws JdcloudSdkException {
        return new QueryUcAccessKeysExecutor().client(this).execute(request);
    }

    /**
     * 查询key列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryKeysResponse queryKeys(QueryKeysRequest request) throws JdcloudSdkException {
        return new QueryKeysExecutor().client(this).execute(request);
    }

    /**
     * 查询可绑定部署列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryPolicyGroupListResponse queryPolicyGroupList(QueryPolicyGroupListRequest request) throws JdcloudSdkException {
        return new QueryPolicyGroupListExecutor().client(this).execute(request);
    }

    /**
     * 修改后端配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateBackendConfigResponse updateBackendConfig(UpdateBackendConfigRequest request) throws JdcloudSdkException {
        return new UpdateBackendConfigExecutor().client(this).execute(request);
    }

    /**
     * 查询已绑定详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryBindGroupAuthResponse queryBindGroupAuth(QueryBindGroupAuthRequest request) throws JdcloudSdkException {
        return new QueryBindGroupAuthExecutor().client(this).execute(request);
    }

    /**
     * 查询分组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeApiGroupsResponse describeApiGroups(DescribeApiGroupsRequest request) throws JdcloudSdkException {
        return new DescribeApiGroupsExecutor().client(this).execute(request);
    }

    /**
     * 创建key
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateKeyResponse createKey(CreateKeyRequest request) throws JdcloudSdkException {
        return new CreateKeyExecutor().client(this).execute(request);
    }

    /**
     * 创建流控策略
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateRateLimitPolicyResponse createRateLimitPolicy(CreateRateLimitPolicyRequest request) throws JdcloudSdkException {
        return new CreateRateLimitPolicyExecutor().client(this).execute(request);
    }

    /**
     * 创建修订版本
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateRevisionResponse createRevision(CreateRevisionRequest request) throws JdcloudSdkException {
        return new CreateRevisionExecutor().client(this).execute(request);
    }

    /**
     * 查询可绑定部署列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryAuthGroupListResponse queryAuthGroupList(QueryAuthGroupListRequest request) throws JdcloudSdkException {
        return new QueryAuthGroupListExecutor().client(this).execute(request);
    }

    /**
     * 删除单个流控策略
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteRateLimitPolicyResponse deleteRateLimitPolicy(DeleteRateLimitPolicyRequest request) throws JdcloudSdkException {
        return new DeleteRateLimitPolicyExecutor().client(this).execute(request);
    }

    /**
     * 绑定
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public BindGroupPolicyResponse bindGroupPolicy(BindGroupPolicyRequest request) throws JdcloudSdkException {
        return new BindGroupPolicyExecutor().client(this).execute(request);
    }

    /**
     * 查询密钥列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryAccessKeysResponse queryAccessKeys(QueryAccessKeysRequest request) throws JdcloudSdkException {
        return new QueryAccessKeysExecutor().client(this).execute(request);
    }

    /**
     * 发布版本
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeployResponse deploy(DeployRequest request) throws JdcloudSdkException {
        return new DeployExecutor().client(this).execute(request);
    }

    /**
     * 修改api
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateApiByNameResponse updateApiByName(UpdateApiByNameRequest request) throws JdcloudSdkException {
        return new UpdateApiByNameExecutor().client(this).execute(request);
    }

    /**
     * 创建密钥
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateSubscriptionKeyResponse createSubscriptionKey(CreateSubscriptionKeyRequest request) throws JdcloudSdkException {
        return new CreateSubscriptionKeyExecutor().client(this).execute(request);
    }

    /**
     * 删除用户域名接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteUserDomainResponse deleteUserDomain(DeleteUserDomainRequest request) throws JdcloudSdkException {
        return new DeleteUserDomainExecutor().client(this).execute(request);
    }

    /**
     * 查询流控策略列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryRateLimitPoliciesResponse queryRateLimitPolicies(QueryRateLimitPoliciesRequest request) throws JdcloudSdkException {
        return new QueryRateLimitPoliciesExecutor().client(this).execute(request);
    }

    /**
     * 查询部署列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDeploymentsResponse describeDeployments(DescribeDeploymentsRequest request) throws JdcloudSdkException {
        return new DescribeDeploymentsExecutor().client(this).execute(request);
    }

    /**
     * 删除单个修订版本
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteRevisionResponse deleteRevision(DeleteRevisionRequest request) throws JdcloudSdkException {
        return new DeleteRevisionExecutor().client(this).execute(request);
    }

    /**
     * 查询单个api
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryApiResponse queryApi(QueryApiRequest request) throws JdcloudSdkException {
        return new QueryApiExecutor().client(this).execute(request);
    }

    /**
     * 创建API时，检查API名称是否重复,返回重复的apiId,如果没有返回空
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckApiNameExistResponse checkApiNameExist(CheckApiNameExistRequest request) throws JdcloudSdkException {
        return new CheckApiNameExistExecutor().client(this).execute(request);
    }

    /**
     * 查询api列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryApisResponse queryApis(QueryApisRequest request) throws JdcloudSdkException {
        return new QueryApisExecutor().client(this).execute(request);
    }

    /**
     * 重置key的acesskey和secretkey
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ResetKeyResponse resetKey(ResetKeyRequest request) throws JdcloudSdkException {
        return new ResetKeyExecutor().client(this).execute(request);
    }

    /**
     * 删除后端配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteBackendConfigResponse deleteBackendConfig(DeleteBackendConfigRequest request) throws JdcloudSdkException {
        return new DeleteBackendConfigExecutor().client(this).execute(request);
    }

    /**
     * 删除单个API分组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteApiGroupResponse deleteApiGroup(DeleteApiGroupRequest request) throws JdcloudSdkException {
        return new DeleteApiGroupExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public ApigatewayClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private ApigatewayClient apigatewayClient;

        public DefaultBuilder() {
            apigatewayClient = new ApigatewayClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            apigatewayClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            apigatewayClient.httpRequestConfig = config;
            return this;
        }

        public ApigatewayClient build() throws JdcloudSdkException {

            if (apigatewayClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                apigatewayClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (apigatewayClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("ApigatewayClient build error: jdcloud credentials provider not set");
                }
            }
            if (apigatewayClient.httpRequestConfig == null) {
                apigatewayClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (apigatewayClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("ApigatewayClient build error: http request config not set");
                }
            }
            return apigatewayClient;
        }

        public Builder environment(Environment environment) {
            apigatewayClient.environment = environment;
            return this;
        }
    }
}
