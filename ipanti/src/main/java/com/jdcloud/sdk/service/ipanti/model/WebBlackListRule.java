/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.ipanti.model;

import java.util.List;
import java.util.ArrayList;

/**
 * webBlackListRule
 */
public class WebBlackListRule  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 黑名单规则 Id
     */
    private String id;

    /**
     * 黑名单规则名称
     */
    private String name;

    /**
     * 匹配模式:&lt;br&gt;- 0: uri&lt;br&gt;- 1: ip&lt;br&gt;- 2: cookie&lt;br&gt;- 3: geo&lt;br&gt;- 4: header
     */
    private Integer mode;

    /**
     * 匹配 key.
- mode 为 cookie 时, 为 cookie 的 name
- mode 为 header 时, 为 header 的 key

     */
    private String key;

    /**
     * 匹配 value.
- mode 为 uri 时, 为要匹配的 uri
- mode 为 ip 时, 为引用的 ip 黑白名单 Id
- mode 为 cookie 时, 为 cookie 的 value
- mode 为 header 时, 为 header 的 value

     */
    private String value;

    /**
     * 匹配规则. mode 为 uri, cookie 和 header 时必传. 包含以下匹配规则
- 0: 完全匹配
- 1: 前缀匹配
- 2: 包含
- 3: 正则匹配
- 4: 后缀匹配

     */
    private Integer pattern;

    /**
     * 命中后处理动作.
- 0: 放行
- 1: CC 防护

     */
    private Integer action;

    /**
     * 命中后处理值, action 为 2 时 actionValue 为跳转路径
     */
    private String actionValue;

    /**
     * 规则状态.
- 0: 关闭
- 1: 开启

     */
    private Integer status;

    /**
     * geo 黑名单地域列表, mode 不为 geo 或未设置时此字段为空
     */
    private List<Geo> geoList;


    /**
     * get 黑名单规则 Id
     *
     * @return
     */
    public String getId() {
        return id;
    }

    /**
     * set 黑名单规则 Id
     *
     * @param id
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * get 黑名单规则名称
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 黑名单规则名称
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * get 匹配模式:&lt;br&gt;- 0: uri&lt;br&gt;- 1: ip&lt;br&gt;- 2: cookie&lt;br&gt;- 3: geo&lt;br&gt;- 4: header
     *
     * @return
     */
    public Integer getMode() {
        return mode;
    }

    /**
     * set 匹配模式:&lt;br&gt;- 0: uri&lt;br&gt;- 1: ip&lt;br&gt;- 2: cookie&lt;br&gt;- 3: geo&lt;br&gt;- 4: header
     *
     * @param mode
     */
    public void setMode(Integer mode) {
        this.mode = mode;
    }

    /**
     * get 匹配 key.
- mode 为 cookie 时, 为 cookie 的 name
- mode 为 header 时, 为 header 的 key

     *
     * @return
     */
    public String getKey() {
        return key;
    }

    /**
     * set 匹配 key.
- mode 为 cookie 时, 为 cookie 的 name
- mode 为 header 时, 为 header 的 key

     *
     * @param key
     */
    public void setKey(String key) {
        this.key = key;
    }

    /**
     * get 匹配 value.
- mode 为 uri 时, 为要匹配的 uri
- mode 为 ip 时, 为引用的 ip 黑白名单 Id
- mode 为 cookie 时, 为 cookie 的 value
- mode 为 header 时, 为 header 的 value

     *
     * @return
     */
    public String getValue() {
        return value;
    }

    /**
     * set 匹配 value.
- mode 为 uri 时, 为要匹配的 uri
- mode 为 ip 时, 为引用的 ip 黑白名单 Id
- mode 为 cookie 时, 为 cookie 的 value
- mode 为 header 时, 为 header 的 value

     *
     * @param value
     */
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * get 匹配规则. mode 为 uri, cookie 和 header 时必传. 包含以下匹配规则
- 0: 完全匹配
- 1: 前缀匹配
- 2: 包含
- 3: 正则匹配
- 4: 后缀匹配

     *
     * @return
     */
    public Integer getPattern() {
        return pattern;
    }

    /**
     * set 匹配规则. mode 为 uri, cookie 和 header 时必传. 包含以下匹配规则
- 0: 完全匹配
- 1: 前缀匹配
- 2: 包含
- 3: 正则匹配
- 4: 后缀匹配

     *
     * @param pattern
     */
    public void setPattern(Integer pattern) {
        this.pattern = pattern;
    }

    /**
     * get 命中后处理动作.
- 0: 放行
- 1: CC 防护

     *
     * @return
     */
    public Integer getAction() {
        return action;
    }

    /**
     * set 命中后处理动作.
- 0: 放行
- 1: CC 防护

     *
     * @param action
     */
    public void setAction(Integer action) {
        this.action = action;
    }

    /**
     * get 命中后处理值, action 为 2 时 actionValue 为跳转路径
     *
     * @return
     */
    public String getActionValue() {
        return actionValue;
    }

    /**
     * set 命中后处理值, action 为 2 时 actionValue 为跳转路径
     *
     * @param actionValue
     */
    public void setActionValue(String actionValue) {
        this.actionValue = actionValue;
    }

    /**
     * get 规则状态.
- 0: 关闭
- 1: 开启

     *
     * @return
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * set 规则状态.
- 0: 关闭
- 1: 开启

     *
     * @param status
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * get geo 黑名单地域列表, mode 不为 geo 或未设置时此字段为空
     *
     * @return
     */
    public List<Geo> getGeoList() {
        return geoList;
    }

    /**
     * set geo 黑名单地域列表, mode 不为 geo 或未设置时此字段为空
     *
     * @param geoList
     */
    public void setGeoList(List<Geo> geoList) {
        this.geoList = geoList;
    }


    /**
     * set 黑名单规则 Id
     *
     * @param id
     */
    public WebBlackListRule id(String id) {
        this.id = id;
        return this;
    }

    /**
     * set 黑名单规则名称
     *
     * @param name
     */
    public WebBlackListRule name(String name) {
        this.name = name;
        return this;
    }

    /**
     * set 匹配模式:&lt;br&gt;- 0: uri&lt;br&gt;- 1: ip&lt;br&gt;- 2: cookie&lt;br&gt;- 3: geo&lt;br&gt;- 4: header
     *
     * @param mode
     */
    public WebBlackListRule mode(Integer mode) {
        this.mode = mode;
        return this;
    }

    /**
     * set 匹配 key.
- mode 为 cookie 时, 为 cookie 的 name
- mode 为 header 时, 为 header 的 key

     *
     * @param key
     */
    public WebBlackListRule key(String key) {
        this.key = key;
        return this;
    }

    /**
     * set 匹配 value.
- mode 为 uri 时, 为要匹配的 uri
- mode 为 ip 时, 为引用的 ip 黑白名单 Id
- mode 为 cookie 时, 为 cookie 的 value
- mode 为 header 时, 为 header 的 value

     *
     * @param value
     */
    public WebBlackListRule value(String value) {
        this.value = value;
        return this;
    }

    /**
     * set 匹配规则. mode 为 uri, cookie 和 header 时必传. 包含以下匹配规则
- 0: 完全匹配
- 1: 前缀匹配
- 2: 包含
- 3: 正则匹配
- 4: 后缀匹配

     *
     * @param pattern
     */
    public WebBlackListRule pattern(Integer pattern) {
        this.pattern = pattern;
        return this;
    }

    /**
     * set 命中后处理动作.
- 0: 放行
- 1: CC 防护

     *
     * @param action
     */
    public WebBlackListRule action(Integer action) {
        this.action = action;
        return this;
    }

    /**
     * set 命中后处理值, action 为 2 时 actionValue 为跳转路径
     *
     * @param actionValue
     */
    public WebBlackListRule actionValue(String actionValue) {
        this.actionValue = actionValue;
        return this;
    }

    /**
     * set 规则状态.
- 0: 关闭
- 1: 开启

     *
     * @param status
     */
    public WebBlackListRule status(Integer status) {
        this.status = status;
        return this;
    }

    /**
     * set geo 黑名单地域列表, mode 不为 geo 或未设置时此字段为空
     *
     * @param geoList
     */
    public WebBlackListRule geoList(List<Geo> geoList) {
        this.geoList = geoList;
        return this;
    }


    /**
     * add item to geo 黑名单地域列表, mode 不为 geo 或未设置时此字段为空
     *
     * @param geoList
     */
    public void addGeoList(Geo geoList) {
        if (this.geoList == null) {
            this.geoList = new ArrayList<>();
        }
        this.geoList.add(geoList);
    }

}