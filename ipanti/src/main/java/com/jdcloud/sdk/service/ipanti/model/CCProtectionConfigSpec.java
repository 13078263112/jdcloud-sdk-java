/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.ipanti.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * cCProtectionConfigSpec
 */
public class CCProtectionConfigSpec  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 防护等级, 0: 正常, 1: 宽松, 2: 紧急, 3: 自定义
     * Required:true
     */
    @Required
    private Integer level;

    /**
     * HTTP 请求数阈值, 防护等级为自定义时必传
     */
    private Long ccThreshold;

    /**
     * Host 的防护阈值, 防护等级为自定义时必传
     */
    private Long hostQps;

    /**
     * Host + Url 的防护阈值, 防护等级为自定义时必传
     */
    private Long hostUrlQps;

    /**
     * 每个源 IP 对 Host 的防护阈值, 防护等级为自定义时必传
     */
    private Long ipHostQps;

    /**
     * 每个源 IP 对 Host + Url 的防护阈值, 防护等级为自定义时必传
     */
    private Long ipHostUrlQps;


    /**
     * get 防护等级, 0: 正常, 1: 宽松, 2: 紧急, 3: 自定义
     *
     * @return
     */
    public Integer getLevel() {
        return level;
    }

    /**
     * set 防护等级, 0: 正常, 1: 宽松, 2: 紧急, 3: 自定义
     *
     * @param level
     */
    public void setLevel(Integer level) {
        this.level = level;
    }

    /**
     * get HTTP 请求数阈值, 防护等级为自定义时必传
     *
     * @return
     */
    public Long getCcThreshold() {
        return ccThreshold;
    }

    /**
     * set HTTP 请求数阈值, 防护等级为自定义时必传
     *
     * @param ccThreshold
     */
    public void setCcThreshold(Long ccThreshold) {
        this.ccThreshold = ccThreshold;
    }

    /**
     * get Host 的防护阈值, 防护等级为自定义时必传
     *
     * @return
     */
    public Long getHostQps() {
        return hostQps;
    }

    /**
     * set Host 的防护阈值, 防护等级为自定义时必传
     *
     * @param hostQps
     */
    public void setHostQps(Long hostQps) {
        this.hostQps = hostQps;
    }

    /**
     * get Host + Url 的防护阈值, 防护等级为自定义时必传
     *
     * @return
     */
    public Long getHostUrlQps() {
        return hostUrlQps;
    }

    /**
     * set Host + Url 的防护阈值, 防护等级为自定义时必传
     *
     * @param hostUrlQps
     */
    public void setHostUrlQps(Long hostUrlQps) {
        this.hostUrlQps = hostUrlQps;
    }

    /**
     * get 每个源 IP 对 Host 的防护阈值, 防护等级为自定义时必传
     *
     * @return
     */
    public Long getIpHostQps() {
        return ipHostQps;
    }

    /**
     * set 每个源 IP 对 Host 的防护阈值, 防护等级为自定义时必传
     *
     * @param ipHostQps
     */
    public void setIpHostQps(Long ipHostQps) {
        this.ipHostQps = ipHostQps;
    }

    /**
     * get 每个源 IP 对 Host + Url 的防护阈值, 防护等级为自定义时必传
     *
     * @return
     */
    public Long getIpHostUrlQps() {
        return ipHostUrlQps;
    }

    /**
     * set 每个源 IP 对 Host + Url 的防护阈值, 防护等级为自定义时必传
     *
     * @param ipHostUrlQps
     */
    public void setIpHostUrlQps(Long ipHostUrlQps) {
        this.ipHostUrlQps = ipHostUrlQps;
    }


    /**
     * set 防护等级, 0: 正常, 1: 宽松, 2: 紧急, 3: 自定义
     *
     * @param level
     */
    public CCProtectionConfigSpec level(Integer level) {
        this.level = level;
        return this;
    }

    /**
     * set HTTP 请求数阈值, 防护等级为自定义时必传
     *
     * @param ccThreshold
     */
    public CCProtectionConfigSpec ccThreshold(Long ccThreshold) {
        this.ccThreshold = ccThreshold;
        return this;
    }

    /**
     * set Host 的防护阈值, 防护等级为自定义时必传
     *
     * @param hostQps
     */
    public CCProtectionConfigSpec hostQps(Long hostQps) {
        this.hostQps = hostQps;
        return this;
    }

    /**
     * set Host + Url 的防护阈值, 防护等级为自定义时必传
     *
     * @param hostUrlQps
     */
    public CCProtectionConfigSpec hostUrlQps(Long hostUrlQps) {
        this.hostUrlQps = hostUrlQps;
        return this;
    }

    /**
     * set 每个源 IP 对 Host 的防护阈值, 防护等级为自定义时必传
     *
     * @param ipHostQps
     */
    public CCProtectionConfigSpec ipHostQps(Long ipHostQps) {
        this.ipHostQps = ipHostQps;
        return this;
    }

    /**
     * set 每个源 IP 对 Host + Url 的防护阈值, 防护等级为自定义时必传
     *
     * @param ipHostUrlQps
     */
    public CCProtectionConfigSpec ipHostUrlQps(Long ipHostUrlQps) {
        this.ipHostUrlQps = ipHostUrlQps;
        return this;
    }


}