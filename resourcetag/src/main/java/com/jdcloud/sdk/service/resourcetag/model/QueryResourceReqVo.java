/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.resourcetag.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;

/**
 * 查找资源id的参数对象
 */
public class QueryResourceReqVo  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 产品线名称列表
标签系统支持的产品线名称如下
- vm               disk        sqlserver  es          mongodb               ip
- memcached        redis       drds       rds         database              db_ro
- percona          percona_ro  mariadb    mariadb_ro  pg                    cdn
- nativecontainer  pod         zfs        jqs         kubernetesNodegroup   jcq

     * Required:true
     */
    @Required
    private String serviceCode;

    /**
     * 标签过滤列表
     */
    private List<TagFilter> tagFilters;

    /**
     * 操作项(多个tagFilter之间支持and或or关系, 默认and关系)
     */
    private String operator;


    /**
     * get 产品线名称列表
标签系统支持的产品线名称如下
- vm               disk        sqlserver  es          mongodb               ip
- memcached        redis       drds       rds         database              db_ro
- percona          percona_ro  mariadb    mariadb_ro  pg                    cdn
- nativecontainer  pod         zfs        jqs         kubernetesNodegroup   jcq

     *
     * @return
     */
    public String getServiceCode() {
        return serviceCode;
    }

    /**
     * set 产品线名称列表
标签系统支持的产品线名称如下
- vm               disk        sqlserver  es          mongodb               ip
- memcached        redis       drds       rds         database              db_ro
- percona          percona_ro  mariadb    mariadb_ro  pg                    cdn
- nativecontainer  pod         zfs        jqs         kubernetesNodegroup   jcq

     *
     * @param serviceCode
     */
    public void setServiceCode(String serviceCode) {
        this.serviceCode = serviceCode;
    }

    /**
     * get 标签过滤列表
     *
     * @return
     */
    public List<TagFilter> getTagFilters() {
        return tagFilters;
    }

    /**
     * set 标签过滤列表
     *
     * @param tagFilters
     */
    public void setTagFilters(List<TagFilter> tagFilters) {
        this.tagFilters = tagFilters;
    }

    /**
     * get 操作项(多个tagFilter之间支持and或or关系, 默认and关系)
     *
     * @return
     */
    public String getOperator() {
        return operator;
    }

    /**
     * set 操作项(多个tagFilter之间支持and或or关系, 默认and关系)
     *
     * @param operator
     */
    public void setOperator(String operator) {
        this.operator = operator;
    }


    /**
     * set 产品线名称列表
标签系统支持的产品线名称如下
- vm               disk        sqlserver  es          mongodb               ip
- memcached        redis       drds       rds         database              db_ro
- percona          percona_ro  mariadb    mariadb_ro  pg                    cdn
- nativecontainer  pod         zfs        jqs         kubernetesNodegroup   jcq

     *
     * @param serviceCode
     */
    public QueryResourceReqVo serviceCode(String serviceCode) {
        this.serviceCode = serviceCode;
        return this;
    }

    /**
     * set 标签过滤列表
     *
     * @param tagFilters
     */
    public QueryResourceReqVo tagFilters(List<TagFilter> tagFilters) {
        this.tagFilters = tagFilters;
        return this;
    }

    /**
     * set 操作项(多个tagFilter之间支持and或or关系, 默认and关系)
     *
     * @param operator
     */
    public QueryResourceReqVo operator(String operator) {
        this.operator = operator;
        return this;
    }


    /**
     * add item to 标签过滤列表
     *
     * @param tagFilter
     */
    public void addTagFilter(TagFilter tagFilter) {
        if (this.tagFilters == null) {
            this.tagFilters = new ArrayList<>();
        }
        this.tagFilters.add(tagFilter);
    }

}