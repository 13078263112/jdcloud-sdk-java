/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.pod.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;

/**
 * hg
 */
public class Hg  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 默认值： http；可选值 http, https
     */
    private String scheme;

    /**
     * 连接到pod的host信息，默认使用pod_ip，满足hostname或者ipv4格式
     */
    private String host;

    /**
     * 范围：[1-65535]
     * Required:true
     */
    @Required
    private Integer port;

    /**
     * HTTP的路径。范围：[1-256]
     * Required:true
     */
    @Required
    private String path;

    /**
     * 对指定的端口和路径上的容器的 IP 地址执行 HTTP Get 请求。&lt;br&gt;
如果响应的状态码大于等于200 且小于 400，则诊断被认为是成功的。 
     */
    private List<Hh> httpHeader;


    /**
     * get 默认值： http；可选值 http, https
     *
     * @return
     */
    public String getScheme() {
        return scheme;
    }

    /**
     * set 默认值： http；可选值 http, https
     *
     * @param scheme
     */
    public void setScheme(String scheme) {
        this.scheme = scheme;
    }

    /**
     * get 连接到pod的host信息，默认使用pod_ip，满足hostname或者ipv4格式
     *
     * @return
     */
    public String getHost() {
        return host;
    }

    /**
     * set 连接到pod的host信息，默认使用pod_ip，满足hostname或者ipv4格式
     *
     * @param host
     */
    public void setHost(String host) {
        this.host = host;
    }

    /**
     * get 范围：[1-65535]
     *
     * @return
     */
    public Integer getPort() {
        return port;
    }

    /**
     * set 范围：[1-65535]
     *
     * @param port
     */
    public void setPort(Integer port) {
        this.port = port;
    }

    /**
     * get HTTP的路径。范围：[1-256]
     *
     * @return
     */
    public String getPath() {
        return path;
    }

    /**
     * set HTTP的路径。范围：[1-256]
     *
     * @param path
     */
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * get 对指定的端口和路径上的容器的 IP 地址执行 HTTP Get 请求。&lt;br&gt;
如果响应的状态码大于等于200 且小于 400，则诊断被认为是成功的。 
     *
     * @return
     */
    public List<Hh> getHttpHeader() {
        return httpHeader;
    }

    /**
     * set 对指定的端口和路径上的容器的 IP 地址执行 HTTP Get 请求。&lt;br&gt;
如果响应的状态码大于等于200 且小于 400，则诊断被认为是成功的。 
     *
     * @param httpHeader
     */
    public void setHttpHeader(List<Hh> httpHeader) {
        this.httpHeader = httpHeader;
    }


    /**
     * set 默认值： http；可选值 http, https
     *
     * @param scheme
     */
    public Hg scheme(String scheme) {
        this.scheme = scheme;
        return this;
    }

    /**
     * set 连接到pod的host信息，默认使用pod_ip，满足hostname或者ipv4格式
     *
     * @param host
     */
    public Hg host(String host) {
        this.host = host;
        return this;
    }

    /**
     * set 范围：[1-65535]
     *
     * @param port
     */
    public Hg port(Integer port) {
        this.port = port;
        return this;
    }

    /**
     * set HTTP的路径。范围：[1-256]
     *
     * @param path
     */
    public Hg path(String path) {
        this.path = path;
        return this;
    }

    /**
     * set 对指定的端口和路径上的容器的 IP 地址执行 HTTP Get 请求。&lt;br&gt;
如果响应的状态码大于等于200 且小于 400，则诊断被认为是成功的。 
     *
     * @param httpHeader
     */
    public Hg httpHeader(List<Hh> httpHeader) {
        this.httpHeader = httpHeader;
        return this;
    }


    /**
     * add item to 对指定的端口和路径上的容器的 IP 地址执行 HTTP Get 请求。&lt;br&gt;
如果响应的状态码大于等于200 且小于 400，则诊断被认为是成功的。 
     *
     * @param httpHeader
     */
    public void addHttpHeader(Hh httpHeader) {
        if (this.httpHeader == null) {
            this.httpHeader = new ArrayList<>();
        }
        this.httpHeader.add(httpHeader);
    }

}