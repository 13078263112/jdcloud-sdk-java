/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.function.model;


/**
 * trigger
 */
public class Trigger  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 触发器Id
     */
    private String triggerId;

    /**
     * 触发器所属的函数名称
     */
    private String functionName;

    /**
     * 触发器所属的函数版本名称
     */
    private String versionName;

    /**
     * 触发器对应的事件源类型，目前有oss和apigateway
     */
    private String eventSource;

    /**
     * 触发器对应的事件源Id
     */
    private String eventSourceId;

    /**
     * 触发器创建时间
     */
    private String createTime;

    /**
     * 触发器最后修改时间
     */
    private String updateTime;


    /**
     * get 触发器Id
     *
     * @return
     */
    public String getTriggerId() {
        return triggerId;
    }

    /**
     * set 触发器Id
     *
     * @param triggerId
     */
    public void setTriggerId(String triggerId) {
        this.triggerId = triggerId;
    }

    /**
     * get 触发器所属的函数名称
     *
     * @return
     */
    public String getFunctionName() {
        return functionName;
    }

    /**
     * set 触发器所属的函数名称
     *
     * @param functionName
     */
    public void setFunctionName(String functionName) {
        this.functionName = functionName;
    }

    /**
     * get 触发器所属的函数版本名称
     *
     * @return
     */
    public String getVersionName() {
        return versionName;
    }

    /**
     * set 触发器所属的函数版本名称
     *
     * @param versionName
     */
    public void setVersionName(String versionName) {
        this.versionName = versionName;
    }

    /**
     * get 触发器对应的事件源类型，目前有oss和apigateway
     *
     * @return
     */
    public String getEventSource() {
        return eventSource;
    }

    /**
     * set 触发器对应的事件源类型，目前有oss和apigateway
     *
     * @param eventSource
     */
    public void setEventSource(String eventSource) {
        this.eventSource = eventSource;
    }

    /**
     * get 触发器对应的事件源Id
     *
     * @return
     */
    public String getEventSourceId() {
        return eventSourceId;
    }

    /**
     * set 触发器对应的事件源Id
     *
     * @param eventSourceId
     */
    public void setEventSourceId(String eventSourceId) {
        this.eventSourceId = eventSourceId;
    }

    /**
     * get 触发器创建时间
     *
     * @return
     */
    public String getCreateTime() {
        return createTime;
    }

    /**
     * set 触发器创建时间
     *
     * @param createTime
     */
    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }

    /**
     * get 触发器最后修改时间
     *
     * @return
     */
    public String getUpdateTime() {
        return updateTime;
    }

    /**
     * set 触发器最后修改时间
     *
     * @param updateTime
     */
    public void setUpdateTime(String updateTime) {
        this.updateTime = updateTime;
    }


    /**
     * set 触发器Id
     *
     * @param triggerId
     */
    public Trigger triggerId(String triggerId) {
        this.triggerId = triggerId;
        return this;
    }

    /**
     * set 触发器所属的函数名称
     *
     * @param functionName
     */
    public Trigger functionName(String functionName) {
        this.functionName = functionName;
        return this;
    }

    /**
     * set 触发器所属的函数版本名称
     *
     * @param versionName
     */
    public Trigger versionName(String versionName) {
        this.versionName = versionName;
        return this;
    }

    /**
     * set 触发器对应的事件源类型，目前有oss和apigateway
     *
     * @param eventSource
     */
    public Trigger eventSource(String eventSource) {
        this.eventSource = eventSource;
        return this;
    }

    /**
     * set 触发器对应的事件源Id
     *
     * @param eventSourceId
     */
    public Trigger eventSourceId(String eventSourceId) {
        this.eventSourceId = eventSourceId;
        return this;
    }

    /**
     * set 触发器创建时间
     *
     * @param createTime
     */
    public Trigger createTime(String createTime) {
        this.createTime = createTime;
        return this;
    }

    /**
     * set 触发器最后修改时间
     *
     * @param updateTime
     */
    public Trigger updateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }


}