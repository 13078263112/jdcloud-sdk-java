/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.detection.model;


/**
 * probeInfo
 */
public class ProbeInfo  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 探测源的所在主机名称
     */
    private String name;

    /**
     * 探测源的内网ip
     */
    private String privateIp;

    /**
     * 探测结果,缺点返回null,对应前端显示 &quot;--&quot; ,1:探测正常，2：探测失败，3：探测超时
     */
    private Long probeResult;

    /**
     * 插件状态，  1：正常，2：异常
     */
    private Long probeStatus;

    /**
     * 探测源的公网ip
     */
    private String publicIp;

    /**
     * 探测目标状态，1：正常，2：异常(探测失败、探测超时)，缺点返回null,对应前端显示 &quot;--&quot;
     */
    private Long targetStatus;

    /**
     * 探测源主机的uuid
     */
    private String uuid;

    /**
     * 云主机状态，对应云主机的状态,当找不到云主机，状态为&quot;unExist&quot;
     */
    private String vmStatus;


    /**
     * get 探测源的所在主机名称
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 探测源的所在主机名称
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * get 探测源的内网ip
     *
     * @return
     */
    public String getPrivateIp() {
        return privateIp;
    }

    /**
     * set 探测源的内网ip
     *
     * @param privateIp
     */
    public void setPrivateIp(String privateIp) {
        this.privateIp = privateIp;
    }

    /**
     * get 探测结果,缺点返回null,对应前端显示 &quot;--&quot; ,1:探测正常，2：探测失败，3：探测超时
     *
     * @return
     */
    public Long getProbeResult() {
        return probeResult;
    }

    /**
     * set 探测结果,缺点返回null,对应前端显示 &quot;--&quot; ,1:探测正常，2：探测失败，3：探测超时
     *
     * @param probeResult
     */
    public void setProbeResult(Long probeResult) {
        this.probeResult = probeResult;
    }

    /**
     * get 插件状态，  1：正常，2：异常
     *
     * @return
     */
    public Long getProbeStatus() {
        return probeStatus;
    }

    /**
     * set 插件状态，  1：正常，2：异常
     *
     * @param probeStatus
     */
    public void setProbeStatus(Long probeStatus) {
        this.probeStatus = probeStatus;
    }

    /**
     * get 探测源的公网ip
     *
     * @return
     */
    public String getPublicIp() {
        return publicIp;
    }

    /**
     * set 探测源的公网ip
     *
     * @param publicIp
     */
    public void setPublicIp(String publicIp) {
        this.publicIp = publicIp;
    }

    /**
     * get 探测目标状态，1：正常，2：异常(探测失败、探测超时)，缺点返回null,对应前端显示 &quot;--&quot;
     *
     * @return
     */
    public Long getTargetStatus() {
        return targetStatus;
    }

    /**
     * set 探测目标状态，1：正常，2：异常(探测失败、探测超时)，缺点返回null,对应前端显示 &quot;--&quot;
     *
     * @param targetStatus
     */
    public void setTargetStatus(Long targetStatus) {
        this.targetStatus = targetStatus;
    }

    /**
     * get 探测源主机的uuid
     *
     * @return
     */
    public String getUuid() {
        return uuid;
    }

    /**
     * set 探测源主机的uuid
     *
     * @param uuid
     */
    public void setUuid(String uuid) {
        this.uuid = uuid;
    }

    /**
     * get 云主机状态，对应云主机的状态,当找不到云主机，状态为&quot;unExist&quot;
     *
     * @return
     */
    public String getVmStatus() {
        return vmStatus;
    }

    /**
     * set 云主机状态，对应云主机的状态,当找不到云主机，状态为&quot;unExist&quot;
     *
     * @param vmStatus
     */
    public void setVmStatus(String vmStatus) {
        this.vmStatus = vmStatus;
    }


    /**
     * set 探测源的所在主机名称
     *
     * @param name
     */
    public ProbeInfo name(String name) {
        this.name = name;
        return this;
    }

    /**
     * set 探测源的内网ip
     *
     * @param privateIp
     */
    public ProbeInfo privateIp(String privateIp) {
        this.privateIp = privateIp;
        return this;
    }

    /**
     * set 探测结果,缺点返回null,对应前端显示 &quot;--&quot; ,1:探测正常，2：探测失败，3：探测超时
     *
     * @param probeResult
     */
    public ProbeInfo probeResult(Long probeResult) {
        this.probeResult = probeResult;
        return this;
    }

    /**
     * set 插件状态，  1：正常，2：异常
     *
     * @param probeStatus
     */
    public ProbeInfo probeStatus(Long probeStatus) {
        this.probeStatus = probeStatus;
        return this;
    }

    /**
     * set 探测源的公网ip
     *
     * @param publicIp
     */
    public ProbeInfo publicIp(String publicIp) {
        this.publicIp = publicIp;
        return this;
    }

    /**
     * set 探测目标状态，1：正常，2：异常(探测失败、探测超时)，缺点返回null,对应前端显示 &quot;--&quot;
     *
     * @param targetStatus
     */
    public ProbeInfo targetStatus(Long targetStatus) {
        this.targetStatus = targetStatus;
        return this;
    }

    /**
     * set 探测源主机的uuid
     *
     * @param uuid
     */
    public ProbeInfo uuid(String uuid) {
        this.uuid = uuid;
        return this;
    }

    /**
     * set 云主机状态，对应云主机的状态,当找不到云主机，状态为&quot;unExist&quot;
     *
     * @param vmStatus
     */
    public ProbeInfo vmStatus(String vmStatus) {
        this.vmStatus = vmStatus;
        return this;
    }


}