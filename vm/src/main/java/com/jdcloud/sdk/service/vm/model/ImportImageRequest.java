/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 镜像
 * 关于主机镜像操作的相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.vm.model;

import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 导入镜像，将外部镜像导入到京东云中

 */
public class ImportImageRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 系统架构，可选值：x86_64,i386
     * Required:true
     */
    @Required
    private String architecture;

    /**
     * 操作系统，可选值：windows,linux
     * Required:true
     */
    @Required
    private String osType;

    /**
     * 平台名称，可选值：CentOS,Ubuntu,Windows Server,Other Linux,Other Windows
     * Required:true
     */
    @Required
    private String platform;

    /**
     * 磁盘格式，可选值：qcow2,vhd,vmdk,raw
     * Required:true
     */
    @Required
    private String diskFormat;

    /**
     * 以此镜像需要制作的系统盘的默认大小，单位GB。最小值40，最大值500，要求值是10的整数倍
     * Required:true
     */
    @Required
    private Integer systemDiskSizeGB;

    /**
     * 要导入镜像的对象存储外链地址
     * Required:true
     */
    @Required
    private String imageUrl;

    /**
     * 镜像的操作系统版本
     */
    private String osVersion;

    /**
     * 导入镜像的自定义名称
     * Required:true
     */
    @Required
    private String imageName;

    /**
     * 导入镜像的描述信息
     */
    private String description;

    /**
     * 是否强制导入。强制导入则忽略镜像的合规性检测
     */
    private Boolean forceImport;

    /**
     * 用户导入镜像的幂等性保证。每次创建请传入不同的值，如果传值与某次的clientToken相同，则返还该次的请求结果
     */
    private String clientToken;

    /**
     * 地域ID
     * Required:true
     */
    @Required
    private String regionId;


    /**
     * get 系统架构，可选值：x86_64,i386
     *
     * @return
     */
    public String getArchitecture() {
        return architecture;
    }

    /**
     * set 系统架构，可选值：x86_64,i386
     *
     * @param architecture
     */
    public void setArchitecture(String architecture) {
        this.architecture = architecture;
    }

    /**
     * get 操作系统，可选值：windows,linux
     *
     * @return
     */
    public String getOsType() {
        return osType;
    }

    /**
     * set 操作系统，可选值：windows,linux
     *
     * @param osType
     */
    public void setOsType(String osType) {
        this.osType = osType;
    }

    /**
     * get 平台名称，可选值：CentOS,Ubuntu,Windows Server,Other Linux,Other Windows
     *
     * @return
     */
    public String getPlatform() {
        return platform;
    }

    /**
     * set 平台名称，可选值：CentOS,Ubuntu,Windows Server,Other Linux,Other Windows
     *
     * @param platform
     */
    public void setPlatform(String platform) {
        this.platform = platform;
    }

    /**
     * get 磁盘格式，可选值：qcow2,vhd,vmdk,raw
     *
     * @return
     */
    public String getDiskFormat() {
        return diskFormat;
    }

    /**
     * set 磁盘格式，可选值：qcow2,vhd,vmdk,raw
     *
     * @param diskFormat
     */
    public void setDiskFormat(String diskFormat) {
        this.diskFormat = diskFormat;
    }

    /**
     * get 以此镜像需要制作的系统盘的默认大小，单位GB。最小值40，最大值500，要求值是10的整数倍
     *
     * @return
     */
    public Integer getSystemDiskSizeGB() {
        return systemDiskSizeGB;
    }

    /**
     * set 以此镜像需要制作的系统盘的默认大小，单位GB。最小值40，最大值500，要求值是10的整数倍
     *
     * @param systemDiskSizeGB
     */
    public void setSystemDiskSizeGB(Integer systemDiskSizeGB) {
        this.systemDiskSizeGB = systemDiskSizeGB;
    }

    /**
     * get 要导入镜像的对象存储外链地址
     *
     * @return
     */
    public String getImageUrl() {
        return imageUrl;
    }

    /**
     * set 要导入镜像的对象存储外链地址
     *
     * @param imageUrl
     */
    public void setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
    }

    /**
     * get 镜像的操作系统版本
     *
     * @return
     */
    public String getOsVersion() {
        return osVersion;
    }

    /**
     * set 镜像的操作系统版本
     *
     * @param osVersion
     */
    public void setOsVersion(String osVersion) {
        this.osVersion = osVersion;
    }

    /**
     * get 导入镜像的自定义名称
     *
     * @return
     */
    public String getImageName() {
        return imageName;
    }

    /**
     * set 导入镜像的自定义名称
     *
     * @param imageName
     */
    public void setImageName(String imageName) {
        this.imageName = imageName;
    }

    /**
     * get 导入镜像的描述信息
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 导入镜像的描述信息
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * get 是否强制导入。强制导入则忽略镜像的合规性检测
     *
     * @return
     */
    public Boolean getForceImport() {
        return forceImport;
    }

    /**
     * set 是否强制导入。强制导入则忽略镜像的合规性检测
     *
     * @param forceImport
     */
    public void setForceImport(Boolean forceImport) {
        this.forceImport = forceImport;
    }

    /**
     * get 用户导入镜像的幂等性保证。每次创建请传入不同的值，如果传值与某次的clientToken相同，则返还该次的请求结果
     *
     * @return
     */
    public String getClientToken() {
        return clientToken;
    }

    /**
     * set 用户导入镜像的幂等性保证。每次创建请传入不同的值，如果传值与某次的clientToken相同，则返还该次的请求结果
     *
     * @param clientToken
     */
    public void setClientToken(String clientToken) {
        this.clientToken = clientToken;
    }

    /**
     * get 地域ID
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域ID
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
     * set 系统架构，可选值：x86_64,i386
     *
     * @param architecture
     */
    public ImportImageRequest architecture(String architecture) {
        this.architecture = architecture;
        return this;
    }

    /**
     * set 操作系统，可选值：windows,linux
     *
     * @param osType
     */
    public ImportImageRequest osType(String osType) {
        this.osType = osType;
        return this;
    }

    /**
     * set 平台名称，可选值：CentOS,Ubuntu,Windows Server,Other Linux,Other Windows
     *
     * @param platform
     */
    public ImportImageRequest platform(String platform) {
        this.platform = platform;
        return this;
    }

    /**
     * set 磁盘格式，可选值：qcow2,vhd,vmdk,raw
     *
     * @param diskFormat
     */
    public ImportImageRequest diskFormat(String diskFormat) {
        this.diskFormat = diskFormat;
        return this;
    }

    /**
     * set 以此镜像需要制作的系统盘的默认大小，单位GB。最小值40，最大值500，要求值是10的整数倍
     *
     * @param systemDiskSizeGB
     */
    public ImportImageRequest systemDiskSizeGB(Integer systemDiskSizeGB) {
        this.systemDiskSizeGB = systemDiskSizeGB;
        return this;
    }

    /**
     * set 要导入镜像的对象存储外链地址
     *
     * @param imageUrl
     */
    public ImportImageRequest imageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }

    /**
     * set 镜像的操作系统版本
     *
     * @param osVersion
     */
    public ImportImageRequest osVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }

    /**
     * set 导入镜像的自定义名称
     *
     * @param imageName
     */
    public ImportImageRequest imageName(String imageName) {
        this.imageName = imageName;
        return this;
    }

    /**
     * set 导入镜像的描述信息
     *
     * @param description
     */
    public ImportImageRequest description(String description) {
        this.description = description;
        return this;
    }

    /**
     * set 是否强制导入。强制导入则忽略镜像的合规性检测
     *
     * @param forceImport
     */
    public ImportImageRequest forceImport(Boolean forceImport) {
        this.forceImport = forceImport;
        return this;
    }

    /**
     * set 用户导入镜像的幂等性保证。每次创建请传入不同的值，如果传值与某次的clientToken相同，则返还该次的请求结果
     *
     * @param clientToken
     */
    public ImportImageRequest clientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }

    /**
     * set 地域ID
     *
     * @param regionId
     */
    public ImportImageRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


}