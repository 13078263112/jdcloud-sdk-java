/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.iam.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * passwordPolicy
 */
public class PasswordPolicy  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 密码长度，6-20之间
     * Required:true
     */
    @Required
    private Integer length;

    /**
     * 密码有效期，0-1095之间
     * Required:true
     */
    @Required
    private Integer age;

    /**
     * 过期重置类型：0-主账号重置，1-子账号重置
     * Required:true
     */
    @Required
    private Integer expirationOperation;

    /**
     * 历史密码检查次数,0-10之间
     * Required:true
     */
    @Required
    private Integer reusePrevention;

    /**
     * 密码重试次数,1-16之间
     * Required:true
     */
    @Required
    private Integer retryTimes;

    /**
     * validLoginDuration
     * Required:true
     */
    @Required
    private Integer validLoginDuration;

    /**
     * 密码字符类型，至少包含一种
     * Required:true
     */
    @Required
    private PasswordPolicyRule rule;


    /**
     * get 密码长度，6-20之间
     *
     * @return
     */
    public Integer getLength() {
        return length;
    }

    /**
     * set 密码长度，6-20之间
     *
     * @param length
     */
    public void setLength(Integer length) {
        this.length = length;
    }

    /**
     * get 密码有效期，0-1095之间
     *
     * @return
     */
    public Integer getAge() {
        return age;
    }

    /**
     * set 密码有效期，0-1095之间
     *
     * @param age
     */
    public void setAge(Integer age) {
        this.age = age;
    }

    /**
     * get 过期重置类型：0-主账号重置，1-子账号重置
     *
     * @return
     */
    public Integer getExpirationOperation() {
        return expirationOperation;
    }

    /**
     * set 过期重置类型：0-主账号重置，1-子账号重置
     *
     * @param expirationOperation
     */
    public void setExpirationOperation(Integer expirationOperation) {
        this.expirationOperation = expirationOperation;
    }

    /**
     * get 历史密码检查次数,0-10之间
     *
     * @return
     */
    public Integer getReusePrevention() {
        return reusePrevention;
    }

    /**
     * set 历史密码检查次数,0-10之间
     *
     * @param reusePrevention
     */
    public void setReusePrevention(Integer reusePrevention) {
        this.reusePrevention = reusePrevention;
    }

    /**
     * get 密码重试次数,1-16之间
     *
     * @return
     */
    public Integer getRetryTimes() {
        return retryTimes;
    }

    /**
     * set 密码重试次数,1-16之间
     *
     * @param retryTimes
     */
    public void setRetryTimes(Integer retryTimes) {
        this.retryTimes = retryTimes;
    }

    /**
     * get validLoginDuration
     *
     * @return
     */
    public Integer getValidLoginDuration() {
        return validLoginDuration;
    }

    /**
     * set validLoginDuration
     *
     * @param validLoginDuration
     */
    public void setValidLoginDuration(Integer validLoginDuration) {
        this.validLoginDuration = validLoginDuration;
    }

    /**
     * get 密码字符类型，至少包含一种
     *
     * @return
     */
    public PasswordPolicyRule getRule() {
        return rule;
    }

    /**
     * set 密码字符类型，至少包含一种
     *
     * @param rule
     */
    public void setRule(PasswordPolicyRule rule) {
        this.rule = rule;
    }


    /**
     * set 密码长度，6-20之间
     *
     * @param length
     */
    public PasswordPolicy length(Integer length) {
        this.length = length;
        return this;
    }

    /**
     * set 密码有效期，0-1095之间
     *
     * @param age
     */
    public PasswordPolicy age(Integer age) {
        this.age = age;
        return this;
    }

    /**
     * set 过期重置类型：0-主账号重置，1-子账号重置
     *
     * @param expirationOperation
     */
    public PasswordPolicy expirationOperation(Integer expirationOperation) {
        this.expirationOperation = expirationOperation;
        return this;
    }

    /**
     * set 历史密码检查次数,0-10之间
     *
     * @param reusePrevention
     */
    public PasswordPolicy reusePrevention(Integer reusePrevention) {
        this.reusePrevention = reusePrevention;
        return this;
    }

    /**
     * set 密码重试次数,1-16之间
     *
     * @param retryTimes
     */
    public PasswordPolicy retryTimes(Integer retryTimes) {
        this.retryTimes = retryTimes;
        return this;
    }

    /**
     * set validLoginDuration
     *
     * @param validLoginDuration
     */
    public PasswordPolicy validLoginDuration(Integer validLoginDuration) {
        this.validLoginDuration = validLoginDuration;
        return this;
    }

    /**
     * set 密码字符类型，至少包含一种
     *
     * @param rule
     */
    public PasswordPolicy rule(PasswordPolicyRule rule) {
        this.rule = rule;
        return this;
    }


}