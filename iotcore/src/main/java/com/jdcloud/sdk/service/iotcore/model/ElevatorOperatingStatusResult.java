/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * ElevatorAPI
 * 电梯API
 *
 * OpenAPI spec version: v2
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.iotcore.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.iotcore.model.RegisterValue;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 获取电梯运行状态
 */
public class ElevatorOperatingStatusResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * data
     */
    private List<RegisterValue> data;

    /**
     * 统计数据
     */
    private Integer totalCount;


    /**
     * get data
     *
     * @return
     */
    public List<RegisterValue> getData() {
        return data;
    }

    /**
     * set data
     *
     * @param data
     */
    public void setData(List<RegisterValue> data) {
        this.data = data;
    }

    /**
     * get 统计数据
     *
     * @return
     */
    public Integer getTotalCount() {
        return totalCount;
    }

    /**
     * set 统计数据
     *
     * @param totalCount
     */
    public void setTotalCount(Integer totalCount) {
        this.totalCount = totalCount;
    }


    /**
     * set data
     *
     * @param data
     */
    public ElevatorOperatingStatusResult data(List<RegisterValue> data) {
        this.data = data;
        return this;
    }

    /**
     * set 统计数据
     *
     * @param totalCount
     */
    public ElevatorOperatingStatusResult totalCount(Integer totalCount) {
        this.totalCount = totalCount;
        return this;
    }


    /**
     * add item to data
     *
     * @param data
     */
    public void addData(RegisterValue data) {
        if (this.data == null) {
            this.data = new ArrayList<>();
        }
        this.data.add(data);
    }

}