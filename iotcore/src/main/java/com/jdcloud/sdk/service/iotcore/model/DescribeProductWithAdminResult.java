/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * LoongrayProduct
 * 关于产品基本信息操作的相关接口
 *
 * OpenAPI spec version: v2
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.iotcore.model;

import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查看产品
 */
public class DescribeProductWithAdminResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 产品名称
     */
    private String productName;

    /**
     * 节点类型，取值：
0：设备。设备不能挂载子设备。可以直连物联网平台，也可以作为网关的子设备连接物联网平台
1：网关。网关可以挂载子设备，具有子设备管理模块，维持子设备的拓扑关系，和将拓扑关系同步到物联网平台

     */
    private Integer productType;

    /**
     * 产品key
     */
    private String productKey;

    /**
     * 产品秘钥
     */
    private String productSecret;

    /**
     * 创建时间,时间为东八区（UTC/GMT+08:00）
     */
    private Long createdTime;

    /**
     * 包含设备数
     */
    private Integer deviceCount;

    /**
     * 动态注册,0:关闭，1:开启
     */
    private Integer dynamicRegister;

    /**
     * 产品描述信息
     */
    private String productDescription;

    /**
     * 产品类型,如自定义等
     */
    private String templateName;


    /**
     * get 产品名称
     *
     * @return
     */
    public String getProductName() {
        return productName;
    }

    /**
     * set 产品名称
     *
     * @param productName
     */
    public void setProductName(String productName) {
        this.productName = productName;
    }

    /**
     * get 节点类型，取值：
0：设备。设备不能挂载子设备。可以直连物联网平台，也可以作为网关的子设备连接物联网平台
1：网关。网关可以挂载子设备，具有子设备管理模块，维持子设备的拓扑关系，和将拓扑关系同步到物联网平台

     *
     * @return
     */
    public Integer getProductType() {
        return productType;
    }

    /**
     * set 节点类型，取值：
0：设备。设备不能挂载子设备。可以直连物联网平台，也可以作为网关的子设备连接物联网平台
1：网关。网关可以挂载子设备，具有子设备管理模块，维持子设备的拓扑关系，和将拓扑关系同步到物联网平台

     *
     * @param productType
     */
    public void setProductType(Integer productType) {
        this.productType = productType;
    }

    /**
     * get 产品key
     *
     * @return
     */
    public String getProductKey() {
        return productKey;
    }

    /**
     * set 产品key
     *
     * @param productKey
     */
    public void setProductKey(String productKey) {
        this.productKey = productKey;
    }

    /**
     * get 产品秘钥
     *
     * @return
     */
    public String getProductSecret() {
        return productSecret;
    }

    /**
     * set 产品秘钥
     *
     * @param productSecret
     */
    public void setProductSecret(String productSecret) {
        this.productSecret = productSecret;
    }

    /**
     * get 创建时间,时间为东八区（UTC/GMT+08:00）
     *
     * @return
     */
    public Long getCreatedTime() {
        return createdTime;
    }

    /**
     * set 创建时间,时间为东八区（UTC/GMT+08:00）
     *
     * @param createdTime
     */
    public void setCreatedTime(Long createdTime) {
        this.createdTime = createdTime;
    }

    /**
     * get 包含设备数
     *
     * @return
     */
    public Integer getDeviceCount() {
        return deviceCount;
    }

    /**
     * set 包含设备数
     *
     * @param deviceCount
     */
    public void setDeviceCount(Integer deviceCount) {
        this.deviceCount = deviceCount;
    }

    /**
     * get 动态注册,0:关闭，1:开启
     *
     * @return
     */
    public Integer getDynamicRegister() {
        return dynamicRegister;
    }

    /**
     * set 动态注册,0:关闭，1:开启
     *
     * @param dynamicRegister
     */
    public void setDynamicRegister(Integer dynamicRegister) {
        this.dynamicRegister = dynamicRegister;
    }

    /**
     * get 产品描述信息
     *
     * @return
     */
    public String getProductDescription() {
        return productDescription;
    }

    /**
     * set 产品描述信息
     *
     * @param productDescription
     */
    public void setProductDescription(String productDescription) {
        this.productDescription = productDescription;
    }

    /**
     * get 产品类型,如自定义等
     *
     * @return
     */
    public String getTemplateName() {
        return templateName;
    }

    /**
     * set 产品类型,如自定义等
     *
     * @param templateName
     */
    public void setTemplateName(String templateName) {
        this.templateName = templateName;
    }


    /**
     * set 产品名称
     *
     * @param productName
     */
    public DescribeProductWithAdminResult productName(String productName) {
        this.productName = productName;
        return this;
    }

    /**
     * set 节点类型，取值：
0：设备。设备不能挂载子设备。可以直连物联网平台，也可以作为网关的子设备连接物联网平台
1：网关。网关可以挂载子设备，具有子设备管理模块，维持子设备的拓扑关系，和将拓扑关系同步到物联网平台

     *
     * @param productType
     */
    public DescribeProductWithAdminResult productType(Integer productType) {
        this.productType = productType;
        return this;
    }

    /**
     * set 产品key
     *
     * @param productKey
     */
    public DescribeProductWithAdminResult productKey(String productKey) {
        this.productKey = productKey;
        return this;
    }

    /**
     * set 产品秘钥
     *
     * @param productSecret
     */
    public DescribeProductWithAdminResult productSecret(String productSecret) {
        this.productSecret = productSecret;
        return this;
    }

    /**
     * set 创建时间,时间为东八区（UTC/GMT+08:00）
     *
     * @param createdTime
     */
    public DescribeProductWithAdminResult createdTime(Long createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * set 包含设备数
     *
     * @param deviceCount
     */
    public DescribeProductWithAdminResult deviceCount(Integer deviceCount) {
        this.deviceCount = deviceCount;
        return this;
    }

    /**
     * set 动态注册,0:关闭，1:开启
     *
     * @param dynamicRegister
     */
    public DescribeProductWithAdminResult dynamicRegister(Integer dynamicRegister) {
        this.dynamicRegister = dynamicRegister;
        return this;
    }

    /**
     * set 产品描述信息
     *
     * @param productDescription
     */
    public DescribeProductWithAdminResult productDescription(String productDescription) {
        this.productDescription = productDescription;
        return this;
    }

    /**
     * set 产品类型,如自定义等
     *
     * @param templateName
     */
    public DescribeProductWithAdminResult templateName(String templateName) {
        this.templateName = templateName;
        return this;
    }


}