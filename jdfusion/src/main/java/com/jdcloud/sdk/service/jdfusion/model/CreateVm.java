/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.jdfusion.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;

/**
 * createVm
 */
public class CreateVm  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 资源ID，如果为空，则执行创建操作，否则执行修改操作
     */
    private String id;

    /**
     * 可用区,根据各云平台规范填写
     */
    private String region;

    /**
     * 云主机所属的可用区
     */
    private String az;

    /**
     * 云主机名称
     * Required:true
     */
    @Required
    private String name;

    /**
     * 云主机
     */
    private String hostName;

    /**
     * imageType
     */
    private ImageType imageType;

    /**
     * instanceType
     */
    private InstanceType instanceType;

    /**
     * 云主机描述
     */
    private String description;

    /**
     * 子网ID
     * Required:true
     */
    @Required
    private String subnetId;

    /**
     * tags
     */
    private List<Tag> tags;

    /**
     * 所属云提供商ID
     */
    private String cloudID;

    /**
     * 密钥对名称,jd当前只支持传入一个
     */
    private List<String> keyNames;

    /**
     * 主网卡主IP绑定弹性IP的地址
     */
    private String elasticIpAddress;

    /**
     * 私有ip地址
     */
    private String privateIpAddress;

    /**
     * 云主机状态
     */
    private String status;

    /**
     * 创建时间
     */
    private String createdTime;

    /**
     * 镜像文件ID，启动实例时选择的镜像资源
     * Required:true
     */
    @Required
    private String imageId;

    /**
     * 规格类型
     * Required:true
     */
    @Required
    private String instanceFlavorType;

    /**
     * 指定新创建实例所属于的安全组代码，同一个安全组内的实例之间可以互相访问
     */
    private String securityGroupId;

    /**
     * 否  公网入带宽最大值，单位为Mbit/s
     */
    private Integer internetMaxBandwidthIn;

    /**
     * 否  公网出带宽最大值，单位为Mbit/s
     */
    private Integer internetMaxBandwidthOut;

    /**
     * 否  实例的密码
     */
    private String password;

    /**
     * 否  是否使用镜像预设的密码
     */
    private Boolean passwordInherit;

    /**
     * 否  实例自定义数据，需要以Base64方式编码，原始数据最多为16KB
     */
    private String userData;

    /**
     * 否  密钥对名称
     */
    private String keyPairName;

    /**
     * systemDisk
     */
    private SystemDisk systemDisk;


    /**
     * get 资源ID，如果为空，则执行创建操作，否则执行修改操作
     *
     * @return
     */
    public String getId() {
        return id;
    }

    /**
     * set 资源ID，如果为空，则执行创建操作，否则执行修改操作
     *
     * @param id
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * get 可用区,根据各云平台规范填写
     *
     * @return
     */
    public String getRegion() {
        return region;
    }

    /**
     * set 可用区,根据各云平台规范填写
     *
     * @param region
     */
    public void setRegion(String region) {
        this.region = region;
    }

    /**
     * get 云主机所属的可用区
     *
     * @return
     */
    public String getAz() {
        return az;
    }

    /**
     * set 云主机所属的可用区
     *
     * @param az
     */
    public void setAz(String az) {
        this.az = az;
    }

    /**
     * get 云主机名称
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 云主机名称
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * get 云主机
     *
     * @return
     */
    public String getHostName() {
        return hostName;
    }

    /**
     * set 云主机
     *
     * @param hostName
     */
    public void setHostName(String hostName) {
        this.hostName = hostName;
    }

    /**
     * get imageType
     *
     * @return
     */
    public ImageType getImageType() {
        return imageType;
    }

    /**
     * set imageType
     *
     * @param imageType
     */
    public void setImageType(ImageType imageType) {
        this.imageType = imageType;
    }

    /**
     * get instanceType
     *
     * @return
     */
    public InstanceType getInstanceType() {
        return instanceType;
    }

    /**
     * set instanceType
     *
     * @param instanceType
     */
    public void setInstanceType(InstanceType instanceType) {
        this.instanceType = instanceType;
    }

    /**
     * get 云主机描述
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 云主机描述
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * get 子网ID
     *
     * @return
     */
    public String getSubnetId() {
        return subnetId;
    }

    /**
     * set 子网ID
     *
     * @param subnetId
     */
    public void setSubnetId(String subnetId) {
        this.subnetId = subnetId;
    }

    /**
     * get tags
     *
     * @return
     */
    public List<Tag> getTags() {
        return tags;
    }

    /**
     * set tags
     *
     * @param tags
     */
    public void setTags(List<Tag> tags) {
        this.tags = tags;
    }

    /**
     * get 所属云提供商ID
     *
     * @return
     */
    public String getCloudID() {
        return cloudID;
    }

    /**
     * set 所属云提供商ID
     *
     * @param cloudID
     */
    public void setCloudID(String cloudID) {
        this.cloudID = cloudID;
    }

    /**
     * get 密钥对名称,jd当前只支持传入一个
     *
     * @return
     */
    public List<String> getKeyNames() {
        return keyNames;
    }

    /**
     * set 密钥对名称,jd当前只支持传入一个
     *
     * @param keyNames
     */
    public void setKeyNames(List<String> keyNames) {
        this.keyNames = keyNames;
    }

    /**
     * get 主网卡主IP绑定弹性IP的地址
     *
     * @return
     */
    public String getElasticIpAddress() {
        return elasticIpAddress;
    }

    /**
     * set 主网卡主IP绑定弹性IP的地址
     *
     * @param elasticIpAddress
     */
    public void setElasticIpAddress(String elasticIpAddress) {
        this.elasticIpAddress = elasticIpAddress;
    }

    /**
     * get 私有ip地址
     *
     * @return
     */
    public String getPrivateIpAddress() {
        return privateIpAddress;
    }

    /**
     * set 私有ip地址
     *
     * @param privateIpAddress
     */
    public void setPrivateIpAddress(String privateIpAddress) {
        this.privateIpAddress = privateIpAddress;
    }

    /**
     * get 云主机状态
     *
     * @return
     */
    public String getStatus() {
        return status;
    }

    /**
     * set 云主机状态
     *
     * @param status
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * get 创建时间
     *
     * @return
     */
    public String getCreatedTime() {
        return createdTime;
    }

    /**
     * set 创建时间
     *
     * @param createdTime
     */
    public void setCreatedTime(String createdTime) {
        this.createdTime = createdTime;
    }

    /**
     * get 镜像文件ID，启动实例时选择的镜像资源
     *
     * @return
     */
    public String getImageId() {
        return imageId;
    }

    /**
     * set 镜像文件ID，启动实例时选择的镜像资源
     *
     * @param imageId
     */
    public void setImageId(String imageId) {
        this.imageId = imageId;
    }

    /**
     * get 规格类型
     *
     * @return
     */
    public String getInstanceFlavorType() {
        return instanceFlavorType;
    }

    /**
     * set 规格类型
     *
     * @param instanceFlavorType
     */
    public void setInstanceFlavorType(String instanceFlavorType) {
        this.instanceFlavorType = instanceFlavorType;
    }

    /**
     * get 指定新创建实例所属于的安全组代码，同一个安全组内的实例之间可以互相访问
     *
     * @return
     */
    public String getSecurityGroupId() {
        return securityGroupId;
    }

    /**
     * set 指定新创建实例所属于的安全组代码，同一个安全组内的实例之间可以互相访问
     *
     * @param securityGroupId
     */
    public void setSecurityGroupId(String securityGroupId) {
        this.securityGroupId = securityGroupId;
    }

    /**
     * get 否  公网入带宽最大值，单位为Mbit/s
     *
     * @return
     */
    public Integer getInternetMaxBandwidthIn() {
        return internetMaxBandwidthIn;
    }

    /**
     * set 否  公网入带宽最大值，单位为Mbit/s
     *
     * @param internetMaxBandwidthIn
     */
    public void setInternetMaxBandwidthIn(Integer internetMaxBandwidthIn) {
        this.internetMaxBandwidthIn = internetMaxBandwidthIn;
    }

    /**
     * get 否  公网出带宽最大值，单位为Mbit/s
     *
     * @return
     */
    public Integer getInternetMaxBandwidthOut() {
        return internetMaxBandwidthOut;
    }

    /**
     * set 否  公网出带宽最大值，单位为Mbit/s
     *
     * @param internetMaxBandwidthOut
     */
    public void setInternetMaxBandwidthOut(Integer internetMaxBandwidthOut) {
        this.internetMaxBandwidthOut = internetMaxBandwidthOut;
    }

    /**
     * get 否  实例的密码
     *
     * @return
     */
    public String getPassword() {
        return password;
    }

    /**
     * set 否  实例的密码
     *
     * @param password
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * get 否  是否使用镜像预设的密码
     *
     * @return
     */
    public Boolean getPasswordInherit() {
        return passwordInherit;
    }

    /**
     * set 否  是否使用镜像预设的密码
     *
     * @param passwordInherit
     */
    public void setPasswordInherit(Boolean passwordInherit) {
        this.passwordInherit = passwordInherit;
    }

    /**
     * get 否  实例自定义数据，需要以Base64方式编码，原始数据最多为16KB
     *
     * @return
     */
    public String getUserData() {
        return userData;
    }

    /**
     * set 否  实例自定义数据，需要以Base64方式编码，原始数据最多为16KB
     *
     * @param userData
     */
    public void setUserData(String userData) {
        this.userData = userData;
    }

    /**
     * get 否  密钥对名称
     *
     * @return
     */
    public String getKeyPairName() {
        return keyPairName;
    }

    /**
     * set 否  密钥对名称
     *
     * @param keyPairName
     */
    public void setKeyPairName(String keyPairName) {
        this.keyPairName = keyPairName;
    }

    /**
     * get systemDisk
     *
     * @return
     */
    public SystemDisk getSystemDisk() {
        return systemDisk;
    }

    /**
     * set systemDisk
     *
     * @param systemDisk
     */
    public void setSystemDisk(SystemDisk systemDisk) {
        this.systemDisk = systemDisk;
    }


    /**
     * set 资源ID，如果为空，则执行创建操作，否则执行修改操作
     *
     * @param id
     */
    public CreateVm id(String id) {
        this.id = id;
        return this;
    }

    /**
     * set 可用区,根据各云平台规范填写
     *
     * @param region
     */
    public CreateVm region(String region) {
        this.region = region;
        return this;
    }

    /**
     * set 云主机所属的可用区
     *
     * @param az
     */
    public CreateVm az(String az) {
        this.az = az;
        return this;
    }

    /**
     * set 云主机名称
     *
     * @param name
     */
    public CreateVm name(String name) {
        this.name = name;
        return this;
    }

    /**
     * set 云主机
     *
     * @param hostName
     */
    public CreateVm hostName(String hostName) {
        this.hostName = hostName;
        return this;
    }

    /**
     * set imageType
     *
     * @param imageType
     */
    public CreateVm imageType(ImageType imageType) {
        this.imageType = imageType;
        return this;
    }

    /**
     * set instanceType
     *
     * @param instanceType
     */
    public CreateVm instanceType(InstanceType instanceType) {
        this.instanceType = instanceType;
        return this;
    }

    /**
     * set 云主机描述
     *
     * @param description
     */
    public CreateVm description(String description) {
        this.description = description;
        return this;
    }

    /**
     * set 子网ID
     *
     * @param subnetId
     */
    public CreateVm subnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * set tags
     *
     * @param tags
     */
    public CreateVm tags(List<Tag> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * set 所属云提供商ID
     *
     * @param cloudID
     */
    public CreateVm cloudID(String cloudID) {
        this.cloudID = cloudID;
        return this;
    }

    /**
     * set 密钥对名称,jd当前只支持传入一个
     *
     * @param keyNames
     */
    public CreateVm keyNames(List<String> keyNames) {
        this.keyNames = keyNames;
        return this;
    }

    /**
     * set 主网卡主IP绑定弹性IP的地址
     *
     * @param elasticIpAddress
     */
    public CreateVm elasticIpAddress(String elasticIpAddress) {
        this.elasticIpAddress = elasticIpAddress;
        return this;
    }

    /**
     * set 私有ip地址
     *
     * @param privateIpAddress
     */
    public CreateVm privateIpAddress(String privateIpAddress) {
        this.privateIpAddress = privateIpAddress;
        return this;
    }

    /**
     * set 云主机状态
     *
     * @param status
     */
    public CreateVm status(String status) {
        this.status = status;
        return this;
    }

    /**
     * set 创建时间
     *
     * @param createdTime
     */
    public CreateVm createdTime(String createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * set 镜像文件ID，启动实例时选择的镜像资源
     *
     * @param imageId
     */
    public CreateVm imageId(String imageId) {
        this.imageId = imageId;
        return this;
    }

    /**
     * set 规格类型
     *
     * @param instanceFlavorType
     */
    public CreateVm instanceFlavorType(String instanceFlavorType) {
        this.instanceFlavorType = instanceFlavorType;
        return this;
    }

    /**
     * set 指定新创建实例所属于的安全组代码，同一个安全组内的实例之间可以互相访问
     *
     * @param securityGroupId
     */
    public CreateVm securityGroupId(String securityGroupId) {
        this.securityGroupId = securityGroupId;
        return this;
    }

    /**
     * set 否  公网入带宽最大值，单位为Mbit/s
     *
     * @param internetMaxBandwidthIn
     */
    public CreateVm internetMaxBandwidthIn(Integer internetMaxBandwidthIn) {
        this.internetMaxBandwidthIn = internetMaxBandwidthIn;
        return this;
    }

    /**
     * set 否  公网出带宽最大值，单位为Mbit/s
     *
     * @param internetMaxBandwidthOut
     */
    public CreateVm internetMaxBandwidthOut(Integer internetMaxBandwidthOut) {
        this.internetMaxBandwidthOut = internetMaxBandwidthOut;
        return this;
    }

    /**
     * set 否  实例的密码
     *
     * @param password
     */
    public CreateVm password(String password) {
        this.password = password;
        return this;
    }

    /**
     * set 否  是否使用镜像预设的密码
     *
     * @param passwordInherit
     */
    public CreateVm passwordInherit(Boolean passwordInherit) {
        this.passwordInherit = passwordInherit;
        return this;
    }

    /**
     * set 否  实例自定义数据，需要以Base64方式编码，原始数据最多为16KB
     *
     * @param userData
     */
    public CreateVm userData(String userData) {
        this.userData = userData;
        return this;
    }

    /**
     * set 否  密钥对名称
     *
     * @param keyPairName
     */
    public CreateVm keyPairName(String keyPairName) {
        this.keyPairName = keyPairName;
        return this;
    }

    /**
     * set systemDisk
     *
     * @param systemDisk
     */
    public CreateVm systemDisk(SystemDisk systemDisk) {
        this.systemDisk = systemDisk;
        return this;
    }


    /**
     * add item to tags
     *
     * @param tag
     */
    public void addTag(Tag tag) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(tag);
    }

    /**
     * add item to 密钥对名称,jd当前只支持传入一个
     *
     * @param keyName
     */
    public void addKeyName(String keyName) {
        if (this.keyNames == null) {
            this.keyNames = new ArrayList<>();
        }
        this.keyNames.add(keyName);
    }

}