/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.iothub.model;


/**
 * action
 */
public class Action  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * actionId
     */
    private String actionId;

    /**
     * 动作类型，包括：handle（数据处理）、forward（转发数据）和failure（转发失败）
     */
    private String actionType;

    /**
     * 操作类型,包括：JCQ、JsScript、Kafka、RabbitMq、RDS和ES
     */
    private String operationType;

    /**
     * 规则动作的配置信息, Configuration是JSONObject格式，会根据不同的规则动作，形成不同的JSONObject格式，即不同的配置信息格式。
     */
    private Object configuration;


    /**
     * get actionId
     *
     * @return
     */
    public String getActionId() {
        return actionId;
    }

    /**
     * set actionId
     *
     * @param actionId
     */
    public void setActionId(String actionId) {
        this.actionId = actionId;
    }

    /**
     * get 动作类型，包括：handle（数据处理）、forward（转发数据）和failure（转发失败）
     *
     * @return
     */
    public String getActionType() {
        return actionType;
    }

    /**
     * set 动作类型，包括：handle（数据处理）、forward（转发数据）和failure（转发失败）
     *
     * @param actionType
     */
    public void setActionType(String actionType) {
        this.actionType = actionType;
    }

    /**
     * get 操作类型,包括：JCQ、JsScript、Kafka、RabbitMq、RDS和ES
     *
     * @return
     */
    public String getOperationType() {
        return operationType;
    }

    /**
     * set 操作类型,包括：JCQ、JsScript、Kafka、RabbitMq、RDS和ES
     *
     * @param operationType
     */
    public void setOperationType(String operationType) {
        this.operationType = operationType;
    }

    /**
     * get 规则动作的配置信息, Configuration是JSONObject格式，会根据不同的规则动作，形成不同的JSONObject格式，即不同的配置信息格式。
     *
     * @return
     */
    public Object getConfiguration() {
        return configuration;
    }

    /**
     * set 规则动作的配置信息, Configuration是JSONObject格式，会根据不同的规则动作，形成不同的JSONObject格式，即不同的配置信息格式。
     *
     * @param configuration
     */
    public void setConfiguration(Object configuration) {
        this.configuration = configuration;
    }


    /**
     * set actionId
     *
     * @param actionId
     */
    public Action actionId(String actionId) {
        this.actionId = actionId;
        return this;
    }

    /**
     * set 动作类型，包括：handle（数据处理）、forward（转发数据）和failure（转发失败）
     *
     * @param actionType
     */
    public Action actionType(String actionType) {
        this.actionType = actionType;
        return this;
    }

    /**
     * set 操作类型,包括：JCQ、JsScript、Kafka、RabbitMq、RDS和ES
     *
     * @param operationType
     */
    public Action operationType(String operationType) {
        this.operationType = operationType;
        return this;
    }

    /**
     * set 规则动作的配置信息, Configuration是JSONObject格式，会根据不同的规则动作，形成不同的JSONObject格式，即不同的配置信息格式。
     *
     * @param configuration
     */
    public Action configuration(Object configuration) {
        this.configuration = configuration;
        return this;
    }


}