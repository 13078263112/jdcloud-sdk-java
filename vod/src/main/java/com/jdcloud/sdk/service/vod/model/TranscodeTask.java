/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Video Transcode
 * 媒体处理 - 视频转码
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.vod.model;

import java.util.List;
import java.util.ArrayList;

/**
 * transcodeTask
 */
public class TranscodeTask  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 任务ID
     */
    private Long taskId;

    /**
     * 视频ID
     */
    private String videoId;

    /**
     * 转码模板ID
     */
    private Long templateId;

    /**
     * 水印ID列表
     */
    private List<Long> watermarkIds;


    /**
     * get 任务ID
     *
     * @return
     */
    public Long getTaskId() {
        return taskId;
    }

    /**
     * set 任务ID
     *
     * @param taskId
     */
    public void setTaskId(Long taskId) {
        this.taskId = taskId;
    }

    /**
     * get 视频ID
     *
     * @return
     */
    public String getVideoId() {
        return videoId;
    }

    /**
     * set 视频ID
     *
     * @param videoId
     */
    public void setVideoId(String videoId) {
        this.videoId = videoId;
    }

    /**
     * get 转码模板ID
     *
     * @return
     */
    public Long getTemplateId() {
        return templateId;
    }

    /**
     * set 转码模板ID
     *
     * @param templateId
     */
    public void setTemplateId(Long templateId) {
        this.templateId = templateId;
    }

    /**
     * get 水印ID列表
     *
     * @return
     */
    public List<Long> getWatermarkIds() {
        return watermarkIds;
    }

    /**
     * set 水印ID列表
     *
     * @param watermarkIds
     */
    public void setWatermarkIds(List<Long> watermarkIds) {
        this.watermarkIds = watermarkIds;
    }


    /**
     * set 任务ID
     *
     * @param taskId
     */
    public TranscodeTask taskId(Long taskId) {
        this.taskId = taskId;
        return this;
    }

    /**
     * set 视频ID
     *
     * @param videoId
     */
    public TranscodeTask videoId(String videoId) {
        this.videoId = videoId;
        return this;
    }

    /**
     * set 转码模板ID
     *
     * @param templateId
     */
    public TranscodeTask templateId(Long templateId) {
        this.templateId = templateId;
        return this;
    }

    /**
     * set 水印ID列表
     *
     * @param watermarkIds
     */
    public TranscodeTask watermarkIds(List<Long> watermarkIds) {
        this.watermarkIds = watermarkIds;
        return this;
    }


    /**
     * add item to 水印ID列表
     *
     * @param watermarkId
     */
    public void addWatermarkId(Long watermarkId) {
        if (this.watermarkIds == null) {
            this.watermarkIds = new ArrayList<>();
        }
        this.watermarkIds.add(watermarkId);
    }

}