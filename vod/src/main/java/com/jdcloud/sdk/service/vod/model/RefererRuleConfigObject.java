/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.vod.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;

/**
 * Referer防盗链规则配置对象
 */
public class RefererRuleConfigObject  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 启用策略。取值范围：
  denial - 拒绝
  allowance - 允许

     * Required:true
     */
    @Required
    private String strategy;

    /**
     * Referer域名列表
     * Required:true
     */
    @Required
    private List<String> domains;

    /**
     * 是否允许请求头 Referer 为空，如允许浏览器直接访问等
     * Required:true
     */
    @Required
    private Boolean allowBlank;


    /**
     * get 启用策略。取值范围：
  denial - 拒绝
  allowance - 允许

     *
     * @return
     */
    public String getStrategy() {
        return strategy;
    }

    /**
     * set 启用策略。取值范围：
  denial - 拒绝
  allowance - 允许

     *
     * @param strategy
     */
    public void setStrategy(String strategy) {
        this.strategy = strategy;
    }

    /**
     * get Referer域名列表
     *
     * @return
     */
    public List<String> getDomains() {
        return domains;
    }

    /**
     * set Referer域名列表
     *
     * @param domains
     */
    public void setDomains(List<String> domains) {
        this.domains = domains;
    }

    /**
     * get 是否允许请求头 Referer 为空，如允许浏览器直接访问等
     *
     * @return
     */
    public Boolean getAllowBlank() {
        return allowBlank;
    }

    /**
     * set 是否允许请求头 Referer 为空，如允许浏览器直接访问等
     *
     * @param allowBlank
     */
    public void setAllowBlank(Boolean allowBlank) {
        this.allowBlank = allowBlank;
    }


    /**
     * set 启用策略。取值范围：
  denial - 拒绝
  allowance - 允许

     *
     * @param strategy
     */
    public RefererRuleConfigObject strategy(String strategy) {
        this.strategy = strategy;
        return this;
    }

    /**
     * set Referer域名列表
     *
     * @param domains
     */
    public RefererRuleConfigObject domains(List<String> domains) {
        this.domains = domains;
        return this;
    }

    /**
     * set 是否允许请求头 Referer 为空，如允许浏览器直接访问等
     *
     * @param allowBlank
     */
    public RefererRuleConfigObject allowBlank(Boolean allowBlank) {
        this.allowBlank = allowBlank;
        return this;
    }


    /**
     * add item to Referer域名列表
     *
     * @param domain
     */
    public void addDomain(String domain) {
        if (this.domains == null) {
            this.domains = new ArrayList<>();
        }
        this.domains.add(domain);
    }

}